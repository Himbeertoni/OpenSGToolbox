/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BlendGeometry!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &BlendGeometryBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 BlendGeometryBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
BlendGeometryPtr BlendGeometryBase::create(void) 
{
    BlendGeometryPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = BlendGeometryPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
BlendGeometryPtr BlendGeometryBase::createEmpty(void) 
{ 
    BlendGeometryPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the BlendGeometry::_mfBlendAmounts field.
inline
MFReal32 *BlendGeometryBase::getMFBlendAmounts(void)
{
    return &_mfBlendAmounts;
}

//! Get the BlendGeometry::_sfBasePositions field.
inline
SFGeoPositionsPtr *BlendGeometryBase::getSFBasePositions(void)
{
    return &_sfBasePositions;
}

//! Get the BlendGeometry::_sfBaseNormals field.
inline
SFGeoNormalsPtr *BlendGeometryBase::getSFBaseNormals(void)
{
    return &_sfBaseNormals;
}

//! Get the BlendGeometry::_sfBaseColors field.
inline
SFGeoColorsPtr *BlendGeometryBase::getSFBaseColors(void)
{
    return &_sfBaseColors;
}

//! Get the BlendGeometry::_sfBaseSecondaryColors field.
inline
SFGeoColorsPtr *BlendGeometryBase::getSFBaseSecondaryColors(void)
{
    return &_sfBaseSecondaryColors;
}

//! Get the BlendGeometry::_sfBaseTexCoords field.
inline
SFGeoTexCoordsPtr *BlendGeometryBase::getSFBaseTexCoords(void)
{
    return &_sfBaseTexCoords;
}

//! Get the BlendGeometry::_sfBaseTexCoords1 field.
inline
SFGeoTexCoordsPtr *BlendGeometryBase::getSFBaseTexCoords1(void)
{
    return &_sfBaseTexCoords1;
}

//! Get the BlendGeometry::_sfBaseTexCoords2 field.
inline
SFGeoTexCoordsPtr *BlendGeometryBase::getSFBaseTexCoords2(void)
{
    return &_sfBaseTexCoords2;
}

//! Get the BlendGeometry::_sfBaseTexCoords3 field.
inline
SFGeoTexCoordsPtr *BlendGeometryBase::getSFBaseTexCoords3(void)
{
    return &_sfBaseTexCoords3;
}

//! Get the BlendGeometry::_mfGeoPositionDifferenceSets field.
inline
MFGeoPositionDifferenceSetPtr *BlendGeometryBase::getMFGeoPositionDifferenceSets(void)
{
    return &_mfGeoPositionDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoNormalDifferenceSets field.
inline
MFGeoNormalDifferenceSetPtr *BlendGeometryBase::getMFGeoNormalDifferenceSets(void)
{
    return &_mfGeoNormalDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoColorDifferenceSets field.
inline
MFGeoColorDifferenceSetPtr *BlendGeometryBase::getMFGeoColorDifferenceSets(void)
{
    return &_mfGeoColorDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoSecondaryColorDifferenceSets field.
inline
MFGeoColorDifferenceSetPtr *BlendGeometryBase::getMFGeoSecondaryColorDifferenceSets(void)
{
    return &_mfGeoSecondaryColorDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoordDifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr *BlendGeometryBase::getMFGeoTexCoordDifferenceSets(void)
{
    return &_mfGeoTexCoordDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord1DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr *BlendGeometryBase::getMFGeoTexCoord1DifferenceSets(void)
{
    return &_mfGeoTexCoord1DifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord2DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr *BlendGeometryBase::getMFGeoTexCoord2DifferenceSets(void)
{
    return &_mfGeoTexCoord2DifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord3DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr *BlendGeometryBase::getMFGeoTexCoord3DifferenceSets(void)
{
    return &_mfGeoTexCoord3DifferenceSets;
}


//! Get the value of the BlendGeometry::_sfBasePositions field.
inline
GeoPositionsPtr &BlendGeometryBase::getBasePositions(void)
{
    return _sfBasePositions.getValue();
}

//! Get the value of the BlendGeometry::_sfBasePositions field.
inline
const GeoPositionsPtr &BlendGeometryBase::getBasePositions(void) const
{
    return _sfBasePositions.getValue();
}

//! Set the value of the BlendGeometry::_sfBasePositions field.
inline
void BlendGeometryBase::setBasePositions(const GeoPositionsPtr &value)
{
    _sfBasePositions.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseNormals field.
inline
GeoNormalsPtr &BlendGeometryBase::getBaseNormals(void)
{
    return _sfBaseNormals.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseNormals field.
inline
const GeoNormalsPtr &BlendGeometryBase::getBaseNormals(void) const
{
    return _sfBaseNormals.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseNormals field.
inline
void BlendGeometryBase::setBaseNormals(const GeoNormalsPtr &value)
{
    _sfBaseNormals.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseColors field.
inline
GeoColorsPtr &BlendGeometryBase::getBaseColors(void)
{
    return _sfBaseColors.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseColors field.
inline
const GeoColorsPtr &BlendGeometryBase::getBaseColors(void) const
{
    return _sfBaseColors.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseColors field.
inline
void BlendGeometryBase::setBaseColors(const GeoColorsPtr &value)
{
    _sfBaseColors.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseSecondaryColors field.
inline
GeoColorsPtr &BlendGeometryBase::getBaseSecondaryColors(void)
{
    return _sfBaseSecondaryColors.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseSecondaryColors field.
inline
const GeoColorsPtr &BlendGeometryBase::getBaseSecondaryColors(void) const
{
    return _sfBaseSecondaryColors.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseSecondaryColors field.
inline
void BlendGeometryBase::setBaseSecondaryColors(const GeoColorsPtr &value)
{
    _sfBaseSecondaryColors.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords field.
inline
GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords(void)
{
    return _sfBaseTexCoords.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords field.
inline
const GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords(void) const
{
    return _sfBaseTexCoords.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseTexCoords field.
inline
void BlendGeometryBase::setBaseTexCoords(const GeoTexCoordsPtr &value)
{
    _sfBaseTexCoords.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords1 field.
inline
GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords1(void)
{
    return _sfBaseTexCoords1.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords1 field.
inline
const GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords1(void) const
{
    return _sfBaseTexCoords1.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseTexCoords1 field.
inline
void BlendGeometryBase::setBaseTexCoords1(const GeoTexCoordsPtr &value)
{
    _sfBaseTexCoords1.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords2 field.
inline
GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords2(void)
{
    return _sfBaseTexCoords2.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords2 field.
inline
const GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords2(void) const
{
    return _sfBaseTexCoords2.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseTexCoords2 field.
inline
void BlendGeometryBase::setBaseTexCoords2(const GeoTexCoordsPtr &value)
{
    _sfBaseTexCoords2.setValue(value);
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords3 field.
inline
GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords3(void)
{
    return _sfBaseTexCoords3.getValue();
}

//! Get the value of the BlendGeometry::_sfBaseTexCoords3 field.
inline
const GeoTexCoordsPtr &BlendGeometryBase::getBaseTexCoords3(void) const
{
    return _sfBaseTexCoords3.getValue();
}

//! Set the value of the BlendGeometry::_sfBaseTexCoords3 field.
inline
void BlendGeometryBase::setBaseTexCoords3(const GeoTexCoordsPtr &value)
{
    _sfBaseTexCoords3.setValue(value);
}


//! Get the value of the \a index element the BlendGeometry::_mfBlendAmounts field.
inline
Real32 &BlendGeometryBase::getBlendAmounts(const UInt32 index)
{
    return _mfBlendAmounts[index];
}

//! Get the BlendGeometry::_mfBlendAmounts field.
inline
MFReal32 &BlendGeometryBase::getBlendAmounts(void)
{
    return _mfBlendAmounts;
}

//! Get the BlendGeometry::_mfBlendAmounts field.
inline
const MFReal32 &BlendGeometryBase::getBlendAmounts(void) const
{
    return _mfBlendAmounts;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoPositionDifferenceSets field.
inline
GeoPositionDifferenceSetPtr &BlendGeometryBase::getGeoPositionDifferenceSets(const UInt32 index)
{
    return _mfGeoPositionDifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoPositionDifferenceSets field.
inline
MFGeoPositionDifferenceSetPtr &BlendGeometryBase::getGeoPositionDifferenceSets(void)
{
    return _mfGeoPositionDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoPositionDifferenceSets field.
inline
const MFGeoPositionDifferenceSetPtr &BlendGeometryBase::getGeoPositionDifferenceSets(void) const
{
    return _mfGeoPositionDifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoNormalDifferenceSets field.
inline
GeoNormalDifferenceSetPtr &BlendGeometryBase::getGeoNormalDifferenceSets(const UInt32 index)
{
    return _mfGeoNormalDifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoNormalDifferenceSets field.
inline
MFGeoNormalDifferenceSetPtr &BlendGeometryBase::getGeoNormalDifferenceSets(void)
{
    return _mfGeoNormalDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoNormalDifferenceSets field.
inline
const MFGeoNormalDifferenceSetPtr &BlendGeometryBase::getGeoNormalDifferenceSets(void) const
{
    return _mfGeoNormalDifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoColorDifferenceSets field.
inline
GeoColorDifferenceSetPtr &BlendGeometryBase::getGeoColorDifferenceSets(const UInt32 index)
{
    return _mfGeoColorDifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoColorDifferenceSets field.
inline
MFGeoColorDifferenceSetPtr &BlendGeometryBase::getGeoColorDifferenceSets(void)
{
    return _mfGeoColorDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoColorDifferenceSets field.
inline
const MFGeoColorDifferenceSetPtr &BlendGeometryBase::getGeoColorDifferenceSets(void) const
{
    return _mfGeoColorDifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoSecondaryColorDifferenceSets field.
inline
GeoColorDifferenceSetPtr &BlendGeometryBase::getGeoSecondaryColorDifferenceSets(const UInt32 index)
{
    return _mfGeoSecondaryColorDifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoSecondaryColorDifferenceSets field.
inline
MFGeoColorDifferenceSetPtr &BlendGeometryBase::getGeoSecondaryColorDifferenceSets(void)
{
    return _mfGeoSecondaryColorDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoSecondaryColorDifferenceSets field.
inline
const MFGeoColorDifferenceSetPtr &BlendGeometryBase::getGeoSecondaryColorDifferenceSets(void) const
{
    return _mfGeoSecondaryColorDifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoTexCoordDifferenceSets field.
inline
GeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoordDifferenceSets(const UInt32 index)
{
    return _mfGeoTexCoordDifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoTexCoordDifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoordDifferenceSets(void)
{
    return _mfGeoTexCoordDifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoordDifferenceSets field.
inline
const MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoordDifferenceSets(void) const
{
    return _mfGeoTexCoordDifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoTexCoord1DifferenceSets field.
inline
GeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord1DifferenceSets(const UInt32 index)
{
    return _mfGeoTexCoord1DifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoTexCoord1DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord1DifferenceSets(void)
{
    return _mfGeoTexCoord1DifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord1DifferenceSets field.
inline
const MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord1DifferenceSets(void) const
{
    return _mfGeoTexCoord1DifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoTexCoord2DifferenceSets field.
inline
GeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord2DifferenceSets(const UInt32 index)
{
    return _mfGeoTexCoord2DifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoTexCoord2DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord2DifferenceSets(void)
{
    return _mfGeoTexCoord2DifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord2DifferenceSets field.
inline
const MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord2DifferenceSets(void) const
{
    return _mfGeoTexCoord2DifferenceSets;
}

//! Get the value of the \a index element the BlendGeometry::_mfGeoTexCoord3DifferenceSets field.
inline
GeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord3DifferenceSets(const UInt32 index)
{
    return _mfGeoTexCoord3DifferenceSets[index];
}

//! Get the BlendGeometry::_mfGeoTexCoord3DifferenceSets field.
inline
MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord3DifferenceSets(void)
{
    return _mfGeoTexCoord3DifferenceSets;
}

//! Get the BlendGeometry::_mfGeoTexCoord3DifferenceSets field.
inline
const MFGeoTexCoordDifferenceSetPtr &BlendGeometryBase::getGeoTexCoord3DifferenceSets(void) const
{
    return _mfGeoTexCoord3DifferenceSets;
}

OSG_END_NAMESPACE

#define OSGBLENDGEOMETRYBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

