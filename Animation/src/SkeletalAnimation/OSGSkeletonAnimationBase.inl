/*---------------------------------------------------------------------------*\
 *                       OpenSG ToolBox Animation                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                   Authors: David Kabala, John Morales                     *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkeletonAnimation!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SkeletonAnimationBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 SkeletonAnimationBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
SkeletonAnimationPtr SkeletonAnimationBase::create(void) 
{
    SkeletonAnimationPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = SkeletonAnimationPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
SkeletonAnimationPtr SkeletonAnimationBase::createEmpty(void) 
{ 
    SkeletonAnimationPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the SkeletonAnimation::_mfRotationAnimators field.
inline
MFKeyframeAnimatorPtr *SkeletonAnimationBase::getMFRotationAnimators(void)
{
    return &_mfRotationAnimators;
}

//! Get the SkeletonAnimation::_mfRotationAnimatorBones field.
inline
MFBonePtr *SkeletonAnimationBase::getMFRotationAnimatorBones(void)
{
    return &_mfRotationAnimatorBones;
}

//! Get the SkeletonAnimation::_mfTranslationAnimators field.
inline
MFKeyframeAnimatorPtr *SkeletonAnimationBase::getMFTranslationAnimators(void)
{
    return &_mfTranslationAnimators;
}

//! Get the SkeletonAnimation::_mfLengthAnimatorBones field.
inline
MFBonePtr *SkeletonAnimationBase::getMFLengthAnimatorBones(void)
{
    return &_mfLengthAnimatorBones;
}

//! Get the SkeletonAnimation::_mfLengthAnimators field.
inline
MFKeyframeAnimatorPtr *SkeletonAnimationBase::getMFLengthAnimators(void)
{
    return &_mfLengthAnimators;
}

//! Get the SkeletonAnimation::_mfTranslationAnimatorBones field.
inline
MFBonePtr *SkeletonAnimationBase::getMFTranslationAnimatorBones(void)
{
    return &_mfTranslationAnimatorBones;
}

//! Get the SkeletonAnimation::_sfSkeleton field.
inline
SFSkeletonPtr *SkeletonAnimationBase::getSFSkeleton(void)
{
    return &_sfSkeleton;
}

//! Get the SkeletonAnimation::_sfInterpolationType field.
inline
SFUInt32 *SkeletonAnimationBase::getSFInterpolationType(void)
{
    return &_sfInterpolationType;
}


//! Get the value of the SkeletonAnimation::_sfSkeleton field.
inline
SkeletonPtr &SkeletonAnimationBase::getSkeleton(void)
{
    return _sfSkeleton.getValue();
}

//! Get the value of the SkeletonAnimation::_sfSkeleton field.
inline
const SkeletonPtr &SkeletonAnimationBase::getSkeleton(void) const
{
    return _sfSkeleton.getValue();
}

//! Set the value of the SkeletonAnimation::_sfSkeleton field.
inline
void SkeletonAnimationBase::setSkeleton(const SkeletonPtr &value)
{
    _sfSkeleton.setValue(value);
}

//! Get the value of the SkeletonAnimation::_sfInterpolationType field.
inline
UInt32 &SkeletonAnimationBase::getInterpolationType(void)
{
    return _sfInterpolationType.getValue();
}

//! Get the value of the SkeletonAnimation::_sfInterpolationType field.
inline
const UInt32 &SkeletonAnimationBase::getInterpolationType(void) const
{
    return _sfInterpolationType.getValue();
}

//! Set the value of the SkeletonAnimation::_sfInterpolationType field.
inline
void SkeletonAnimationBase::setInterpolationType(const UInt32 &value)
{
    _sfInterpolationType.setValue(value);
}


//! Get the value of the \a index element the SkeletonAnimation::_mfRotationAnimators field.
inline
KeyframeAnimatorPtr &SkeletonAnimationBase::getRotationAnimators(const UInt32 index)
{
    return _mfRotationAnimators[index];
}

//! Get the SkeletonAnimation::_mfRotationAnimators field.
inline
MFKeyframeAnimatorPtr &SkeletonAnimationBase::getRotationAnimators(void)
{
    return _mfRotationAnimators;
}

//! Get the SkeletonAnimation::_mfRotationAnimators field.
inline
const MFKeyframeAnimatorPtr &SkeletonAnimationBase::getRotationAnimators(void) const
{
    return _mfRotationAnimators;
}

//! Get the value of the \a index element the SkeletonAnimation::_mfRotationAnimatorBones field.
inline
BonePtr &SkeletonAnimationBase::getRotationAnimatorBones(const UInt32 index)
{
    return _mfRotationAnimatorBones[index];
}

//! Get the SkeletonAnimation::_mfRotationAnimatorBones field.
inline
MFBonePtr &SkeletonAnimationBase::getRotationAnimatorBones(void)
{
    return _mfRotationAnimatorBones;
}

//! Get the SkeletonAnimation::_mfRotationAnimatorBones field.
inline
const MFBonePtr &SkeletonAnimationBase::getRotationAnimatorBones(void) const
{
    return _mfRotationAnimatorBones;
}

//! Get the value of the \a index element the SkeletonAnimation::_mfTranslationAnimators field.
inline
KeyframeAnimatorPtr &SkeletonAnimationBase::getTranslationAnimators(const UInt32 index)
{
    return _mfTranslationAnimators[index];
}

//! Get the SkeletonAnimation::_mfTranslationAnimators field.
inline
MFKeyframeAnimatorPtr &SkeletonAnimationBase::getTranslationAnimators(void)
{
    return _mfTranslationAnimators;
}

//! Get the SkeletonAnimation::_mfTranslationAnimators field.
inline
const MFKeyframeAnimatorPtr &SkeletonAnimationBase::getTranslationAnimators(void) const
{
    return _mfTranslationAnimators;
}

//! Get the value of the \a index element the SkeletonAnimation::_mfLengthAnimatorBones field.
inline
BonePtr &SkeletonAnimationBase::getLengthAnimatorBones(const UInt32 index)
{
    return _mfLengthAnimatorBones[index];
}

//! Get the SkeletonAnimation::_mfLengthAnimatorBones field.
inline
MFBonePtr &SkeletonAnimationBase::getLengthAnimatorBones(void)
{
    return _mfLengthAnimatorBones;
}

//! Get the SkeletonAnimation::_mfLengthAnimatorBones field.
inline
const MFBonePtr &SkeletonAnimationBase::getLengthAnimatorBones(void) const
{
    return _mfLengthAnimatorBones;
}

//! Get the value of the \a index element the SkeletonAnimation::_mfLengthAnimators field.
inline
KeyframeAnimatorPtr &SkeletonAnimationBase::getLengthAnimators(const UInt32 index)
{
    return _mfLengthAnimators[index];
}

//! Get the SkeletonAnimation::_mfLengthAnimators field.
inline
MFKeyframeAnimatorPtr &SkeletonAnimationBase::getLengthAnimators(void)
{
    return _mfLengthAnimators;
}

//! Get the SkeletonAnimation::_mfLengthAnimators field.
inline
const MFKeyframeAnimatorPtr &SkeletonAnimationBase::getLengthAnimators(void) const
{
    return _mfLengthAnimators;
}

//! Get the value of the \a index element the SkeletonAnimation::_mfTranslationAnimatorBones field.
inline
BonePtr &SkeletonAnimationBase::getTranslationAnimatorBones(const UInt32 index)
{
    return _mfTranslationAnimatorBones[index];
}

//! Get the SkeletonAnimation::_mfTranslationAnimatorBones field.
inline
MFBonePtr &SkeletonAnimationBase::getTranslationAnimatorBones(void)
{
    return _mfTranslationAnimatorBones;
}

//! Get the SkeletonAnimation::_mfTranslationAnimatorBones field.
inline
const MFBonePtr &SkeletonAnimationBase::getTranslationAnimatorBones(void) const
{
    return _mfTranslationAnimatorBones;
}

OSG_END_NAMESPACE

#define OSGSKELETONANIMATIONBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

