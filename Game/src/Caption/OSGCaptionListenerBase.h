/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CaptionListener
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGCAPTIONLISTENERBASE_H_
#define _OSGCAPTIONLISTENERBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGGameDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGCaption.h" // Parent

#include <OpenSG/OSGReal32Fields.h> // StartStamp type
#include <OpenSG/OSGReal32Fields.h> // EndStamp type
#include <OpenSG/OSGUInt32Fields.h> // CurrentSegmentIndex type
#include <OpenSG/OSGReal32Fields.h> // CurrentSegmentEndStamp type
#include <OpenSG/OSGSoundFields.h> // CaptionDialogSound type

#include "OSGCaptionListenerFields.h"

OSG_BEGIN_NAMESPACE

class CaptionListener;
class BinaryDataHandler;

//! \brief CaptionListener Base Class.

class OSG_GAMELIB_DLLMAPPING CaptionListenerBase : public Caption
{
  private:

    typedef Caption    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef CaptionListenerPtr  Ptr;

    enum
    {
        StartStampFieldId             = Inherited::NextFieldId,
        EndStampFieldId               = StartStampFieldId             + 1,
        CurrentSegmentIndexFieldId    = EndStampFieldId               + 1,
        CurrentSegmentEndStampFieldId = CurrentSegmentIndexFieldId    + 1,
        CaptionDialogSoundFieldId     = CurrentSegmentEndStampFieldId + 1,
        NextFieldId                   = CaptionDialogSoundFieldId     + 1
    };

    static const OSG::BitVector StartStampFieldMask;
    static const OSG::BitVector EndStampFieldMask;
    static const OSG::BitVector CurrentSegmentIndexFieldMask;
    static const OSG::BitVector CurrentSegmentEndStampFieldMask;
    static const OSG::BitVector CaptionDialogSoundFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           MFReal32            *getMFStartStamp     (void);
           MFReal32            *getMFEndStamp       (void);
           SFUInt32            *getSFCurrentSegmentIndex(void);
           SFReal32            *getSFCurrentSegmentEndStamp(void);
           SFSoundPtr          *getSFCaptionDialogSound(void);

           UInt32              &getCurrentSegmentIndex(void);
     const UInt32              &getCurrentSegmentIndex(void) const;
           Real32              &getCurrentSegmentEndStamp(void);
     const Real32              &getCurrentSegmentEndStamp(void) const;
           SoundPtr            &getCaptionDialogSound(void);
     const SoundPtr            &getCaptionDialogSound(void) const;
           Real32              &getStartStamp     (const UInt32 index);
           MFReal32            &getStartStamp     (void);
     const MFReal32            &getStartStamp     (void) const;
           Real32              &getEndStamp       (const UInt32 index);
           MFReal32            &getEndStamp       (void);
     const MFReal32            &getEndStamp       (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setCurrentSegmentIndex( const UInt32 &value );
     void setCurrentSegmentEndStamp( const Real32 &value );
     void setCaptionDialogSound( const SoundPtr &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFReal32            _mfStartStamp;
    MFReal32            _mfEndStamp;
    SFUInt32            _sfCurrentSegmentIndex;
    SFReal32            _sfCurrentSegmentEndStamp;
    SFSoundPtr          _sfCaptionDialogSound;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    CaptionListenerBase(void);
    CaptionListenerBase(const CaptionListenerBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~CaptionListenerBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      CaptionListenerBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      CaptionListenerBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const CaptionListenerBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef CaptionListenerBase *CaptionListenerBaseP;

typedef osgIF<CaptionListenerBase::isNodeCore,
              CoredNodePtr<CaptionListener>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet CaptionListenerNodePtr;

typedef RefPtr<CaptionListenerPtr> CaptionListenerRefPtr;

OSG_END_NAMESPACE

#define OSGCAPTIONLISTENERBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.40 2005/07/20 00:10:14 vossg Exp $"

#endif /* _OSGCAPTIONLISTENERBASE_H_ */
