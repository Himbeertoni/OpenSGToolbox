/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystem
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPARTICLESYSTEMBASE_H_
#define _OSGPARTICLESYSTEMBASE_H_
#ifdef __sgi
#pragma once
#endif

#include <OpenSG/OSGConfig.h>
#include "ParticleSystem/OSGParticleSystemConfig.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include <OpenSG/OSGMaterialDrawable.h> // Parent

#include <OpenSG/OSGUInt32Fields.h> // DrawMode type
#include <OpenSG/OSGBoolFields.h> // UseNormalAsObjectSpaceRotation type
#include <OpenSG/OSGReal32Fields.h> // QuadWidth type
#include <OpenSG/OSGReal32Fields.h> // QuadHeight type
#include <OpenSG/OSGUInt32Fields.h> // DrawOrder type
#include "OSGSFBaseListTypes.h"
#include <OpenSG/OSGBoolFields.h> // Dynamic type

#include "OSGParticleSystemFields.h"

OSG_BEGIN_NAMESPACE

class ParticleSystem;
class BinaryDataHandler;

//! \brief ParticleSystem Base Class.

class OSG_PARTICLE_SYSTEM_CLASS_API ParticleSystemBase : public MaterialDrawable
{
  private:

    typedef MaterialDrawable    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef ParticleSystemPtr  Ptr;

    enum
    {
        DrawModeFieldId                       = Inherited::NextFieldId,
        UseNormalAsObjectSpaceRotationFieldId = DrawModeFieldId                       + 1,
        QuadWidthFieldId                      = UseNormalAsObjectSpaceRotationFieldId + 1,
        QuadHeightFieldId                     = QuadWidthFieldId                      + 1,
        DrawOrderFieldId                      = QuadHeightFieldId                     + 1,
        PositionsFieldId                      = DrawOrderFieldId                      + 1,
        SecPositionsFieldId                   = PositionsFieldId                      + 1,
        NormalsFieldId                        = SecPositionsFieldId                   + 1,
        ColorsFieldId                         = NormalsFieldId                        + 1,
        SizesFieldId                          = ColorsFieldId                         + 1,
        LifespanFieldId                       = SizesFieldId                          + 1,
        AgeFieldId                            = LifespanFieldId                       + 1,
        VelocitiesFieldId                     = AgeFieldId                            + 1,
        SecVelocitiesFieldId                  = VelocitiesFieldId                     + 1,
        AccelerationsFieldId                  = SecVelocitiesFieldId                  + 1,
        PropertiesFieldId                     = AccelerationsFieldId                  + 1,
        DynamicFieldId                        = PropertiesFieldId                     + 1,
        NextFieldId                           = DynamicFieldId                        + 1
    };

    static const OSG::BitVector DrawModeFieldMask;
    static const OSG::BitVector UseNormalAsObjectSpaceRotationFieldMask;
    static const OSG::BitVector QuadWidthFieldMask;
    static const OSG::BitVector QuadHeightFieldMask;
    static const OSG::BitVector DrawOrderFieldMask;
    static const OSG::BitVector PositionsFieldMask;
    static const OSG::BitVector SecPositionsFieldMask;
    static const OSG::BitVector NormalsFieldMask;
    static const OSG::BitVector ColorsFieldMask;
    static const OSG::BitVector SizesFieldMask;
    static const OSG::BitVector LifespanFieldMask;
    static const OSG::BitVector AgeFieldMask;
    static const OSG::BitVector VelocitiesFieldMask;
    static const OSG::BitVector SecVelocitiesFieldMask;
    static const OSG::BitVector AccelerationsFieldMask;
    static const OSG::BitVector PropertiesFieldMask;
    static const OSG::BitVector DynamicFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFUInt32            *getSFDrawMode       (void);
           SFBool              *getSFUseNormalAsObjectSpaceRotation(void);
           SFReal32            *getSFQuadWidth      (void);
           SFReal32            *getSFQuadHeight     (void);
           SFUInt32            *getSFDrawOrder      (void);
           SFBool              *getSFDynamic        (void);

           UInt32              &getDrawMode       (void);
     const UInt32              &getDrawMode       (void) const;
           bool                &getUseNormalAsObjectSpaceRotation(void);
     const bool                &getUseNormalAsObjectSpaceRotation(void) const;
           Real32              &getQuadWidth      (void);
     const Real32              &getQuadWidth      (void) const;
           Real32              &getQuadHeight     (void);
     const Real32              &getQuadHeight     (void) const;
           UInt32              &getDrawOrder      (void);
     const UInt32              &getDrawOrder      (void) const;
           bool                &getDynamic        (void);
     const bool                &getDynamic        (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setDrawMode       ( const UInt32 &value );
     void setUseNormalAsObjectSpaceRotation( const bool &value );
     void setQuadWidth      ( const Real32 &value );
     void setQuadHeight     ( const Real32 &value );
     void setDrawOrder      ( const UInt32 &value );
     void setDynamic        ( const bool &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  ParticleSystemPtr      create          (void); 
    static  ParticleSystemPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUInt32            _sfDrawMode;
    SFBool              _sfUseNormalAsObjectSpaceRotation;
    SFReal32            _sfQuadWidth;
    SFReal32            _sfQuadHeight;
    SFUInt32            _sfDrawOrder;
    SFPnt3fList         _sfPositions;
    SFPnt3fList         _sfSecPositions;
    SFVec3fList         _sfNormals;
    SFColor4fList       _sfColors;
    SFVec3fList         _sfSizes;
    SFReal32List        _sfLifespan;
    SFReal32List        _sfAge;
    SFVec3fList         _sfVelocities;
    SFVec3fList         _sfSecVelocities;
    SFVec3fList         _sfAccelerations;
    SFUInt64List        _sfProperties;
    SFBool              _sfDynamic;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    ParticleSystemBase(void);
    ParticleSystemBase(const ParticleSystemBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~ParticleSystemBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFPnt3fList         *getSFPositions      (void);
           SFPnt3fList         *getSFSecPositions   (void);
           SFVec3fList         *getSFNormals        (void);
           SFColor4fList       *getSFColors         (void);
           SFVec3fList         *getSFSizes          (void);
           SFReal32List        *getSFLifespan       (void);
           SFReal32List        *getSFAge            (void);
           SFVec3fList         *getSFVelocities     (void);
           SFVec3fList         *getSFSecVelocities  (void);
           SFVec3fList         *getSFAccelerations  (void);
           SFUInt64List        *getSFProperties     (void);

           Pnt3fList           &getPositions      (void);
     const Pnt3fList           &getPositions      (void) const;
           Pnt3fList           &getSecPositions   (void);
     const Pnt3fList           &getSecPositions   (void) const;
           Vec3fList           &getNormals        (void);
     const Vec3fList           &getNormals        (void) const;
           Color4fList         &getColors         (void);
     const Color4fList         &getColors         (void) const;
           Vec3fList           &getSizes          (void);
     const Vec3fList           &getSizes          (void) const;
           Real32List          &getLifespan       (void);
     const Real32List          &getLifespan       (void) const;
           Real32List          &getAge            (void);
     const Real32List          &getAge            (void) const;
           Vec3fList           &getVelocities     (void);
     const Vec3fList           &getVelocities     (void) const;
           Vec3fList           &getSecVelocities  (void);
     const Vec3fList           &getSecVelocities  (void) const;
           Vec3fList           &getAccelerations  (void);
     const Vec3fList           &getAccelerations  (void) const;
           UInt64List          &getProperties     (void);
     const UInt64List          &getProperties     (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setPositions      (const Pnt3fList &value);
     void setSecPositions   (const Pnt3fList &value);
     void setNormals        (const Vec3fList &value);
     void setColors         (const Color4fList &value);
     void setSizes          (const Vec3fList &value);
     void setLifespan       (const Real32List &value);
     void setAge            (const Real32List &value);
     void setVelocities     (const Vec3fList &value);
     void setSecVelocities  (const Vec3fList &value);
     void setAccelerations  (const Vec3fList &value);
     void setProperties     (const UInt64List &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      ParticleSystemBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      ParticleSystemBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const ParticleSystemBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef ParticleSystemBase *ParticleSystemBaseP;

typedef osgIF<ParticleSystemBase::isNodeCore,
              CoredNodePtr<ParticleSystem>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet ParticleSystemNodePtr;

typedef RefPtr<ParticleSystemPtr> ParticleSystemRefPtr;

OSG_END_NAMESPACE

#define OSGPARTICLESYSTEMBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.40 2005/07/20 00:10:14 vossg Exp $"

#endif /* _OSGPARTICLESYSTEMBASE_H_ */
