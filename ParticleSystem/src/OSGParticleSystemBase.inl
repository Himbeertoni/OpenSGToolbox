/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystem!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ParticleSystemBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 ParticleSystemBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
ParticleSystemPtr ParticleSystemBase::create(void) 
{
    ParticleSystemPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = ParticleSystemPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
ParticleSystemPtr ParticleSystemBase::createEmpty(void) 
{ 
    ParticleSystemPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the ParticleSystem::_sfDrawMode field.
inline
SFUInt32 *ParticleSystemBase::getSFDrawMode(void)
{
    return &_sfDrawMode;
}

//! Get the ParticleSystem::_sfUseNormalAsObjectSpaceRotation field.
inline
SFBool *ParticleSystemBase::getSFUseNormalAsObjectSpaceRotation(void)
{
    return &_sfUseNormalAsObjectSpaceRotation;
}

//! Get the ParticleSystem::_sfQuadWidth field.
inline
SFReal32 *ParticleSystemBase::getSFQuadWidth(void)
{
    return &_sfQuadWidth;
}

//! Get the ParticleSystem::_sfQuadHeight field.
inline
SFReal32 *ParticleSystemBase::getSFQuadHeight(void)
{
    return &_sfQuadHeight;
}

//! Get the ParticleSystem::_sfDrawOrder field.
inline
SFUInt32 *ParticleSystemBase::getSFDrawOrder(void)
{
    return &_sfDrawOrder;
}

//! Get the ParticleSystem::_sfPositions field.
inline
SFPnt3fList *ParticleSystemBase::getSFPositions(void)
{
    return &_sfPositions;
}

//! Get the ParticleSystem::_sfSecPositions field.
inline
SFPnt3fList *ParticleSystemBase::getSFSecPositions(void)
{
    return &_sfSecPositions;
}

//! Get the ParticleSystem::_sfNormals field.
inline
SFVec3fList *ParticleSystemBase::getSFNormals(void)
{
    return &_sfNormals;
}

//! Get the ParticleSystem::_sfColors field.
inline
SFColor4fList *ParticleSystemBase::getSFColors(void)
{
    return &_sfColors;
}

//! Get the ParticleSystem::_sfSizes field.
inline
SFVec3fList *ParticleSystemBase::getSFSizes(void)
{
    return &_sfSizes;
}

//! Get the ParticleSystem::_sfLifespan field.
inline
SFReal32List *ParticleSystemBase::getSFLifespan(void)
{
    return &_sfLifespan;
}

//! Get the ParticleSystem::_sfAge field.
inline
SFReal32List *ParticleSystemBase::getSFAge(void)
{
    return &_sfAge;
}

//! Get the ParticleSystem::_sfVelocities field.
inline
SFVec3fList *ParticleSystemBase::getSFVelocities(void)
{
    return &_sfVelocities;
}

//! Get the ParticleSystem::_sfSecVelocities field.
inline
SFVec3fList *ParticleSystemBase::getSFSecVelocities(void)
{
    return &_sfSecVelocities;
}

//! Get the ParticleSystem::_sfAccelerations field.
inline
SFVec3fList *ParticleSystemBase::getSFAccelerations(void)
{
    return &_sfAccelerations;
}

//! Get the ParticleSystem::_sfProperties field.
inline
SFUInt64List *ParticleSystemBase::getSFProperties(void)
{
    return &_sfProperties;
}

//! Get the ParticleSystem::_sfDynamic field.
inline
SFBool *ParticleSystemBase::getSFDynamic(void)
{
    return &_sfDynamic;
}


//! Get the value of the ParticleSystem::_sfDrawMode field.
inline
UInt32 &ParticleSystemBase::getDrawMode(void)
{
    return _sfDrawMode.getValue();
}

//! Get the value of the ParticleSystem::_sfDrawMode field.
inline
const UInt32 &ParticleSystemBase::getDrawMode(void) const
{
    return _sfDrawMode.getValue();
}

//! Set the value of the ParticleSystem::_sfDrawMode field.
inline
void ParticleSystemBase::setDrawMode(const UInt32 &value)
{
    _sfDrawMode.setValue(value);
}

//! Get the value of the ParticleSystem::_sfUseNormalAsObjectSpaceRotation field.
inline
bool &ParticleSystemBase::getUseNormalAsObjectSpaceRotation(void)
{
    return _sfUseNormalAsObjectSpaceRotation.getValue();
}

//! Get the value of the ParticleSystem::_sfUseNormalAsObjectSpaceRotation field.
inline
const bool &ParticleSystemBase::getUseNormalAsObjectSpaceRotation(void) const
{
    return _sfUseNormalAsObjectSpaceRotation.getValue();
}

//! Set the value of the ParticleSystem::_sfUseNormalAsObjectSpaceRotation field.
inline
void ParticleSystemBase::setUseNormalAsObjectSpaceRotation(const bool &value)
{
    _sfUseNormalAsObjectSpaceRotation.setValue(value);
}

//! Get the value of the ParticleSystem::_sfQuadWidth field.
inline
Real32 &ParticleSystemBase::getQuadWidth(void)
{
    return _sfQuadWidth.getValue();
}

//! Get the value of the ParticleSystem::_sfQuadWidth field.
inline
const Real32 &ParticleSystemBase::getQuadWidth(void) const
{
    return _sfQuadWidth.getValue();
}

//! Set the value of the ParticleSystem::_sfQuadWidth field.
inline
void ParticleSystemBase::setQuadWidth(const Real32 &value)
{
    _sfQuadWidth.setValue(value);
}

//! Get the value of the ParticleSystem::_sfQuadHeight field.
inline
Real32 &ParticleSystemBase::getQuadHeight(void)
{
    return _sfQuadHeight.getValue();
}

//! Get the value of the ParticleSystem::_sfQuadHeight field.
inline
const Real32 &ParticleSystemBase::getQuadHeight(void) const
{
    return _sfQuadHeight.getValue();
}

//! Set the value of the ParticleSystem::_sfQuadHeight field.
inline
void ParticleSystemBase::setQuadHeight(const Real32 &value)
{
    _sfQuadHeight.setValue(value);
}

//! Get the value of the ParticleSystem::_sfDrawOrder field.
inline
UInt32 &ParticleSystemBase::getDrawOrder(void)
{
    return _sfDrawOrder.getValue();
}

//! Get the value of the ParticleSystem::_sfDrawOrder field.
inline
const UInt32 &ParticleSystemBase::getDrawOrder(void) const
{
    return _sfDrawOrder.getValue();
}

//! Set the value of the ParticleSystem::_sfDrawOrder field.
inline
void ParticleSystemBase::setDrawOrder(const UInt32 &value)
{
    _sfDrawOrder.setValue(value);
}

//! Get the value of the ParticleSystem::_sfPositions field.
inline
Pnt3fList &ParticleSystemBase::getPositions(void)
{
    return _sfPositions.getValue();
}

//! Get the value of the ParticleSystem::_sfPositions field.
inline
const Pnt3fList &ParticleSystemBase::getPositions(void) const
{
    return _sfPositions.getValue();
}

//! Set the value of the ParticleSystem::_sfPositions field.
inline
void ParticleSystemBase::setPositions(const Pnt3fList &value)
{
    _sfPositions.setValue(value);
}

//! Get the value of the ParticleSystem::_sfSecPositions field.
inline
Pnt3fList &ParticleSystemBase::getSecPositions(void)
{
    return _sfSecPositions.getValue();
}

//! Get the value of the ParticleSystem::_sfSecPositions field.
inline
const Pnt3fList &ParticleSystemBase::getSecPositions(void) const
{
    return _sfSecPositions.getValue();
}

//! Set the value of the ParticleSystem::_sfSecPositions field.
inline
void ParticleSystemBase::setSecPositions(const Pnt3fList &value)
{
    _sfSecPositions.setValue(value);
}

//! Get the value of the ParticleSystem::_sfNormals field.
inline
Vec3fList &ParticleSystemBase::getNormals(void)
{
    return _sfNormals.getValue();
}

//! Get the value of the ParticleSystem::_sfNormals field.
inline
const Vec3fList &ParticleSystemBase::getNormals(void) const
{
    return _sfNormals.getValue();
}

//! Set the value of the ParticleSystem::_sfNormals field.
inline
void ParticleSystemBase::setNormals(const Vec3fList &value)
{
    _sfNormals.setValue(value);
}

//! Get the value of the ParticleSystem::_sfColors field.
inline
Color4fList &ParticleSystemBase::getColors(void)
{
    return _sfColors.getValue();
}

//! Get the value of the ParticleSystem::_sfColors field.
inline
const Color4fList &ParticleSystemBase::getColors(void) const
{
    return _sfColors.getValue();
}

//! Set the value of the ParticleSystem::_sfColors field.
inline
void ParticleSystemBase::setColors(const Color4fList &value)
{
    _sfColors.setValue(value);
}

//! Get the value of the ParticleSystem::_sfSizes field.
inline
Vec3fList &ParticleSystemBase::getSizes(void)
{
    return _sfSizes.getValue();
}

//! Get the value of the ParticleSystem::_sfSizes field.
inline
const Vec3fList &ParticleSystemBase::getSizes(void) const
{
    return _sfSizes.getValue();
}

//! Set the value of the ParticleSystem::_sfSizes field.
inline
void ParticleSystemBase::setSizes(const Vec3fList &value)
{
    _sfSizes.setValue(value);
}

//! Get the value of the ParticleSystem::_sfLifespan field.
inline
Real32List &ParticleSystemBase::getLifespan(void)
{
    return _sfLifespan.getValue();
}

//! Get the value of the ParticleSystem::_sfLifespan field.
inline
const Real32List &ParticleSystemBase::getLifespan(void) const
{
    return _sfLifespan.getValue();
}

//! Set the value of the ParticleSystem::_sfLifespan field.
inline
void ParticleSystemBase::setLifespan(const Real32List &value)
{
    _sfLifespan.setValue(value);
}

//! Get the value of the ParticleSystem::_sfAge field.
inline
Real32List &ParticleSystemBase::getAge(void)
{
    return _sfAge.getValue();
}

//! Get the value of the ParticleSystem::_sfAge field.
inline
const Real32List &ParticleSystemBase::getAge(void) const
{
    return _sfAge.getValue();
}

//! Set the value of the ParticleSystem::_sfAge field.
inline
void ParticleSystemBase::setAge(const Real32List &value)
{
    _sfAge.setValue(value);
}

//! Get the value of the ParticleSystem::_sfVelocities field.
inline
Vec3fList &ParticleSystemBase::getVelocities(void)
{
    return _sfVelocities.getValue();
}

//! Get the value of the ParticleSystem::_sfVelocities field.
inline
const Vec3fList &ParticleSystemBase::getVelocities(void) const
{
    return _sfVelocities.getValue();
}

//! Set the value of the ParticleSystem::_sfVelocities field.
inline
void ParticleSystemBase::setVelocities(const Vec3fList &value)
{
    _sfVelocities.setValue(value);
}

//! Get the value of the ParticleSystem::_sfSecVelocities field.
inline
Vec3fList &ParticleSystemBase::getSecVelocities(void)
{
    return _sfSecVelocities.getValue();
}

//! Get the value of the ParticleSystem::_sfSecVelocities field.
inline
const Vec3fList &ParticleSystemBase::getSecVelocities(void) const
{
    return _sfSecVelocities.getValue();
}

//! Set the value of the ParticleSystem::_sfSecVelocities field.
inline
void ParticleSystemBase::setSecVelocities(const Vec3fList &value)
{
    _sfSecVelocities.setValue(value);
}

//! Get the value of the ParticleSystem::_sfAccelerations field.
inline
Vec3fList &ParticleSystemBase::getAccelerations(void)
{
    return _sfAccelerations.getValue();
}

//! Get the value of the ParticleSystem::_sfAccelerations field.
inline
const Vec3fList &ParticleSystemBase::getAccelerations(void) const
{
    return _sfAccelerations.getValue();
}

//! Set the value of the ParticleSystem::_sfAccelerations field.
inline
void ParticleSystemBase::setAccelerations(const Vec3fList &value)
{
    _sfAccelerations.setValue(value);
}

//! Get the value of the ParticleSystem::_sfProperties field.
inline
UInt64List &ParticleSystemBase::getProperties(void)
{
    return _sfProperties.getValue();
}

//! Get the value of the ParticleSystem::_sfProperties field.
inline
const UInt64List &ParticleSystemBase::getProperties(void) const
{
    return _sfProperties.getValue();
}

//! Set the value of the ParticleSystem::_sfProperties field.
inline
void ParticleSystemBase::setProperties(const UInt64List &value)
{
    _sfProperties.setValue(value);
}

//! Get the value of the ParticleSystem::_sfDynamic field.
inline
bool &ParticleSystemBase::getDynamic(void)
{
    return _sfDynamic.getValue();
}

//! Get the value of the ParticleSystem::_sfDynamic field.
inline
const bool &ParticleSystemBase::getDynamic(void) const
{
    return _sfDynamic.getValue();
}

//! Set the value of the ParticleSystem::_sfDynamic field.
inline
void ParticleSystemBase::setDynamic(const bool &value)
{
    _sfDynamic.setValue(value);
}


OSG_END_NAMESPACE

#define OSGPARTICLESYSTEMBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

