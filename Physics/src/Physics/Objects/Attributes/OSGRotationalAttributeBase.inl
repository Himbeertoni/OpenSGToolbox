/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RotationalAttribute!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &RotationalAttributeBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 RotationalAttributeBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
RotationalAttributePtr RotationalAttributeBase::create(void) 
{
    RotationalAttributePtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = RotationalAttributePtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
RotationalAttributePtr RotationalAttributeBase::createEmpty(void) 
{ 
    RotationalAttributePtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the RotationalAttribute::_sfCenterOfRotation field.
inline
SFPnt3f *RotationalAttributeBase::getSFCenterOfRotation(void)
{
    return &_sfCenterOfRotation;
}

//! Get the RotationalAttribute::_sfAngularDisplacement field.
inline
SFQuaternion *RotationalAttributeBase::getSFAngularDisplacement(void)
{
    return &_sfAngularDisplacement;
}

//! Get the RotationalAttribute::_sfAngularVelocity field.
inline
SFVec3f *RotationalAttributeBase::getSFAngularVelocity(void)
{
    return &_sfAngularVelocity;
}

//! Get the RotationalAttribute::_sfAngularAcceleration field.
inline
SFVec3f *RotationalAttributeBase::getSFAngularAcceleration(void)
{
    return &_sfAngularAcceleration;
}


//! Get the value of the RotationalAttribute::_sfCenterOfRotation field.
inline
Pnt3f &RotationalAttributeBase::getCenterOfRotation(void)
{
    return _sfCenterOfRotation.getValue();
}

//! Get the value of the RotationalAttribute::_sfCenterOfRotation field.
inline
const Pnt3f &RotationalAttributeBase::getCenterOfRotation(void) const
{
    return _sfCenterOfRotation.getValue();
}

//! Set the value of the RotationalAttribute::_sfCenterOfRotation field.
inline
void RotationalAttributeBase::setCenterOfRotation(const Pnt3f &value)
{
    _sfCenterOfRotation.setValue(value);
}

//! Get the value of the RotationalAttribute::_sfAngularDisplacement field.
inline
Quaternion &RotationalAttributeBase::getAngularDisplacement(void)
{
    return _sfAngularDisplacement.getValue();
}

//! Get the value of the RotationalAttribute::_sfAngularDisplacement field.
inline
const Quaternion &RotationalAttributeBase::getAngularDisplacement(void) const
{
    return _sfAngularDisplacement.getValue();
}

//! Set the value of the RotationalAttribute::_sfAngularDisplacement field.
inline
void RotationalAttributeBase::setAngularDisplacement(const Quaternion &value)
{
    _sfAngularDisplacement.setValue(value);
}

//! Get the value of the RotationalAttribute::_sfAngularVelocity field.
inline
Vec3f &RotationalAttributeBase::getAngularVelocity(void)
{
    return _sfAngularVelocity.getValue();
}

//! Get the value of the RotationalAttribute::_sfAngularVelocity field.
inline
const Vec3f &RotationalAttributeBase::getAngularVelocity(void) const
{
    return _sfAngularVelocity.getValue();
}

//! Set the value of the RotationalAttribute::_sfAngularVelocity field.
inline
void RotationalAttributeBase::setAngularVelocity(const Vec3f &value)
{
    _sfAngularVelocity.setValue(value);
}

//! Get the value of the RotationalAttribute::_sfAngularAcceleration field.
inline
Vec3f &RotationalAttributeBase::getAngularAcceleration(void)
{
    return _sfAngularAcceleration.getValue();
}

//! Get the value of the RotationalAttribute::_sfAngularAcceleration field.
inline
const Vec3f &RotationalAttributeBase::getAngularAcceleration(void) const
{
    return _sfAngularAcceleration.getValue();
}

//! Set the value of the RotationalAttribute::_sfAngularAcceleration field.
inline
void RotationalAttributeBase::setAngularAcceleration(const Vec3f &value)
{
    _sfAngularAcceleration.setValue(value);
}


OSG_END_NAMESPACE

#define OSGROTATIONALATTRIBUTEBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

