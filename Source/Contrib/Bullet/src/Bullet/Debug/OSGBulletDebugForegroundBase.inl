/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BulletDebugForeground!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &BulletDebugForegroundBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 BulletDebugForegroundBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 BulletDebugForegroundBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the BulletDebugForeground::_sfWorld field.
inline
BulletCollisionWorld * BulletDebugForegroundBase::getWorld(void) const
{
    return _sfWorld.getValue();
}

//! Set the value of the BulletDebugForeground::_sfWorld field.
inline
void BulletDebugForegroundBase::setWorld(BulletCollisionWorld * const value)
{
    editSField(WorldFieldMask);

    _sfWorld.setValue(value);
}
//! Get the value of the BulletDebugForeground::_sfMode field.

inline
Int32 &BulletDebugForegroundBase::editMode(void)
{
    editSField(ModeFieldMask);

    return _sfMode.getValue();
}

//! Get the value of the BulletDebugForeground::_sfMode field.
inline
      Int32  BulletDebugForegroundBase::getMode(void) const
{
    return _sfMode.getValue();
}

//! Set the value of the BulletDebugForeground::_sfMode field.
inline
void BulletDebugForegroundBase::setMode(const Int32 value)
{
    editSField(ModeFieldMask);

    _sfMode.setValue(value);
}
//! Get the value of the BulletDebugForeground::_sfDrawOccluded field.

inline
bool &BulletDebugForegroundBase::editDrawOccluded(void)
{
    editSField(DrawOccludedFieldMask);

    return _sfDrawOccluded.getValue();
}

//! Get the value of the BulletDebugForeground::_sfDrawOccluded field.
inline
      bool  BulletDebugForegroundBase::getDrawOccluded(void) const
{
    return _sfDrawOccluded.getValue();
}

//! Set the value of the BulletDebugForeground::_sfDrawOccluded field.
inline
void BulletDebugForegroundBase::setDrawOccluded(const bool value)
{
    editSField(DrawOccludedFieldMask);

    _sfDrawOccluded.setValue(value);
}
//! Get the value of the BulletDebugForeground::_sfOccludedAlpha field.

inline
Real32 &BulletDebugForegroundBase::editOccludedAlpha(void)
{
    editSField(OccludedAlphaFieldMask);

    return _sfOccludedAlpha.getValue();
}

//! Get the value of the BulletDebugForeground::_sfOccludedAlpha field.
inline
      Real32  BulletDebugForegroundBase::getOccludedAlpha(void) const
{
    return _sfOccludedAlpha.getValue();
}

//! Set the value of the BulletDebugForeground::_sfOccludedAlpha field.
inline
void BulletDebugForegroundBase::setOccludedAlpha(const Real32 value)
{
    editSField(OccludedAlphaFieldMask);

    _sfOccludedAlpha.setValue(value);
}
//! Get the value of the BulletDebugForeground::_sfLineWidth field.

inline
Real32 &BulletDebugForegroundBase::editLineWidth(void)
{
    editSField(LineWidthFieldMask);

    return _sfLineWidth.getValue();
}

//! Get the value of the BulletDebugForeground::_sfLineWidth field.
inline
      Real32  BulletDebugForegroundBase::getLineWidth(void) const
{
    return _sfLineWidth.getValue();
}

//! Set the value of the BulletDebugForeground::_sfLineWidth field.
inline
void BulletDebugForegroundBase::setLineWidth(const Real32 value)
{
    editSField(LineWidthFieldMask);

    _sfLineWidth.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void BulletDebugForegroundBase::execSync (      BulletDebugForegroundBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (WorldFieldMask & whichField))
        _sfWorld.syncWith(pFrom->_sfWorld);

    if(FieldBits::NoField != (ModeFieldMask & whichField))
        _sfMode.syncWith(pFrom->_sfMode);

    if(FieldBits::NoField != (DrawOccludedFieldMask & whichField))
        _sfDrawOccluded.syncWith(pFrom->_sfDrawOccluded);

    if(FieldBits::NoField != (OccludedAlphaFieldMask & whichField))
        _sfOccludedAlpha.syncWith(pFrom->_sfOccludedAlpha);

    if(FieldBits::NoField != (LineWidthFieldMask & whichField))
        _sfLineWidth.syncWith(pFrom->_sfLineWidth);
}
#endif


inline
const Char8 *BulletDebugForegroundBase::getClassname(void)
{
    return "BulletDebugForeground";
}
OSG_GEN_CONTAINERPTR(BulletDebugForeground);

OSG_END_NAMESPACE

