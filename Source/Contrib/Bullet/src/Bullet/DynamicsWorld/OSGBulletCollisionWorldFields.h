/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGBULLETCOLLISIONWORLDFIELDS_H_
#define _OSGBULLETCOLLISIONWORLDFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGContribBulletDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class BulletCollisionWorld;

OSG_GEN_CONTAINERPTR(BulletCollisionWorld);

/*! \ingroup GrpContribBulletFieldTraits
    \ingroup GrpLibOSGContribBullet
 */
template <>
struct FieldTraits<BulletCollisionWorld *> :
    public FieldTraitsFCPtrBase<BulletCollisionWorld *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<BulletCollisionWorld *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBBULLET_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFBulletCollisionWorldPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFBulletCollisionWorldPtr"; }
};

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdBulletCollisionWorldPtr"; 
}


/*! \ingroup GrpContribBulletFieldTraits
 */
template <>
struct FieldTraits<BulletCollisionWorld *, 1> :
    public FieldTraitsFCPtrBase<BulletCollisionWorld *, 1>
{
  private:

  public:
    typedef FieldTraits<BulletCollisionWorld *, 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBBULLET_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildBulletCollisionWorldPtr"; 
}

template<> inline
const Char8 *FieldTraits<BulletCollisionWorld *, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildBulletCollisionWorldPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpContribBulletFieldSFields */
typedef PointerSField<BulletCollisionWorld *,
                      RecordedRefCountPolicy  > SFRecBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldSFields */
typedef PointerSField<BulletCollisionWorld *,
                      UnrecordedRefCountPolicy> SFUnrecBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldSFields */
typedef PointerSField<BulletCollisionWorld *,
                      WeakRefCountPolicy      > SFWeakBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldSFields */
typedef PointerSField<BulletCollisionWorld *,
                      NoRefCountPolicy        > SFUncountedBulletCollisionWorldPtr;


/*! \ingroup GrpContribBulletFieldMFields */
typedef PointerMField<BulletCollisionWorld *,
                      RecordedRefCountPolicy  > MFRecBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldMFields */
typedef PointerMField<BulletCollisionWorld *,
                      UnrecordedRefCountPolicy> MFUnrecBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldMFields */
typedef PointerMField<BulletCollisionWorld *,
                      WeakRefCountPolicy      > MFWeakBulletCollisionWorldPtr;
/*! \ingroup GrpContribBulletFieldMFields */
typedef PointerMField<BulletCollisionWorld *,
                      NoRefCountPolicy        > MFUncountedBulletCollisionWorldPtr;



/*! \ingroup GrpContribBulletFieldSFields */
typedef ChildPointerSField<
          BulletCollisionWorld *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildBulletCollisionWorldPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpContribBulletFieldSFields \ingroup GrpLibOSGContribBullet */
struct SFRecBulletCollisionWorldPtr : 
    public PointerSField<BulletCollisionWorld *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpContribBulletFieldSFields \ingroup GrpLibOSGContribBullet */
struct SFUnrecBulletCollisionWorldPtr : 
    public PointerSField<BulletCollisionWorld *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribBulletFieldSFields \ingroup GrpLibOSGContribBullet */
struct SFWeakBulletCollisionWorldPtr :
    public PointerSField<BulletCollisionWorld *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpContribBulletFieldSFields \ingroup GrpLibOSGContribBullet */
struct SFUncountedBulletCollisionWorldPtr :
    public PointerSField<BulletCollisionWorld *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpContribBulletFieldMFields \ingroup GrpLibOSGContribBullet */
struct MFRecBulletCollisionWorldPtr :
    public PointerMField<BulletCollisionWorld *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpContribBulletFieldMFields \ingroup GrpLibOSGContribBullet */
struct MFUnrecBulletCollisionWorldPtr :
    public PointerMField<BulletCollisionWorld *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribBulletFieldMFields \ingroup GrpLibOSGContribBullet */
struct MFWeakBulletCollisionWorldPtr :
    public PointerMField<BulletCollisionWorld *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpContribBulletFieldMFields \ingroup GrpLibOSGContribBullet */
struct MFUncountedBulletCollisionWorldPtr :
    public PointerMField<BulletCollisionWorld *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpContribBulletFieldSFields \ingroup GrpLibOSGContribBullet */
struct SFUnrecChildBulletCollisionWorldPtr :
    public ChildPointerSField<
        BulletCollisionWorld *, 
        UnrecordedRefCountPolicy,
        1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGBULLETCOLLISIONWORLDFIELDS_H_ */
