/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BulletDynamicsWorld
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGBULLETDYNAMICSWORLDBASE_H_
#define _OSGBULLETDYNAMICSWORLDBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribBulletDef.h"

//#include "OSGBaseTypes.h"

#include "OSGBulletCollisionWorld.h" // Parent

#include "OSGFieldContainerFields.h"    // ParentHandler type
#include "OSGVecBridgeFields.h"         // Gravity type
#include "OSGBulletRigidBodyFields.h"   // RigidBodies type
#include "OSGBulletTypedConstraintFields.h" // Constraints type

#include "OSGBulletDynamicsWorldFields.h"

OSG_BEGIN_NAMESPACE

class BulletDynamicsWorld;

//! \brief BulletDynamicsWorld Base Class.

class OSG_CONTRIBBULLET_DLLMAPPING BulletDynamicsWorldBase : public BulletCollisionWorld
{
  public:

    typedef BulletCollisionWorld Inherited;
    typedef BulletCollisionWorld ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(BulletDynamicsWorld);
    
    

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ParentHandlerFieldId = Inherited::NextFieldId,
        GravityFieldId = ParentHandlerFieldId + 1,
        RigidBodiesFieldId = GravityFieldId + 1,
        ConstraintsFieldId = RigidBodiesFieldId + 1,
        NextFieldId = ConstraintsFieldId + 1
    };

    static const OSG::BitVector ParentHandlerFieldMask =
        (TypeTraits<BitVector>::One << ParentHandlerFieldId);
    static const OSG::BitVector GravityFieldMask =
        (TypeTraits<BitVector>::One << GravityFieldId);
    static const OSG::BitVector RigidBodiesFieldMask =
        (TypeTraits<BitVector>::One << RigidBodiesFieldId);
    static const OSG::BitVector ConstraintsFieldMask =
        (TypeTraits<BitVector>::One << ConstraintsFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFParentFieldContainerPtr SFParentHandlerType;
    typedef BridgeSFVec3f           SFGravityType;
    typedef MFUnrecChildBulletRigidBodyPtr MFRigidBodiesType;
    typedef MFUnrecChildBulletTypedConstraintPtr MFConstraintsType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  BridgeSFVec3f             *editSFGravity        (void);
            const BridgeSFVec3f             *getSFGravity         (void) const;
            const MFUnrecChildBulletRigidBodyPtr *getMFRigidBodies    (void) const;
            const MFUnrecChildBulletTypedConstraintPtr *getMFConstraints    (void) const;


                  Vec3f                getGravity         (void) const;

                  BulletRigidBody * getRigidBodies    (const UInt32 index) const;

                  BulletTypedConstraint * getConstraints    (const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setGravity        (const Vec3f &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    void pushToRigidBodies           (BulletRigidBody * const value   );
    void assignRigidBodies          (const MFUnrecChildBulletRigidBodyPtr &value);
    void clearRigidBodies            (void                         );
    void insertIntoRigidBodies      (UInt32               uiIndex,
                                             BulletRigidBody * const value   );
    void replaceInRigidBodies  (      UInt32         uiIndex,
                                             BulletRigidBody * const value   );
    void replaceObjInRigidBodies (BulletRigidBody * const pOldElem,
                                             BulletRigidBody * const pNewElem);
    void removeFromRigidBodies (UInt32               uiIndex );
    void removeObjFromRigidBodies(BulletRigidBody * const value   );

    void pushToConstraints           (BulletTypedConstraint * const value   );
    void assignConstraints          (const MFUnrecChildBulletTypedConstraintPtr &value);
    void clearConstraints            (void                         );
    void insertIntoConstraints      (UInt32               uiIndex,
                                             BulletTypedConstraint * const value   );
    void replaceInConstraints  (      UInt32         uiIndex,
                                             BulletTypedConstraint * const value   );
    void replaceObjInConstraints (BulletTypedConstraint * const pOldElem,
                                             BulletTypedConstraint * const pNewElem);
    void removeFromConstraints (UInt32               uiIndex );
    void removeObjFromConstraints(BulletTypedConstraint * const value   );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFParentFieldContainerPtr _sfParentHandler;
    BridgeSFVec3f           _sfGravity;
    MFUnrecChildBulletRigidBodyPtr _mfRigidBodies;
    MFUnrecChildBulletTypedConstraintPtr _mfConstraints;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    BulletDynamicsWorldBase(void);
    BulletDynamicsWorldBase(const BulletDynamicsWorldBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~BulletDynamicsWorldBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const BulletDynamicsWorld *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name Parent linking                                               */
    /*! \{                                                                 */

    virtual bool linkParent  (FieldContainer * const pParent,
                              UInt16           const childFieldId,
                              UInt16           const parentFieldId);
    virtual bool unlinkParent(FieldContainer * const pParent,
                              UInt16           const parentFieldId);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name Child linking                                                */
    /*! \{                                                                 */

    virtual bool unlinkChild(FieldContainer * const pChild,
                             UInt16           const childFieldId);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleParentHandler   (void) const;
    EditFieldHandlePtr editHandleParentHandler  (void);
    GetFieldHandlePtr  getHandleGravity         (void) const;
    EditFieldHandlePtr editHandleGravity        (void);
    GetFieldHandlePtr  getHandleRigidBodies     (void) const;
    EditFieldHandlePtr editHandleRigidBodies    (void);
    GetFieldHandlePtr  getHandleConstraints     (void) const;
    EditFieldHandlePtr editHandleConstraints    (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      BulletDynamicsWorldBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const BulletDynamicsWorldBase &source);
};

typedef BulletDynamicsWorldBase *BulletDynamicsWorldBaseP;

OSG_END_NAMESPACE

#endif /* _OSGBULLETDYNAMICSWORLDBASE_H_ */
