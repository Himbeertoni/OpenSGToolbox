/*---------------------------------------------------------------------------*\
 *                         OpenSG ToolBox Physics                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                Authors: Behboud Kalantary, David Kabala                   *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsPUJoint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &PhysicsPUJointBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 PhysicsPUJointBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
PhysicsPUJointPtr PhysicsPUJointBase::create(void) 
{
    PhysicsPUJointPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = PhysicsPUJointPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
PhysicsPUJointPtr PhysicsPUJointBase::createEmpty(void) 
{ 
    PhysicsPUJointPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the PhysicsPUJoint::_sfAnchor field.
inline
SFVec3f *PhysicsPUJointBase::getSFAnchor(void)
{
    return &_sfAnchor;
}

//! Get the PhysicsPUJoint::_sfAxis1 field.
inline
SFVec3f *PhysicsPUJointBase::getSFAxis1(void)
{
    return &_sfAxis1;
}

//! Get the PhysicsPUJoint::_sfAxis2 field.
inline
SFVec3f *PhysicsPUJointBase::getSFAxis2(void)
{
    return &_sfAxis2;
}

//! Get the PhysicsPUJoint::_sfAxis3 field.
inline
SFVec3f *PhysicsPUJointBase::getSFAxis3(void)
{
    return &_sfAxis3;
}

//! Get the PhysicsPUJoint::_sfHiStop field.
inline
SFReal32 *PhysicsPUJointBase::getSFHiStop(void)
{
    return &_sfHiStop;
}

//! Get the PhysicsPUJoint::_sfLoStop field.
inline
SFReal32 *PhysicsPUJointBase::getSFLoStop(void)
{
    return &_sfLoStop;
}

//! Get the PhysicsPUJoint::_sfBounce field.
inline
SFReal32 *PhysicsPUJointBase::getSFBounce(void)
{
    return &_sfBounce;
}

//! Get the PhysicsPUJoint::_sfCFM field.
inline
SFReal32 *PhysicsPUJointBase::getSFCFM(void)
{
    return &_sfCFM;
}

//! Get the PhysicsPUJoint::_sfStopERP field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopERP(void)
{
    return &_sfStopERP;
}

//! Get the PhysicsPUJoint::_sfStopCFM field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopCFM(void)
{
    return &_sfStopCFM;
}

//! Get the PhysicsPUJoint::_sfHiStop2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFHiStop2(void)
{
    return &_sfHiStop2;
}

//! Get the PhysicsPUJoint::_sfLoStop2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFLoStop2(void)
{
    return &_sfLoStop2;
}

//! Get the PhysicsPUJoint::_sfBounce2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFBounce2(void)
{
    return &_sfBounce2;
}

//! Get the PhysicsPUJoint::_sfCFM2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFCFM2(void)
{
    return &_sfCFM2;
}

//! Get the PhysicsPUJoint::_sfStopERP2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopERP2(void)
{
    return &_sfStopERP2;
}

//! Get the PhysicsPUJoint::_sfStopCFM2 field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopCFM2(void)
{
    return &_sfStopCFM2;
}

//! Get the PhysicsPUJoint::_sfHiStop3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFHiStop3(void)
{
    return &_sfHiStop3;
}

//! Get the PhysicsPUJoint::_sfLoStop3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFLoStop3(void)
{
    return &_sfLoStop3;
}

//! Get the PhysicsPUJoint::_sfBounce3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFBounce3(void)
{
    return &_sfBounce3;
}

//! Get the PhysicsPUJoint::_sfCFM3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFCFM3(void)
{
    return &_sfCFM3;
}

//! Get the PhysicsPUJoint::_sfStopERP3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopERP3(void)
{
    return &_sfStopERP3;
}

//! Get the PhysicsPUJoint::_sfStopCFM3 field.
inline
SFReal32 *PhysicsPUJointBase::getSFStopCFM3(void)
{
    return &_sfStopCFM3;
}


//! Get the value of the PhysicsPUJoint::_sfAnchor field.
inline
Vec3f &PhysicsPUJointBase::getAnchor(void)
{
    return _sfAnchor.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfAnchor field.
inline
const Vec3f &PhysicsPUJointBase::getAnchor(void) const
{
    return _sfAnchor.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfAnchor field.
inline
void PhysicsPUJointBase::setAnchor(const Vec3f &value)
{
    _sfAnchor.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfAxis1 field.
inline
Vec3f &PhysicsPUJointBase::getAxis1(void)
{
    return _sfAxis1.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfAxis1 field.
inline
const Vec3f &PhysicsPUJointBase::getAxis1(void) const
{
    return _sfAxis1.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfAxis1 field.
inline
void PhysicsPUJointBase::setAxis1(const Vec3f &value)
{
    _sfAxis1.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfAxis2 field.
inline
Vec3f &PhysicsPUJointBase::getAxis2(void)
{
    return _sfAxis2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfAxis2 field.
inline
const Vec3f &PhysicsPUJointBase::getAxis2(void) const
{
    return _sfAxis2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfAxis2 field.
inline
void PhysicsPUJointBase::setAxis2(const Vec3f &value)
{
    _sfAxis2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfAxis3 field.
inline
Vec3f &PhysicsPUJointBase::getAxis3(void)
{
    return _sfAxis3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfAxis3 field.
inline
const Vec3f &PhysicsPUJointBase::getAxis3(void) const
{
    return _sfAxis3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfAxis3 field.
inline
void PhysicsPUJointBase::setAxis3(const Vec3f &value)
{
    _sfAxis3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfHiStop field.
inline
Real32 &PhysicsPUJointBase::getHiStop(void)
{
    return _sfHiStop.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfHiStop field.
inline
const Real32 &PhysicsPUJointBase::getHiStop(void) const
{
    return _sfHiStop.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfHiStop field.
inline
void PhysicsPUJointBase::setHiStop(const Real32 &value)
{
    _sfHiStop.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfLoStop field.
inline
Real32 &PhysicsPUJointBase::getLoStop(void)
{
    return _sfLoStop.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfLoStop field.
inline
const Real32 &PhysicsPUJointBase::getLoStop(void) const
{
    return _sfLoStop.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfLoStop field.
inline
void PhysicsPUJointBase::setLoStop(const Real32 &value)
{
    _sfLoStop.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfBounce field.
inline
Real32 &PhysicsPUJointBase::getBounce(void)
{
    return _sfBounce.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfBounce field.
inline
const Real32 &PhysicsPUJointBase::getBounce(void) const
{
    return _sfBounce.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfBounce field.
inline
void PhysicsPUJointBase::setBounce(const Real32 &value)
{
    _sfBounce.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfCFM field.
inline
Real32 &PhysicsPUJointBase::getCFM(void)
{
    return _sfCFM.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfCFM field.
inline
const Real32 &PhysicsPUJointBase::getCFM(void) const
{
    return _sfCFM.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfCFM field.
inline
void PhysicsPUJointBase::setCFM(const Real32 &value)
{
    _sfCFM.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopERP field.
inline
Real32 &PhysicsPUJointBase::getStopERP(void)
{
    return _sfStopERP.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopERP field.
inline
const Real32 &PhysicsPUJointBase::getStopERP(void) const
{
    return _sfStopERP.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopERP field.
inline
void PhysicsPUJointBase::setStopERP(const Real32 &value)
{
    _sfStopERP.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM field.
inline
Real32 &PhysicsPUJointBase::getStopCFM(void)
{
    return _sfStopCFM.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM field.
inline
const Real32 &PhysicsPUJointBase::getStopCFM(void) const
{
    return _sfStopCFM.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopCFM field.
inline
void PhysicsPUJointBase::setStopCFM(const Real32 &value)
{
    _sfStopCFM.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfHiStop2 field.
inline
Real32 &PhysicsPUJointBase::getHiStop2(void)
{
    return _sfHiStop2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfHiStop2 field.
inline
const Real32 &PhysicsPUJointBase::getHiStop2(void) const
{
    return _sfHiStop2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfHiStop2 field.
inline
void PhysicsPUJointBase::setHiStop2(const Real32 &value)
{
    _sfHiStop2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfLoStop2 field.
inline
Real32 &PhysicsPUJointBase::getLoStop2(void)
{
    return _sfLoStop2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfLoStop2 field.
inline
const Real32 &PhysicsPUJointBase::getLoStop2(void) const
{
    return _sfLoStop2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfLoStop2 field.
inline
void PhysicsPUJointBase::setLoStop2(const Real32 &value)
{
    _sfLoStop2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfBounce2 field.
inline
Real32 &PhysicsPUJointBase::getBounce2(void)
{
    return _sfBounce2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfBounce2 field.
inline
const Real32 &PhysicsPUJointBase::getBounce2(void) const
{
    return _sfBounce2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfBounce2 field.
inline
void PhysicsPUJointBase::setBounce2(const Real32 &value)
{
    _sfBounce2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfCFM2 field.
inline
Real32 &PhysicsPUJointBase::getCFM2(void)
{
    return _sfCFM2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfCFM2 field.
inline
const Real32 &PhysicsPUJointBase::getCFM2(void) const
{
    return _sfCFM2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfCFM2 field.
inline
void PhysicsPUJointBase::setCFM2(const Real32 &value)
{
    _sfCFM2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopERP2 field.
inline
Real32 &PhysicsPUJointBase::getStopERP2(void)
{
    return _sfStopERP2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopERP2 field.
inline
const Real32 &PhysicsPUJointBase::getStopERP2(void) const
{
    return _sfStopERP2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopERP2 field.
inline
void PhysicsPUJointBase::setStopERP2(const Real32 &value)
{
    _sfStopERP2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM2 field.
inline
Real32 &PhysicsPUJointBase::getStopCFM2(void)
{
    return _sfStopCFM2.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM2 field.
inline
const Real32 &PhysicsPUJointBase::getStopCFM2(void) const
{
    return _sfStopCFM2.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopCFM2 field.
inline
void PhysicsPUJointBase::setStopCFM2(const Real32 &value)
{
    _sfStopCFM2.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfHiStop3 field.
inline
Real32 &PhysicsPUJointBase::getHiStop3(void)
{
    return _sfHiStop3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfHiStop3 field.
inline
const Real32 &PhysicsPUJointBase::getHiStop3(void) const
{
    return _sfHiStop3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfHiStop3 field.
inline
void PhysicsPUJointBase::setHiStop3(const Real32 &value)
{
    _sfHiStop3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfLoStop3 field.
inline
Real32 &PhysicsPUJointBase::getLoStop3(void)
{
    return _sfLoStop3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfLoStop3 field.
inline
const Real32 &PhysicsPUJointBase::getLoStop3(void) const
{
    return _sfLoStop3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfLoStop3 field.
inline
void PhysicsPUJointBase::setLoStop3(const Real32 &value)
{
    _sfLoStop3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfBounce3 field.
inline
Real32 &PhysicsPUJointBase::getBounce3(void)
{
    return _sfBounce3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfBounce3 field.
inline
const Real32 &PhysicsPUJointBase::getBounce3(void) const
{
    return _sfBounce3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfBounce3 field.
inline
void PhysicsPUJointBase::setBounce3(const Real32 &value)
{
    _sfBounce3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfCFM3 field.
inline
Real32 &PhysicsPUJointBase::getCFM3(void)
{
    return _sfCFM3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfCFM3 field.
inline
const Real32 &PhysicsPUJointBase::getCFM3(void) const
{
    return _sfCFM3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfCFM3 field.
inline
void PhysicsPUJointBase::setCFM3(const Real32 &value)
{
    _sfCFM3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopERP3 field.
inline
Real32 &PhysicsPUJointBase::getStopERP3(void)
{
    return _sfStopERP3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopERP3 field.
inline
const Real32 &PhysicsPUJointBase::getStopERP3(void) const
{
    return _sfStopERP3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopERP3 field.
inline
void PhysicsPUJointBase::setStopERP3(const Real32 &value)
{
    _sfStopERP3.setValue(value);
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM3 field.
inline
Real32 &PhysicsPUJointBase::getStopCFM3(void)
{
    return _sfStopCFM3.getValue();
}

//! Get the value of the PhysicsPUJoint::_sfStopCFM3 field.
inline
const Real32 &PhysicsPUJointBase::getStopCFM3(void) const
{
    return _sfStopCFM3.getValue();
}

//! Set the value of the PhysicsPUJoint::_sfStopCFM3 field.
inline
void PhysicsPUJointBase::setStopCFM3(const Real32 &value)
{
    _sfStopCFM3.setValue(value);
}


OSG_END_NAMESPACE

#define OSGPHYSICSPUJOINTBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

