/*---------------------------------------------------------------------------*\
 *                        OpenSG ToolBox Toolbox                             *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Phong2Material!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &Phong2MaterialBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 Phong2MaterialBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
Phong2MaterialPtr Phong2MaterialBase::create(void) 
{
    Phong2MaterialPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = Phong2MaterialPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
Phong2MaterialPtr Phong2MaterialBase::createEmpty(void) 
{ 
    Phong2MaterialPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the Phong2Material::_sfSpecularCosinePower field.
inline
const SFReal32 *Phong2MaterialBase::getSFSpecularCosinePower(void) const
{
    return &_sfSpecularCosinePower;
}

//! Get the Phong2Material::_sfSpecularCosinePower field.
inline
SFReal32 *Phong2MaterialBase::editSFSpecularCosinePower(void)
{
    return &_sfSpecularCosinePower;
}

#ifndef OSG_2_PREP
//! Get the Phong2Material::_sfSpecularCosinePower field.
inline
SFReal32 *Phong2MaterialBase::getSFSpecularCosinePower(void)
{
    return &_sfSpecularCosinePower;
}
#endif

//! Get the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
const SFTextureChunkPtr *Phong2MaterialBase::getSFSpecularCosinePowerTexture(void) const
{
    return &_sfSpecularCosinePowerTexture;
}

//! Get the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
SFTextureChunkPtr *Phong2MaterialBase::editSFSpecularCosinePowerTexture(void)
{
    return &_sfSpecularCosinePowerTexture;
}

#ifndef OSG_2_PREP
//! Get the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
SFTextureChunkPtr *Phong2MaterialBase::getSFSpecularCosinePowerTexture(void)
{
    return &_sfSpecularCosinePowerTexture;
}
#endif

//! Get the Phong2Material::_sfSpecularColor field.
inline
const SFColor3f *Phong2MaterialBase::getSFSpecularColor(void) const
{
    return &_sfSpecularColor;
}

//! Get the Phong2Material::_sfSpecularColor field.
inline
SFColor3f *Phong2MaterialBase::editSFSpecularColor(void)
{
    return &_sfSpecularColor;
}

#ifndef OSG_2_PREP
//! Get the Phong2Material::_sfSpecularColor field.
inline
SFColor3f *Phong2MaterialBase::getSFSpecularColor(void)
{
    return &_sfSpecularColor;
}
#endif

//! Get the Phong2Material::_sfSpecularColorTexture field.
inline
const SFTextureChunkPtr *Phong2MaterialBase::getSFSpecularColorTexture(void) const
{
    return &_sfSpecularColorTexture;
}

//! Get the Phong2Material::_sfSpecularColorTexture field.
inline
SFTextureChunkPtr *Phong2MaterialBase::editSFSpecularColorTexture(void)
{
    return &_sfSpecularColorTexture;
}

#ifndef OSG_2_PREP
//! Get the Phong2Material::_sfSpecularColorTexture field.
inline
SFTextureChunkPtr *Phong2MaterialBase::getSFSpecularColorTexture(void)
{
    return &_sfSpecularColorTexture;
}
#endif


//! Get the value of the Phong2Material::_sfSpecularCosinePower field.
inline
Real32 &Phong2MaterialBase::editSpecularCosinePower(void)
{
    return _sfSpecularCosinePower.getValue();
}

//! Get the value of the Phong2Material::_sfSpecularCosinePower field.
inline
const Real32 &Phong2MaterialBase::getSpecularCosinePower(void) const
{
    return _sfSpecularCosinePower.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Phong2Material::_sfSpecularCosinePower field.
inline
Real32 &Phong2MaterialBase::getSpecularCosinePower(void)
{
    return _sfSpecularCosinePower.getValue();
}
#endif

//! Set the value of the Phong2Material::_sfSpecularCosinePower field.
inline
void Phong2MaterialBase::setSpecularCosinePower(const Real32 &value)
{
    _sfSpecularCosinePower.setValue(value);
}

//! Get the value of the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
TextureChunkPtr &Phong2MaterialBase::editSpecularCosinePowerTexture(void)
{
    return _sfSpecularCosinePowerTexture.getValue();
}

//! Get the value of the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
const TextureChunkPtr &Phong2MaterialBase::getSpecularCosinePowerTexture(void) const
{
    return _sfSpecularCosinePowerTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
TextureChunkPtr &Phong2MaterialBase::getSpecularCosinePowerTexture(void)
{
    return _sfSpecularCosinePowerTexture.getValue();
}
#endif

//! Set the value of the Phong2Material::_sfSpecularCosinePowerTexture field.
inline
void Phong2MaterialBase::setSpecularCosinePowerTexture(const TextureChunkPtr &value)
{
    _sfSpecularCosinePowerTexture.setValue(value);
}

//! Get the value of the Phong2Material::_sfSpecularColor field.
inline
Color3f &Phong2MaterialBase::editSpecularColor(void)
{
    return _sfSpecularColor.getValue();
}

//! Get the value of the Phong2Material::_sfSpecularColor field.
inline
const Color3f &Phong2MaterialBase::getSpecularColor(void) const
{
    return _sfSpecularColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Phong2Material::_sfSpecularColor field.
inline
Color3f &Phong2MaterialBase::getSpecularColor(void)
{
    return _sfSpecularColor.getValue();
}
#endif

//! Set the value of the Phong2Material::_sfSpecularColor field.
inline
void Phong2MaterialBase::setSpecularColor(const Color3f &value)
{
    _sfSpecularColor.setValue(value);
}

//! Get the value of the Phong2Material::_sfSpecularColorTexture field.
inline
TextureChunkPtr &Phong2MaterialBase::editSpecularColorTexture(void)
{
    return _sfSpecularColorTexture.getValue();
}

//! Get the value of the Phong2Material::_sfSpecularColorTexture field.
inline
const TextureChunkPtr &Phong2MaterialBase::getSpecularColorTexture(void) const
{
    return _sfSpecularColorTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Phong2Material::_sfSpecularColorTexture field.
inline
TextureChunkPtr &Phong2MaterialBase::getSpecularColorTexture(void)
{
    return _sfSpecularColorTexture.getValue();
}
#endif

//! Set the value of the Phong2Material::_sfSpecularColorTexture field.
inline
void Phong2MaterialBase::setSpecularColorTexture(const TextureChunkPtr &value)
{
    _sfSpecularColorTexture.setValue(value);
}


OSG_END_NAMESPACE

