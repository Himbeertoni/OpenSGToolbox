/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CheckboxButton!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &CheckboxButtonBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 CheckboxButtonBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
CheckboxButtonPtr CheckboxButtonBase::create(void) 
{
    CheckboxButtonPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = CheckboxButtonPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
CheckboxButtonPtr CheckboxButtonBase::createEmpty(void) 
{ 
    CheckboxButtonPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the CheckboxButton::_sfCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFCheckboxDrawObject(void)
{
    return &_sfCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFSelectedCheckboxDrawObject(void)
{
    return &_sfSelectedCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFActiveCheckboxDrawObject(void)
{
    return &_sfActiveCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFActiveSelectedCheckboxDrawObject(void)
{
    return &_sfActiveSelectedCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFRolloverCheckboxDrawObject(void)
{
    return &_sfRolloverCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFRolloverSelectedCheckboxDrawObject(void)
{
    return &_sfRolloverSelectedCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFDisabledCheckboxDrawObject(void)
{
    return &_sfDisabledCheckboxDrawObject;
}

//! Get the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
SFUIDrawObjectCanvasPtr *CheckboxButtonBase::getSFDisabledSelectedCheckboxDrawObject(void)
{
    return &_sfDisabledSelectedCheckboxDrawObject;
}


//! Get the value of the CheckboxButton::_sfCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getCheckboxDrawObject(void)
{
    return _sfCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getCheckboxDrawObject(void) const
{
    return _sfCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfCheckboxDrawObject field.
inline
void CheckboxButtonBase::setCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getSelectedCheckboxDrawObject(void)
{
    return _sfSelectedCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getSelectedCheckboxDrawObject(void) const
{
    return _sfSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setSelectedCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getActiveCheckboxDrawObject(void)
{
    return _sfActiveCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getActiveCheckboxDrawObject(void) const
{
    return _sfActiveCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
void CheckboxButtonBase::setActiveCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfActiveCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getActiveSelectedCheckboxDrawObject(void)
{
    return _sfActiveSelectedCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getActiveSelectedCheckboxDrawObject(void) const
{
    return _sfActiveSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setActiveSelectedCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfActiveSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getRolloverCheckboxDrawObject(void)
{
    return _sfRolloverCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getRolloverCheckboxDrawObject(void) const
{
    return _sfRolloverCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
void CheckboxButtonBase::setRolloverCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfRolloverCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getRolloverSelectedCheckboxDrawObject(void)
{
    return _sfRolloverSelectedCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getRolloverSelectedCheckboxDrawObject(void) const
{
    return _sfRolloverSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setRolloverSelectedCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfRolloverSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getDisabledCheckboxDrawObject(void)
{
    return _sfDisabledCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getDisabledCheckboxDrawObject(void) const
{
    return _sfDisabledCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
void CheckboxButtonBase::setDisabledCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfDisabledCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvasPtr &CheckboxButtonBase::getDisabledSelectedCheckboxDrawObject(void)
{
    return _sfDisabledSelectedCheckboxDrawObject.getValue();
}

//! Get the value of the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
const UIDrawObjectCanvasPtr &CheckboxButtonBase::getDisabledSelectedCheckboxDrawObject(void) const
{
    return _sfDisabledSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setDisabledSelectedCheckboxDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfDisabledSelectedCheckboxDrawObject.setValue(value);
}


OSG_END_NAMESPACE

#define OSGCHECKBOXBUTTONBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

