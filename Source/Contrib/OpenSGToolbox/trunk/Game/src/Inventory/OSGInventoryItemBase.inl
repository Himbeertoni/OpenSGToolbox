/*---------------------------------------------------------------------------*\
 *                        OpenSG ToolBox Game                                *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class InventoryItem!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &InventoryItemBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 InventoryItemBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 


/*------------------------------ get -----------------------------------*/

//! Get the InventoryItem::_sfName field.
inline
const SFString *InventoryItemBase::getSFName(void) const
{
    return &_sfName;
}

//! Get the InventoryItem::_sfName field.
inline
SFString *InventoryItemBase::editSFName(void)
{
    return &_sfName;
}

#ifndef OSG_2_PREP
//! Get the InventoryItem::_sfName field.
inline
SFString *InventoryItemBase::getSFName(void)
{
    return &_sfName;
}
#endif

//! Get the InventoryItem::_mfClasses field.
inline
const MFString *InventoryItemBase::getMFClasses(void) const
{
    return &_mfClasses;
}

//! Get the InventoryItem::_mfClasses field.
inline
MFString *InventoryItemBase::editMFClasses(void)
{
    return &_mfClasses;
}

#ifndef OSG_2_PREP
//! Get the InventoryItem::_mfClasses field.
inline
MFString *InventoryItemBase::getMFClasses(void)
{
    return &_mfClasses;
}
#endif

//! Get the InventoryItem::_sfIcon field.
inline
const SFTextureChunkPtr *InventoryItemBase::getSFIcon(void) const
{
    return &_sfIcon;
}

//! Get the InventoryItem::_sfIcon field.
inline
SFTextureChunkPtr *InventoryItemBase::editSFIcon(void)
{
    return &_sfIcon;
}

#ifndef OSG_2_PREP
//! Get the InventoryItem::_sfIcon field.
inline
SFTextureChunkPtr *InventoryItemBase::getSFIcon(void)
{
    return &_sfIcon;
}
#endif


//! Get the value of the InventoryItem::_sfName field.
inline
std::string &InventoryItemBase::editName(void)
{
    return _sfName.getValue();
}

//! Get the value of the InventoryItem::_sfName field.
inline
const std::string &InventoryItemBase::getName(void) const
{
    return _sfName.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the InventoryItem::_sfName field.
inline
std::string &InventoryItemBase::getName(void)
{
    return _sfName.getValue();
}
#endif

//! Set the value of the InventoryItem::_sfName field.
inline
void InventoryItemBase::setName(const std::string &value)
{
    _sfName.setValue(value);
}

//! Get the value of the InventoryItem::_sfIcon field.
inline
TextureChunkPtr &InventoryItemBase::editIcon(void)
{
    return _sfIcon.getValue();
}

//! Get the value of the InventoryItem::_sfIcon field.
inline
const TextureChunkPtr &InventoryItemBase::getIcon(void) const
{
    return _sfIcon.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the InventoryItem::_sfIcon field.
inline
TextureChunkPtr &InventoryItemBase::getIcon(void)
{
    return _sfIcon.getValue();
}
#endif

//! Set the value of the InventoryItem::_sfIcon field.
inline
void InventoryItemBase::setIcon(const TextureChunkPtr &value)
{
    _sfIcon.setValue(value);
}


//! Get the value of the \a index element the InventoryItem::_mfClasses field.
inline
std::string &InventoryItemBase::editClasses(const UInt32 index)
{
    return _mfClasses[index];
}

//! Get the value of the \a index element the InventoryItem::_mfClasses field.
inline
const std::string &InventoryItemBase::getClasses(const UInt32 index) const
{
    return _mfClasses[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the InventoryItem::_mfClasses field.
inline
std::string &InventoryItemBase::getClasses(const UInt32 index)
{
    return _mfClasses[index];
}

//! Get the InventoryItem::_mfClasses field.
inline
MFString &InventoryItemBase::getClasses(void)
{
    return _mfClasses;
}

//! Get the InventoryItem::_mfClasses field.
inline
const MFString &InventoryItemBase::getClasses(void) const
{
    return _mfClasses;
}

#endif

OSG_END_NAMESPACE

