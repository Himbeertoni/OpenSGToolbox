/*---------------------------------------------------------------------------*\
 *                         OpenSG ToolBox Physics                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                Authors: Behboud Kalantary, David Kabala                   *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsHingeJoint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &PhysicsHingeJointBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 PhysicsHingeJointBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create an empty new instance of the class, do not copy the prototype
inline
PhysicsHingeJointPtr PhysicsHingeJointBase::createEmpty(void) 
{ 
    PhysicsHingeJointPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the PhysicsHingeJoint::_sfAnchor field.
inline
SFVec3f *PhysicsHingeJointBase::getSFAnchor(void)
{
    return &_sfAnchor;
}

//! Get the PhysicsHingeJoint::_sfAxis field.
inline
SFVec3f *PhysicsHingeJointBase::getSFAxis(void)
{
    return &_sfAxis;
}

//! Get the PhysicsHingeJoint::_sfHiStop field.
inline
SFReal32 *PhysicsHingeJointBase::getSFHiStop(void)
{
    return &_sfHiStop;
}

//! Get the PhysicsHingeJoint::_sfLoStop field.
inline
SFReal32 *PhysicsHingeJointBase::getSFLoStop(void)
{
    return &_sfLoStop;
}

//! Get the PhysicsHingeJoint::_sfBounce field.
inline
SFReal32 *PhysicsHingeJointBase::getSFBounce(void)
{
    return &_sfBounce;
}

//! Get the PhysicsHingeJoint::_sfCFM field.
inline
SFReal32 *PhysicsHingeJointBase::getSFCFM(void)
{
    return &_sfCFM;
}

//! Get the PhysicsHingeJoint::_sfStopERP field.
inline
SFReal32 *PhysicsHingeJointBase::getSFStopERP(void)
{
    return &_sfStopERP;
}

//! Get the PhysicsHingeJoint::_sfStopCFM field.
inline
SFReal32 *PhysicsHingeJointBase::getSFStopCFM(void)
{
    return &_sfStopCFM;
}


//! Get the value of the PhysicsHingeJoint::_sfAnchor field.
inline
Vec3f &PhysicsHingeJointBase::getAnchor(void)
{
    return _sfAnchor.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfAnchor field.
inline
const Vec3f &PhysicsHingeJointBase::getAnchor(void) const
{
    return _sfAnchor.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfAnchor field.
inline
void PhysicsHingeJointBase::setAnchor(const Vec3f &value)
{
    _sfAnchor.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfAxis field.
inline
Vec3f &PhysicsHingeJointBase::getAxis(void)
{
    return _sfAxis.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfAxis field.
inline
const Vec3f &PhysicsHingeJointBase::getAxis(void) const
{
    return _sfAxis.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfAxis field.
inline
void PhysicsHingeJointBase::setAxis(const Vec3f &value)
{
    _sfAxis.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfHiStop field.
inline
Real32 &PhysicsHingeJointBase::getHiStop(void)
{
    return _sfHiStop.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfHiStop field.
inline
const Real32 &PhysicsHingeJointBase::getHiStop(void) const
{
    return _sfHiStop.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfHiStop field.
inline
void PhysicsHingeJointBase::setHiStop(const Real32 &value)
{
    _sfHiStop.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfLoStop field.
inline
Real32 &PhysicsHingeJointBase::getLoStop(void)
{
    return _sfLoStop.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfLoStop field.
inline
const Real32 &PhysicsHingeJointBase::getLoStop(void) const
{
    return _sfLoStop.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfLoStop field.
inline
void PhysicsHingeJointBase::setLoStop(const Real32 &value)
{
    _sfLoStop.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfBounce field.
inline
Real32 &PhysicsHingeJointBase::getBounce(void)
{
    return _sfBounce.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfBounce field.
inline
const Real32 &PhysicsHingeJointBase::getBounce(void) const
{
    return _sfBounce.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfBounce field.
inline
void PhysicsHingeJointBase::setBounce(const Real32 &value)
{
    _sfBounce.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfCFM field.
inline
Real32 &PhysicsHingeJointBase::getCFM(void)
{
    return _sfCFM.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfCFM field.
inline
const Real32 &PhysicsHingeJointBase::getCFM(void) const
{
    return _sfCFM.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfCFM field.
inline
void PhysicsHingeJointBase::setCFM(const Real32 &value)
{
    _sfCFM.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfStopERP field.
inline
Real32 &PhysicsHingeJointBase::getStopERP(void)
{
    return _sfStopERP.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfStopERP field.
inline
const Real32 &PhysicsHingeJointBase::getStopERP(void) const
{
    return _sfStopERP.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfStopERP field.
inline
void PhysicsHingeJointBase::setStopERP(const Real32 &value)
{
    _sfStopERP.setValue(value);
}

//! Get the value of the PhysicsHingeJoint::_sfStopCFM field.
inline
Real32 &PhysicsHingeJointBase::getStopCFM(void)
{
    return _sfStopCFM.getValue();
}

//! Get the value of the PhysicsHingeJoint::_sfStopCFM field.
inline
const Real32 &PhysicsHingeJointBase::getStopCFM(void) const
{
    return _sfStopCFM.getValue();
}

//! Set the value of the PhysicsHingeJoint::_sfStopCFM field.
inline
void PhysicsHingeJointBase::setStopCFM(const Real32 &value)
{
    _sfStopCFM.setValue(value);
}


OSG_END_NAMESPACE

#define OSGPHYSICSHINGEJOINTBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

