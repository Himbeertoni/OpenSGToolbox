/*---------------------------------------------------------------------------*\
 *                         OpenSG ToolBox Physics                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          www.vrac.iastate.edu                             *
 *                                                                           *
 *                Authors: Behboud Kalantary, David Kabala                   *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsPUJoint
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPHYSICSPUJOINTBASE_H_
#define _OSGPHYSICSPUJOINTBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGPhysicsDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGPhysicsJoint.h" // Parent

#include <OpenSG/OSGVec3fFields.h> // Anchor type
#include <OpenSG/OSGVec3fFields.h> // Axis1 type
#include <OpenSG/OSGVec3fFields.h> // Axis2 type
#include <OpenSG/OSGVec3fFields.h> // Axis3 type
#include <OpenSG/OSGReal32Fields.h> // HiStop type
#include <OpenSG/OSGReal32Fields.h> // LoStop type
#include <OpenSG/OSGReal32Fields.h> // Bounce type
#include <OpenSG/OSGReal32Fields.h> // CFM type
#include <OpenSG/OSGReal32Fields.h> // StopERP type
#include <OpenSG/OSGReal32Fields.h> // StopCFM type
#include <OpenSG/OSGReal32Fields.h> // HiStop2 type
#include <OpenSG/OSGReal32Fields.h> // LoStop2 type
#include <OpenSG/OSGReal32Fields.h> // Bounce2 type
#include <OpenSG/OSGReal32Fields.h> // CFM2 type
#include <OpenSG/OSGReal32Fields.h> // StopERP2 type
#include <OpenSG/OSGReal32Fields.h> // StopCFM2 type
#include <OpenSG/OSGReal32Fields.h> // HiStop3 type
#include <OpenSG/OSGReal32Fields.h> // LoStop3 type
#include <OpenSG/OSGReal32Fields.h> // Bounce3 type
#include <OpenSG/OSGReal32Fields.h> // CFM3 type
#include <OpenSG/OSGReal32Fields.h> // StopERP3 type
#include <OpenSG/OSGReal32Fields.h> // StopCFM3 type

#include "OSGPhysicsPUJointFields.h"

OSG_BEGIN_NAMESPACE

class PhysicsPUJoint;
class BinaryDataHandler;

//! \brief PhysicsPUJoint Base Class.

class OSG_PHYSICSLIB_DLLMAPPING PhysicsPUJointBase : public PhysicsJoint
{
  private:

    typedef PhysicsJoint    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef PhysicsPUJointPtr  Ptr;

    enum
    {
        AnchorFieldId   = Inherited::NextFieldId,
        Axis1FieldId    = AnchorFieldId   + 1,
        Axis2FieldId    = Axis1FieldId    + 1,
        Axis3FieldId    = Axis2FieldId    + 1,
        HiStopFieldId   = Axis3FieldId    + 1,
        LoStopFieldId   = HiStopFieldId   + 1,
        BounceFieldId   = LoStopFieldId   + 1,
        CFMFieldId      = BounceFieldId   + 1,
        StopERPFieldId  = CFMFieldId      + 1,
        StopCFMFieldId  = StopERPFieldId  + 1,
        HiStop2FieldId  = StopCFMFieldId  + 1,
        LoStop2FieldId  = HiStop2FieldId  + 1,
        Bounce2FieldId  = LoStop2FieldId  + 1,
        CFM2FieldId     = Bounce2FieldId  + 1,
        StopERP2FieldId = CFM2FieldId     + 1,
        StopCFM2FieldId = StopERP2FieldId + 1,
        HiStop3FieldId  = StopCFM2FieldId + 1,
        LoStop3FieldId  = HiStop3FieldId  + 1,
        Bounce3FieldId  = LoStop3FieldId  + 1,
        CFM3FieldId     = Bounce3FieldId  + 1,
        StopERP3FieldId = CFM3FieldId     + 1,
        StopCFM3FieldId = StopERP3FieldId + 1,
        NextFieldId     = StopCFM3FieldId + 1
    };

    static const OSG::BitVector AnchorFieldMask;
    static const OSG::BitVector Axis1FieldMask;
    static const OSG::BitVector Axis2FieldMask;
    static const OSG::BitVector Axis3FieldMask;
    static const OSG::BitVector HiStopFieldMask;
    static const OSG::BitVector LoStopFieldMask;
    static const OSG::BitVector BounceFieldMask;
    static const OSG::BitVector CFMFieldMask;
    static const OSG::BitVector StopERPFieldMask;
    static const OSG::BitVector StopCFMFieldMask;
    static const OSG::BitVector HiStop2FieldMask;
    static const OSG::BitVector LoStop2FieldMask;
    static const OSG::BitVector Bounce2FieldMask;
    static const OSG::BitVector CFM2FieldMask;
    static const OSG::BitVector StopERP2FieldMask;
    static const OSG::BitVector StopCFM2FieldMask;
    static const OSG::BitVector HiStop3FieldMask;
    static const OSG::BitVector LoStop3FieldMask;
    static const OSG::BitVector Bounce3FieldMask;
    static const OSG::BitVector CFM3FieldMask;
    static const OSG::BitVector StopERP3FieldMask;
    static const OSG::BitVector StopCFM3FieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFVec3f             *getSFAnchor         (void);
           SFVec3f             *getSFAxis1          (void);
           SFVec3f             *getSFAxis2          (void);
           SFVec3f             *getSFAxis3          (void);
           SFReal32            *getSFHiStop         (void);
           SFReal32            *getSFLoStop         (void);
           SFReal32            *getSFBounce         (void);
           SFReal32            *getSFCFM            (void);
           SFReal32            *getSFStopERP        (void);
           SFReal32            *getSFStopCFM        (void);
           SFReal32            *getSFHiStop2        (void);
           SFReal32            *getSFLoStop2        (void);
           SFReal32            *getSFBounce2        (void);
           SFReal32            *getSFCFM2           (void);
           SFReal32            *getSFStopERP2       (void);
           SFReal32            *getSFStopCFM2       (void);
           SFReal32            *getSFHiStop3        (void);
           SFReal32            *getSFLoStop3        (void);
           SFReal32            *getSFBounce3        (void);
           SFReal32            *getSFCFM3           (void);
           SFReal32            *getSFStopERP3       (void);
           SFReal32            *getSFStopCFM3       (void);

           Vec3f               &getAnchor         (void);
     const Vec3f               &getAnchor         (void) const;
           Vec3f               &getAxis1          (void);
     const Vec3f               &getAxis1          (void) const;
           Vec3f               &getAxis2          (void);
     const Vec3f               &getAxis2          (void) const;
           Vec3f               &getAxis3          (void);
     const Vec3f               &getAxis3          (void) const;
           Real32              &getHiStop         (void);
     const Real32              &getHiStop         (void) const;
           Real32              &getLoStop         (void);
     const Real32              &getLoStop         (void) const;
           Real32              &getBounce         (void);
     const Real32              &getBounce         (void) const;
           Real32              &getCFM            (void);
     const Real32              &getCFM            (void) const;
           Real32              &getStopERP        (void);
     const Real32              &getStopERP        (void) const;
           Real32              &getStopCFM        (void);
     const Real32              &getStopCFM        (void) const;
           Real32              &getHiStop2        (void);
     const Real32              &getHiStop2        (void) const;
           Real32              &getLoStop2        (void);
     const Real32              &getLoStop2        (void) const;
           Real32              &getBounce2        (void);
     const Real32              &getBounce2        (void) const;
           Real32              &getCFM2           (void);
     const Real32              &getCFM2           (void) const;
           Real32              &getStopERP2       (void);
     const Real32              &getStopERP2       (void) const;
           Real32              &getStopCFM2       (void);
     const Real32              &getStopCFM2       (void) const;
           Real32              &getHiStop3        (void);
     const Real32              &getHiStop3        (void) const;
           Real32              &getLoStop3        (void);
     const Real32              &getLoStop3        (void) const;
           Real32              &getBounce3        (void);
     const Real32              &getBounce3        (void) const;
           Real32              &getCFM3           (void);
     const Real32              &getCFM3           (void) const;
           Real32              &getStopERP3       (void);
     const Real32              &getStopERP3       (void) const;
           Real32              &getStopCFM3       (void);
     const Real32              &getStopCFM3       (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setAnchor         ( const Vec3f &value );
     void setAxis1          ( const Vec3f &value );
     void setAxis2          ( const Vec3f &value );
     void setAxis3          ( const Vec3f &value );
     void setHiStop         ( const Real32 &value );
     void setLoStop         ( const Real32 &value );
     void setBounce         ( const Real32 &value );
     void setCFM            ( const Real32 &value );
     void setStopERP        ( const Real32 &value );
     void setStopCFM        ( const Real32 &value );
     void setHiStop2        ( const Real32 &value );
     void setLoStop2        ( const Real32 &value );
     void setBounce2        ( const Real32 &value );
     void setCFM2           ( const Real32 &value );
     void setStopERP2       ( const Real32 &value );
     void setStopCFM2       ( const Real32 &value );
     void setHiStop3        ( const Real32 &value );
     void setLoStop3        ( const Real32 &value );
     void setBounce3        ( const Real32 &value );
     void setCFM3           ( const Real32 &value );
     void setStopERP3       ( const Real32 &value );
     void setStopCFM3       ( const Real32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  PhysicsPUJointPtr      create          (void); 
    static  PhysicsPUJointPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFVec3f             _sfAnchor;
    SFVec3f             _sfAxis1;
    SFVec3f             _sfAxis2;
    SFVec3f             _sfAxis3;
    SFReal32            _sfHiStop;
    SFReal32            _sfLoStop;
    SFReal32            _sfBounce;
    SFReal32            _sfCFM;
    SFReal32            _sfStopERP;
    SFReal32            _sfStopCFM;
    SFReal32            _sfHiStop2;
    SFReal32            _sfLoStop2;
    SFReal32            _sfBounce2;
    SFReal32            _sfCFM2;
    SFReal32            _sfStopERP2;
    SFReal32            _sfStopCFM2;
    SFReal32            _sfHiStop3;
    SFReal32            _sfLoStop3;
    SFReal32            _sfBounce3;
    SFReal32            _sfCFM3;
    SFReal32            _sfStopERP3;
    SFReal32            _sfStopCFM3;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    PhysicsPUJointBase(void);
    PhysicsPUJointBase(const PhysicsPUJointBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~PhysicsPUJointBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      PhysicsPUJointBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      PhysicsPUJointBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const PhysicsPUJointBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef PhysicsPUJointBase *PhysicsPUJointBaseP;

typedef osgIF<PhysicsPUJointBase::isNodeCore,
              CoredNodePtr<PhysicsPUJoint>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet PhysicsPUJointNodePtr;

typedef RefPtr<PhysicsPUJointPtr> PhysicsPUJointRefPtr;

OSG_END_NAMESPACE

#define OSGPHYSICSPUJOINTBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.40 2005/07/20 00:10:14 vossg Exp $"

#endif /* _OSGPHYSICSPUJOINTBASE_H_ */
