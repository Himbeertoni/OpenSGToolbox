/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DefaultComboBoxComponentGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDEFAULTCOMBOBOXCOMPONENTGENERATORBASE_H_
#define _OSGDEFAULTCOMBOBOXCOMPONENTGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGUserInterfaceDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGComboBoxComponentGenerator.h" // Parent

#include "Component/OSGComponentFields.h" // DrawObjectPrototype type
#include "Layer/OSGLayerFields.h" // SelectedBackground type
#include "Layer/OSGLayerFields.h" // FocusedBackground type
#include "Layer/OSGLayerFields.h" // SelectedForeground type
#include "Layer/OSGLayerFields.h" // FocusedForeground type
#include "Border/OSGBorderFields.h" // SelectedBorder type
#include "Border/OSGBorderFields.h" // FocusedBorder type
#include <OpenSG/OSGColor4fFields.h> // SelectedTextColor type
#include <OpenSG/OSGColor4fFields.h> // FocusedTextColor type
#include <OpenSG/OSGBoolFields.h> // FocusedTextColorHasPriority type
#include <OpenSG/OSGBoolFields.h> // FocusedBorderHasPriority type
#include <OpenSG/OSGBoolFields.h> // FocusedBackgroundHasPriority type

#include "OSGDefaultComboBoxComponentGeneratorFields.h"

OSG_BEGIN_NAMESPACE

class DefaultComboBoxComponentGenerator;
class BinaryDataHandler;

//! \brief DefaultComboBoxComponentGenerator Base Class.

class OSG_USERINTERFACELIB_DLLMAPPING DefaultComboBoxComponentGeneratorBase : public ComboBoxComponentGenerator
{
  private:

    typedef ComboBoxComponentGenerator    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef DefaultComboBoxComponentGeneratorPtr  Ptr;

    enum
    {
        DrawObjectPrototypeFieldId          = Inherited::NextFieldId,
        SelectedBackgroundFieldId           = DrawObjectPrototypeFieldId          + 1,
        FocusedBackgroundFieldId            = SelectedBackgroundFieldId           + 1,
        SelectedForegroundFieldId           = FocusedBackgroundFieldId            + 1,
        FocusedForegroundFieldId            = SelectedForegroundFieldId           + 1,
        SelectedBorderFieldId               = FocusedForegroundFieldId            + 1,
        FocusedBorderFieldId                = SelectedBorderFieldId               + 1,
        SelectedTextColorFieldId            = FocusedBorderFieldId                + 1,
        FocusedTextColorFieldId             = SelectedTextColorFieldId            + 1,
        FocusedTextColorHasPriorityFieldId  = FocusedTextColorFieldId             + 1,
        FocusedBorderHasPriorityFieldId     = FocusedTextColorHasPriorityFieldId  + 1,
        FocusedBackgroundHasPriorityFieldId = FocusedBorderHasPriorityFieldId     + 1,
        NextFieldId                         = FocusedBackgroundHasPriorityFieldId + 1
    };

    static const OSG::BitVector DrawObjectPrototypeFieldMask;
    static const OSG::BitVector SelectedBackgroundFieldMask;
    static const OSG::BitVector FocusedBackgroundFieldMask;
    static const OSG::BitVector SelectedForegroundFieldMask;
    static const OSG::BitVector FocusedForegroundFieldMask;
    static const OSG::BitVector SelectedBorderFieldMask;
    static const OSG::BitVector FocusedBorderFieldMask;
    static const OSG::BitVector SelectedTextColorFieldMask;
    static const OSG::BitVector FocusedTextColorFieldMask;
    static const OSG::BitVector FocusedTextColorHasPriorityFieldMask;
    static const OSG::BitVector FocusedBorderHasPriorityFieldMask;
    static const OSG::BitVector FocusedBackgroundHasPriorityFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFComponentPtr      *getSFDrawObjectPrototype(void);
           SFLayerPtr          *getSFSelectedBackground(void);
           SFLayerPtr          *getSFFocusedBackground(void);
           SFLayerPtr          *getSFSelectedForeground(void);
           SFLayerPtr          *getSFFocusedForeground(void);
           SFBorderPtr         *getSFSelectedBorder (void);
           SFBorderPtr         *getSFFocusedBorder  (void);
           SFColor4f           *getSFSelectedTextColor(void);
           SFColor4f           *getSFFocusedTextColor(void);
           SFBool              *getSFFocusedTextColorHasPriority(void);
           SFBool              *getSFFocusedBorderHasPriority(void);
           SFBool              *getSFFocusedBackgroundHasPriority(void);

           ComponentPtr        &getDrawObjectPrototype(void);
     const ComponentPtr        &getDrawObjectPrototype(void) const;
           LayerPtr            &getSelectedBackground(void);
     const LayerPtr            &getSelectedBackground(void) const;
           LayerPtr            &getFocusedBackground(void);
     const LayerPtr            &getFocusedBackground(void) const;
           LayerPtr            &getSelectedForeground(void);
     const LayerPtr            &getSelectedForeground(void) const;
           LayerPtr            &getFocusedForeground(void);
     const LayerPtr            &getFocusedForeground(void) const;
           BorderPtr           &getSelectedBorder (void);
     const BorderPtr           &getSelectedBorder (void) const;
           BorderPtr           &getFocusedBorder  (void);
     const BorderPtr           &getFocusedBorder  (void) const;
           Color4f             &getSelectedTextColor(void);
     const Color4f             &getSelectedTextColor(void) const;
           Color4f             &getFocusedTextColor(void);
     const Color4f             &getFocusedTextColor(void) const;
           bool                &getFocusedTextColorHasPriority(void);
     const bool                &getFocusedTextColorHasPriority(void) const;
           bool                &getFocusedBorderHasPriority(void);
     const bool                &getFocusedBorderHasPriority(void) const;
           bool                &getFocusedBackgroundHasPriority(void);
     const bool                &getFocusedBackgroundHasPriority(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setDrawObjectPrototype( const ComponentPtr &value );
     void setSelectedBackground( const LayerPtr &value );
     void setFocusedBackground( const LayerPtr &value );
     void setSelectedForeground( const LayerPtr &value );
     void setFocusedForeground( const LayerPtr &value );
     void setSelectedBorder ( const BorderPtr &value );
     void setFocusedBorder  ( const BorderPtr &value );
     void setSelectedTextColor( const Color4f &value );
     void setFocusedTextColor( const Color4f &value );
     void setFocusedTextColorHasPriority( const bool &value );
     void setFocusedBorderHasPriority( const bool &value );
     void setFocusedBackgroundHasPriority( const bool &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  DefaultComboBoxComponentGeneratorPtr      create          (void); 
    static  DefaultComboBoxComponentGeneratorPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFComponentPtr      _sfDrawObjectPrototype;
    SFLayerPtr          _sfSelectedBackground;
    SFLayerPtr          _sfFocusedBackground;
    SFLayerPtr          _sfSelectedForeground;
    SFLayerPtr          _sfFocusedForeground;
    SFBorderPtr         _sfSelectedBorder;
    SFBorderPtr         _sfFocusedBorder;
    SFColor4f           _sfSelectedTextColor;
    SFColor4f           _sfFocusedTextColor;
    SFBool              _sfFocusedTextColorHasPriority;
    SFBool              _sfFocusedBorderHasPriority;
    SFBool              _sfFocusedBackgroundHasPriority;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DefaultComboBoxComponentGeneratorBase(void);
    DefaultComboBoxComponentGeneratorBase(const DefaultComboBoxComponentGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DefaultComboBoxComponentGeneratorBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      DefaultComboBoxComponentGeneratorBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      DefaultComboBoxComponentGeneratorBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DefaultComboBoxComponentGeneratorBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef DefaultComboBoxComponentGeneratorBase *DefaultComboBoxComponentGeneratorBaseP;

typedef osgIF<DefaultComboBoxComponentGeneratorBase::isNodeCore,
              CoredNodePtr<DefaultComboBoxComponentGenerator>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet DefaultComboBoxComponentGeneratorNodePtr;

typedef RefPtr<DefaultComboBoxComponentGeneratorPtr> DefaultComboBoxComponentGeneratorRefPtr;

OSG_END_NAMESPACE

#define OSGDEFAULTCOMBOBOXCOMPONENTGENERATORBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.40 2005/07/20 00:10:14 vossg Exp $"

#endif /* _OSGDEFAULTCOMBOBOXCOMPONENTGENERATORBASE_H_ */
