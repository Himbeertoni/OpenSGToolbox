/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DialogWindow!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &DialogWindowBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 DialogWindowBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! access the producer type of the class
inline
const EventProducerType &DialogWindowBase::getProducerClassType(void)
{
    return _producerType;
}

//! access the producer type id of the class
inline
UInt32 DialogWindowBase::getProducerClassTypeId(void)
{
    return _producerType.getId();
}

//! create a new instance of the class
inline
DialogWindowPtr DialogWindowBase::create(void) 
{
    DialogWindowPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = DialogWindowPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
DialogWindowPtr DialogWindowBase::createEmpty(void) 
{ 
    DialogWindowPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the DialogWindow::_sfErrorIcon field.
inline
const SFReal32 *DialogWindowBase::getSFErrorIcon(void) const
{
    return &_sfErrorIcon;
}

//! Get the DialogWindow::_sfErrorIcon field.
inline
SFReal32 *DialogWindowBase::editSFErrorIcon(void)
{
    return &_sfErrorIcon;
}

//! Get the DialogWindow::_sfQuestionIcon field.
inline
const SFReal32 *DialogWindowBase::getSFQuestionIcon(void) const
{
    return &_sfQuestionIcon;
}

//! Get the DialogWindow::_sfQuestionIcon field.
inline
SFReal32 *DialogWindowBase::editSFQuestionIcon(void)
{
    return &_sfQuestionIcon;
}

//! Get the DialogWindow::_sfDefaultIcon field.
inline
const SFReal32 *DialogWindowBase::getSFDefaultIcon(void) const
{
    return &_sfDefaultIcon;
}

//! Get the DialogWindow::_sfDefaultIcon field.
inline
SFReal32 *DialogWindowBase::editSFDefaultIcon(void)
{
    return &_sfDefaultIcon;
}

//! Get the DialogWindow::_sfShowCancel field.
inline
const SFBool *DialogWindowBase::getSFShowCancel(void) const
{
    return &_sfShowCancel;
}

//! Get the DialogWindow::_sfShowCancel field.
inline
SFBool *DialogWindowBase::editSFShowCancel(void)
{
    return &_sfShowCancel;
}

//! Get the DialogWindow::_sfInputValues field.
inline
const SFString *DialogWindowBase::getSFInputValues(void) const
{
    return &_sfInputValues;
}

//! Get the DialogWindow::_sfInputValues field.
inline
SFString *DialogWindowBase::editSFInputValues(void)
{
    return &_sfInputValues;
}


//! Get the value of the DialogWindow::_sfErrorIcon field.
inline
Real32 &DialogWindowBase::editErrorIcon(void)
{
    return _sfErrorIcon.getValue();
}

//! Get the value of the DialogWindow::_sfErrorIcon field.
inline
const Real32 &DialogWindowBase::getErrorIcon(void) const
{
    return _sfErrorIcon.getValue();
}

//! Set the value of the DialogWindow::_sfErrorIcon field.
inline
void DialogWindowBase::setErrorIcon(const Real32 &value)
{
    _sfErrorIcon.setValue(value);
}

//! Get the value of the DialogWindow::_sfQuestionIcon field.
inline
Real32 &DialogWindowBase::editQuestionIcon(void)
{
    return _sfQuestionIcon.getValue();
}

//! Get the value of the DialogWindow::_sfQuestionIcon field.
inline
const Real32 &DialogWindowBase::getQuestionIcon(void) const
{
    return _sfQuestionIcon.getValue();
}

//! Set the value of the DialogWindow::_sfQuestionIcon field.
inline
void DialogWindowBase::setQuestionIcon(const Real32 &value)
{
    _sfQuestionIcon.setValue(value);
}

//! Get the value of the DialogWindow::_sfDefaultIcon field.
inline
Real32 &DialogWindowBase::editDefaultIcon(void)
{
    return _sfDefaultIcon.getValue();
}

//! Get the value of the DialogWindow::_sfDefaultIcon field.
inline
const Real32 &DialogWindowBase::getDefaultIcon(void) const
{
    return _sfDefaultIcon.getValue();
}

//! Set the value of the DialogWindow::_sfDefaultIcon field.
inline
void DialogWindowBase::setDefaultIcon(const Real32 &value)
{
    _sfDefaultIcon.setValue(value);
}

//! Get the value of the DialogWindow::_sfShowCancel field.
inline
bool &DialogWindowBase::editShowCancel(void)
{
    return _sfShowCancel.getValue();
}

//! Get the value of the DialogWindow::_sfShowCancel field.
inline
const bool &DialogWindowBase::getShowCancel(void) const
{
    return _sfShowCancel.getValue();
}

//! Set the value of the DialogWindow::_sfShowCancel field.
inline
void DialogWindowBase::setShowCancel(const bool &value)
{
    _sfShowCancel.setValue(value);
}

//! Get the value of the DialogWindow::_sfInputValues field.
inline
std::string &DialogWindowBase::editInputValues(void)
{
    return _sfInputValues.getValue();
}

//! Get the value of the DialogWindow::_sfInputValues field.
inline
const std::string &DialogWindowBase::getInputValues(void) const
{
    return _sfInputValues.getValue();
}

//! Set the value of the DialogWindow::_sfInputValues field.
inline
void DialogWindowBase::setInputValues(const std::string &value)
{
    _sfInputValues.setValue(value);
}


OSG_END_NAMESPACE
