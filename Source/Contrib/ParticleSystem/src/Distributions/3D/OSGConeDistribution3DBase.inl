/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ConeDistribution3D!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ConeDistribution3DBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ConeDistribution3DBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ConeDistribution3DBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the ConeDistribution3D::_sfPosition field.

inline
Pnt3f &ConeDistribution3DBase::editPosition(void)
{
    editSField(PositionFieldMask);

    return _sfPosition.getValue();
}

//! Get the value of the ConeDistribution3D::_sfPosition field.
inline
const Pnt3f &ConeDistribution3DBase::getPosition(void) const
{
    return _sfPosition.getValue();
}

//! Set the value of the ConeDistribution3D::_sfPosition field.
inline
void ConeDistribution3DBase::setPosition(const Pnt3f &value)
{
    editSField(PositionFieldMask);

    _sfPosition.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfDirection field.

inline
Vec3f &ConeDistribution3DBase::editDirection(void)
{
    editSField(DirectionFieldMask);

    return _sfDirection.getValue();
}

//! Get the value of the ConeDistribution3D::_sfDirection field.
inline
const Vec3f &ConeDistribution3DBase::getDirection(void) const
{
    return _sfDirection.getValue();
}

//! Set the value of the ConeDistribution3D::_sfDirection field.
inline
void ConeDistribution3DBase::setDirection(const Vec3f &value)
{
    editSField(DirectionFieldMask);

    _sfDirection.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfSpread field.

inline
Real32 &ConeDistribution3DBase::editSpread(void)
{
    editSField(SpreadFieldMask);

    return _sfSpread.getValue();
}

//! Get the value of the ConeDistribution3D::_sfSpread field.
inline
      Real32  ConeDistribution3DBase::getSpread(void) const
{
    return _sfSpread.getValue();
}

//! Set the value of the ConeDistribution3D::_sfSpread field.
inline
void ConeDistribution3DBase::setSpread(const Real32 value)
{
    editSField(SpreadFieldMask);

    _sfSpread.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfMinTheta field.

inline
Real32 &ConeDistribution3DBase::editMinTheta(void)
{
    editSField(MinThetaFieldMask);

    return _sfMinTheta.getValue();
}

//! Get the value of the ConeDistribution3D::_sfMinTheta field.
inline
      Real32  ConeDistribution3DBase::getMinTheta(void) const
{
    return _sfMinTheta.getValue();
}

//! Set the value of the ConeDistribution3D::_sfMinTheta field.
inline
void ConeDistribution3DBase::setMinTheta(const Real32 value)
{
    editSField(MinThetaFieldMask);

    _sfMinTheta.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfMaxTheta field.

inline
Real32 &ConeDistribution3DBase::editMaxTheta(void)
{
    editSField(MaxThetaFieldMask);

    return _sfMaxTheta.getValue();
}

//! Get the value of the ConeDistribution3D::_sfMaxTheta field.
inline
      Real32  ConeDistribution3DBase::getMaxTheta(void) const
{
    return _sfMaxTheta.getValue();
}

//! Set the value of the ConeDistribution3D::_sfMaxTheta field.
inline
void ConeDistribution3DBase::setMaxTheta(const Real32 value)
{
    editSField(MaxThetaFieldMask);

    _sfMaxTheta.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfMin field.

inline
Real32 &ConeDistribution3DBase::editMin(void)
{
    editSField(MinFieldMask);

    return _sfMin.getValue();
}

//! Get the value of the ConeDistribution3D::_sfMin field.
inline
      Real32  ConeDistribution3DBase::getMin(void) const
{
    return _sfMin.getValue();
}

//! Set the value of the ConeDistribution3D::_sfMin field.
inline
void ConeDistribution3DBase::setMin(const Real32 value)
{
    editSField(MinFieldMask);

    _sfMin.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfMax field.

inline
Real32 &ConeDistribution3DBase::editMax(void)
{
    editSField(MaxFieldMask);

    return _sfMax.getValue();
}

//! Get the value of the ConeDistribution3D::_sfMax field.
inline
      Real32  ConeDistribution3DBase::getMax(void) const
{
    return _sfMax.getValue();
}

//! Set the value of the ConeDistribution3D::_sfMax field.
inline
void ConeDistribution3DBase::setMax(const Real32 value)
{
    editSField(MaxFieldMask);

    _sfMax.setValue(value);
}
//! Get the value of the ConeDistribution3D::_sfSurfaceOrVolume field.

inline
UInt32 &ConeDistribution3DBase::editSurfaceOrVolume(void)
{
    editSField(SurfaceOrVolumeFieldMask);

    return _sfSurfaceOrVolume.getValue();
}

//! Get the value of the ConeDistribution3D::_sfSurfaceOrVolume field.
inline
      UInt32  ConeDistribution3DBase::getSurfaceOrVolume(void) const
{
    return _sfSurfaceOrVolume.getValue();
}

//! Set the value of the ConeDistribution3D::_sfSurfaceOrVolume field.
inline
void ConeDistribution3DBase::setSurfaceOrVolume(const UInt32 value)
{
    editSField(SurfaceOrVolumeFieldMask);

    _sfSurfaceOrVolume.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void ConeDistribution3DBase::execSync (      ConeDistribution3DBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (PositionFieldMask & whichField))
        _sfPosition.syncWith(pFrom->_sfPosition);

    if(FieldBits::NoField != (DirectionFieldMask & whichField))
        _sfDirection.syncWith(pFrom->_sfDirection);

    if(FieldBits::NoField != (SpreadFieldMask & whichField))
        _sfSpread.syncWith(pFrom->_sfSpread);

    if(FieldBits::NoField != (MinThetaFieldMask & whichField))
        _sfMinTheta.syncWith(pFrom->_sfMinTheta);

    if(FieldBits::NoField != (MaxThetaFieldMask & whichField))
        _sfMaxTheta.syncWith(pFrom->_sfMaxTheta);

    if(FieldBits::NoField != (MinFieldMask & whichField))
        _sfMin.syncWith(pFrom->_sfMin);

    if(FieldBits::NoField != (MaxFieldMask & whichField))
        _sfMax.syncWith(pFrom->_sfMax);

    if(FieldBits::NoField != (SurfaceOrVolumeFieldMask & whichField))
        _sfSurfaceOrVolume.syncWith(pFrom->_sfSurfaceOrVolume);
}
#endif


inline
const Char8 *ConeDistribution3DBase::getClassname(void)
{
    return "ConeDistribution3D";
}


OSG_GEN_CONTAINERPTR(ConeDistribution3D);

OSG_END_NAMESPACE

