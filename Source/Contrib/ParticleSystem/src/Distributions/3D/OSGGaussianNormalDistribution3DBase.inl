/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox Particle System                        *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GaussianNormalDistribution3D!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &GaussianNormalDistribution3DBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 GaussianNormalDistribution3DBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
GaussianNormalDistribution3DPtr GaussianNormalDistribution3DBase::create(void) 
{
    GaussianNormalDistribution3DPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = GaussianNormalDistribution3DPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
GaussianNormalDistribution3DPtr GaussianNormalDistribution3DBase::createEmpty(void) 
{ 
    GaussianNormalDistribution3DPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the GaussianNormalDistribution3D::_sfMean field.
inline
const SFPnt3f *GaussianNormalDistribution3DBase::getSFMean(void) const
{
    return &_sfMean;
}

//! Get the GaussianNormalDistribution3D::_sfMean field.
inline
SFPnt3f *GaussianNormalDistribution3DBase::editSFMean(void)
{
    return &_sfMean;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationX field.
inline
const SFReal32 *GaussianNormalDistribution3DBase::getSFStandardDeviationX(void) const
{
    return &_sfStandardDeviationX;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationX field.
inline
SFReal32 *GaussianNormalDistribution3DBase::editSFStandardDeviationX(void)
{
    return &_sfStandardDeviationX;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationY field.
inline
const SFReal32 *GaussianNormalDistribution3DBase::getSFStandardDeviationY(void) const
{
    return &_sfStandardDeviationY;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationY field.
inline
SFReal32 *GaussianNormalDistribution3DBase::editSFStandardDeviationY(void)
{
    return &_sfStandardDeviationY;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationZ field.
inline
const SFReal32 *GaussianNormalDistribution3DBase::getSFStandardDeviationZ(void) const
{
    return &_sfStandardDeviationZ;
}

//! Get the GaussianNormalDistribution3D::_sfStandardDeviationZ field.
inline
SFReal32 *GaussianNormalDistribution3DBase::editSFStandardDeviationZ(void)
{
    return &_sfStandardDeviationZ;
}


//! Get the value of the GaussianNormalDistribution3D::_sfMean field.
inline
Pnt3f &GaussianNormalDistribution3DBase::editMean(void)
{
    return _sfMean.getValue();
}

//! Get the value of the GaussianNormalDistribution3D::_sfMean field.
inline
const Pnt3f &GaussianNormalDistribution3DBase::getMean(void) const
{
    return _sfMean.getValue();
}

//! Set the value of the GaussianNormalDistribution3D::_sfMean field.
inline
void GaussianNormalDistribution3DBase::setMean(const Pnt3f &value)
{
    _sfMean.setValue(value);
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationX field.
inline
Real32 &GaussianNormalDistribution3DBase::editStandardDeviationX(void)
{
    return _sfStandardDeviationX.getValue();
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationX field.
inline
const Real32 &GaussianNormalDistribution3DBase::getStandardDeviationX(void) const
{
    return _sfStandardDeviationX.getValue();
}

//! Set the value of the GaussianNormalDistribution3D::_sfStandardDeviationX field.
inline
void GaussianNormalDistribution3DBase::setStandardDeviationX(const Real32 &value)
{
    _sfStandardDeviationX.setValue(value);
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationY field.
inline
Real32 &GaussianNormalDistribution3DBase::editStandardDeviationY(void)
{
    return _sfStandardDeviationY.getValue();
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationY field.
inline
const Real32 &GaussianNormalDistribution3DBase::getStandardDeviationY(void) const
{
    return _sfStandardDeviationY.getValue();
}

//! Set the value of the GaussianNormalDistribution3D::_sfStandardDeviationY field.
inline
void GaussianNormalDistribution3DBase::setStandardDeviationY(const Real32 &value)
{
    _sfStandardDeviationY.setValue(value);
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationZ field.
inline
Real32 &GaussianNormalDistribution3DBase::editStandardDeviationZ(void)
{
    return _sfStandardDeviationZ.getValue();
}

//! Get the value of the GaussianNormalDistribution3D::_sfStandardDeviationZ field.
inline
const Real32 &GaussianNormalDistribution3DBase::getStandardDeviationZ(void) const
{
    return _sfStandardDeviationZ.getValue();
}

//! Set the value of the GaussianNormalDistribution3D::_sfStandardDeviationZ field.
inline
void GaussianNormalDistribution3DBase::setStandardDeviationZ(const Real32 &value)
{
    _sfStandardDeviationZ.setValue(value);
}


OSG_END_NAMESPACE
