/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox Particle System                        *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystemCore!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ParticleSystemCoreBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 ParticleSystemCoreBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
ParticleSystemCorePtr ParticleSystemCoreBase::create(void) 
{
    ParticleSystemCorePtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = ParticleSystemCorePtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
ParticleSystemCorePtr ParticleSystemCoreBase::createEmpty(void) 
{ 
    ParticleSystemCorePtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the ParticleSystemCore::_sfSortingMode field.
inline
SFUInt32 *ParticleSystemCoreBase::getSFSortingMode(void)
{
    return &_sfSortingMode;
}

//! Get the ParticleSystemCore::_mfSort field.
inline
MFUInt32 *ParticleSystemCoreBase::getMFSort(void)
{
    return &_mfSort;
}

//! Get the ParticleSystemCore::_sfSystem field.
inline
SFParticleSystemPtr *ParticleSystemCoreBase::getSFSystem(void)
{
    return &_sfSystem;
}

//! Get the ParticleSystemCore::_sfDrawer field.
inline
SFParticleSystemDrawerPtr *ParticleSystemCoreBase::getSFDrawer(void)
{
    return &_sfDrawer;
}


//! Get the value of the ParticleSystemCore::_sfSortingMode field.
inline
UInt32 &ParticleSystemCoreBase::getSortingMode(void)
{
    return _sfSortingMode.getValue();
}

//! Get the value of the ParticleSystemCore::_sfSortingMode field.
inline
const UInt32 &ParticleSystemCoreBase::getSortingMode(void) const
{
    return _sfSortingMode.getValue();
}

//! Set the value of the ParticleSystemCore::_sfSortingMode field.
inline
void ParticleSystemCoreBase::setSortingMode(const UInt32 &value)
{
    _sfSortingMode.setValue(value);
}

//! Get the value of the ParticleSystemCore::_sfSystem field.
inline
ParticleSystemPtr &ParticleSystemCoreBase::getSystem(void)
{
    return _sfSystem.getValue();
}

//! Get the value of the ParticleSystemCore::_sfSystem field.
inline
const ParticleSystemPtr &ParticleSystemCoreBase::getSystem(void) const
{
    return _sfSystem.getValue();
}

//! Set the value of the ParticleSystemCore::_sfSystem field.
inline
void ParticleSystemCoreBase::setSystem(const ParticleSystemPtr &value)
{
    _sfSystem.setValue(value);
}

//! Get the value of the ParticleSystemCore::_sfDrawer field.
inline
ParticleSystemDrawerPtr &ParticleSystemCoreBase::getDrawer(void)
{
    return _sfDrawer.getValue();
}

//! Get the value of the ParticleSystemCore::_sfDrawer field.
inline
const ParticleSystemDrawerPtr &ParticleSystemCoreBase::getDrawer(void) const
{
    return _sfDrawer.getValue();
}

//! Set the value of the ParticleSystemCore::_sfDrawer field.
inline
void ParticleSystemCoreBase::setDrawer(const ParticleSystemDrawerPtr &value)
{
    _sfDrawer.setValue(value);
}


//! Get the value of the \a index element the ParticleSystemCore::_mfSort field.
inline
UInt32 &ParticleSystemCoreBase::getSort(const UInt32 index)
{
    return _mfSort[index];
}

//! Get the ParticleSystemCore::_mfSort field.
inline
MFUInt32 &ParticleSystemCoreBase::getSort(void)
{
    return _mfSort;
}

//! Get the ParticleSystemCore::_mfSort field.
inline
const MFUInt32 &ParticleSystemCoreBase::getSort(void) const
{
    return _mfSort;
}

OSG_END_NAMESPACE

#define OSGPARTICLESYSTEMCOREBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

