/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class AttributeAttractRepelParticleAffector!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &AttributeAttractRepelParticleAffectorBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 AttributeAttractRepelParticleAffectorBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 AttributeAttractRepelParticleAffectorBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the AttributeAttractRepelParticleAffector::_sfAttributeAffected field.

inline
UInt32 &AttributeAttractRepelParticleAffectorBase::editAttributeAffected(void)
{
    editSField(AttributeAffectedFieldMask);

    return _sfAttributeAffected.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfAttributeAffected field.
inline
      UInt32  AttributeAttractRepelParticleAffectorBase::getAttributeAffected(void) const
{
    return _sfAttributeAffected.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfAttributeAffected field.
inline
void AttributeAttractRepelParticleAffectorBase::setAttributeAffected(const UInt32 value)
{
    editSField(AttributeAffectedFieldMask);

    _sfAttributeAffected.setValue(value);
}
//! Get the value of the AttributeAttractRepelParticleAffector::_sfMinDistance field.

inline
Real32 &AttributeAttractRepelParticleAffectorBase::editMinDistance(void)
{
    editSField(MinDistanceFieldMask);

    return _sfMinDistance.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfMinDistance field.
inline
      Real32  AttributeAttractRepelParticleAffectorBase::getMinDistance(void) const
{
    return _sfMinDistance.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfMinDistance field.
inline
void AttributeAttractRepelParticleAffectorBase::setMinDistance(const Real32 value)
{
    editSField(MinDistanceFieldMask);

    _sfMinDistance.setValue(value);
}
//! Get the value of the AttributeAttractRepelParticleAffector::_sfMaxDistance field.

inline
Real32 &AttributeAttractRepelParticleAffectorBase::editMaxDistance(void)
{
    editSField(MaxDistanceFieldMask);

    return _sfMaxDistance.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfMaxDistance field.
inline
      Real32  AttributeAttractRepelParticleAffectorBase::getMaxDistance(void) const
{
    return _sfMaxDistance.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfMaxDistance field.
inline
void AttributeAttractRepelParticleAffectorBase::setMaxDistance(const Real32 value)
{
    editSField(MaxDistanceFieldMask);

    _sfMaxDistance.setValue(value);
}
//! Get the value of the AttributeAttractRepelParticleAffector::_sfQuadratic field.

inline
Real32 &AttributeAttractRepelParticleAffectorBase::editQuadratic(void)
{
    editSField(QuadraticFieldMask);

    return _sfQuadratic.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfQuadratic field.
inline
      Real32  AttributeAttractRepelParticleAffectorBase::getQuadratic(void) const
{
    return _sfQuadratic.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfQuadratic field.
inline
void AttributeAttractRepelParticleAffectorBase::setQuadratic(const Real32 value)
{
    editSField(QuadraticFieldMask);

    _sfQuadratic.setValue(value);
}
//! Get the value of the AttributeAttractRepelParticleAffector::_sfLinear field.

inline
Real32 &AttributeAttractRepelParticleAffectorBase::editLinear(void)
{
    editSField(LinearFieldMask);

    return _sfLinear.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfLinear field.
inline
      Real32  AttributeAttractRepelParticleAffectorBase::getLinear(void) const
{
    return _sfLinear.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfLinear field.
inline
void AttributeAttractRepelParticleAffectorBase::setLinear(const Real32 value)
{
    editSField(LinearFieldMask);

    _sfLinear.setValue(value);
}
//! Get the value of the AttributeAttractRepelParticleAffector::_sfConstant field.

inline
Real32 &AttributeAttractRepelParticleAffectorBase::editConstant(void)
{
    editSField(ConstantFieldMask);

    return _sfConstant.getValue();
}

//! Get the value of the AttributeAttractRepelParticleAffector::_sfConstant field.
inline
      Real32  AttributeAttractRepelParticleAffectorBase::getConstant(void) const
{
    return _sfConstant.getValue();
}

//! Set the value of the AttributeAttractRepelParticleAffector::_sfConstant field.
inline
void AttributeAttractRepelParticleAffectorBase::setConstant(const Real32 value)
{
    editSField(ConstantFieldMask);

    _sfConstant.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void AttributeAttractRepelParticleAffectorBase::execSync (      AttributeAttractRepelParticleAffectorBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (AttributeAffectedFieldMask & whichField))
        _sfAttributeAffected.syncWith(pFrom->_sfAttributeAffected);

    if(FieldBits::NoField != (MinDistanceFieldMask & whichField))
        _sfMinDistance.syncWith(pFrom->_sfMinDistance);

    if(FieldBits::NoField != (MaxDistanceFieldMask & whichField))
        _sfMaxDistance.syncWith(pFrom->_sfMaxDistance);

    if(FieldBits::NoField != (QuadraticFieldMask & whichField))
        _sfQuadratic.syncWith(pFrom->_sfQuadratic);

    if(FieldBits::NoField != (LinearFieldMask & whichField))
        _sfLinear.syncWith(pFrom->_sfLinear);

    if(FieldBits::NoField != (ConstantFieldMask & whichField))
        _sfConstant.syncWith(pFrom->_sfConstant);
}
#endif


inline
const Char8 *AttributeAttractRepelParticleAffectorBase::getClassname(void)
{
    return "AttributeAttractRepelParticleAffector";
}


OSG_GEN_CONTAINERPTR(AttributeAttractRepelParticleAffector);

OSG_END_NAMESPACE

