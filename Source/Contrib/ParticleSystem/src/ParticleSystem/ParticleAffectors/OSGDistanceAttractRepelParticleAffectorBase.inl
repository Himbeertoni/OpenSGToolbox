/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DistanceAttractRepelParticleAffector!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &DistanceAttractRepelParticleAffectorBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 DistanceAttractRepelParticleAffectorBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 DistanceAttractRepelParticleAffectorBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the DistanceAttractRepelParticleAffector::_sfMinDistance field.

inline
Real32 &DistanceAttractRepelParticleAffectorBase::editMinDistance(void)
{
    editSField(MinDistanceFieldMask);

    return _sfMinDistance.getValue();
}

//! Get the value of the DistanceAttractRepelParticleAffector::_sfMinDistance field.
inline
      Real32  DistanceAttractRepelParticleAffectorBase::getMinDistance(void) const
{
    return _sfMinDistance.getValue();
}

//! Set the value of the DistanceAttractRepelParticleAffector::_sfMinDistance field.
inline
void DistanceAttractRepelParticleAffectorBase::setMinDistance(const Real32 value)
{
    editSField(MinDistanceFieldMask);

    _sfMinDistance.setValue(value);
}
//! Get the value of the DistanceAttractRepelParticleAffector::_sfMaxDistance field.

inline
Real32 &DistanceAttractRepelParticleAffectorBase::editMaxDistance(void)
{
    editSField(MaxDistanceFieldMask);

    return _sfMaxDistance.getValue();
}

//! Get the value of the DistanceAttractRepelParticleAffector::_sfMaxDistance field.
inline
      Real32  DistanceAttractRepelParticleAffectorBase::getMaxDistance(void) const
{
    return _sfMaxDistance.getValue();
}

//! Set the value of the DistanceAttractRepelParticleAffector::_sfMaxDistance field.
inline
void DistanceAttractRepelParticleAffectorBase::setMaxDistance(const Real32 value)
{
    editSField(MaxDistanceFieldMask);

    _sfMaxDistance.setValue(value);
}
//! Get the value of the DistanceAttractRepelParticleAffector::_sfQuadratic field.

inline
Real32 &DistanceAttractRepelParticleAffectorBase::editQuadratic(void)
{
    editSField(QuadraticFieldMask);

    return _sfQuadratic.getValue();
}

//! Get the value of the DistanceAttractRepelParticleAffector::_sfQuadratic field.
inline
      Real32  DistanceAttractRepelParticleAffectorBase::getQuadratic(void) const
{
    return _sfQuadratic.getValue();
}

//! Set the value of the DistanceAttractRepelParticleAffector::_sfQuadratic field.
inline
void DistanceAttractRepelParticleAffectorBase::setQuadratic(const Real32 value)
{
    editSField(QuadraticFieldMask);

    _sfQuadratic.setValue(value);
}
//! Get the value of the DistanceAttractRepelParticleAffector::_sfLinear field.

inline
Real32 &DistanceAttractRepelParticleAffectorBase::editLinear(void)
{
    editSField(LinearFieldMask);

    return _sfLinear.getValue();
}

//! Get the value of the DistanceAttractRepelParticleAffector::_sfLinear field.
inline
      Real32  DistanceAttractRepelParticleAffectorBase::getLinear(void) const
{
    return _sfLinear.getValue();
}

//! Set the value of the DistanceAttractRepelParticleAffector::_sfLinear field.
inline
void DistanceAttractRepelParticleAffectorBase::setLinear(const Real32 value)
{
    editSField(LinearFieldMask);

    _sfLinear.setValue(value);
}
//! Get the value of the DistanceAttractRepelParticleAffector::_sfConstant field.

inline
Real32 &DistanceAttractRepelParticleAffectorBase::editConstant(void)
{
    editSField(ConstantFieldMask);

    return _sfConstant.getValue();
}

//! Get the value of the DistanceAttractRepelParticleAffector::_sfConstant field.
inline
      Real32  DistanceAttractRepelParticleAffectorBase::getConstant(void) const
{
    return _sfConstant.getValue();
}

//! Set the value of the DistanceAttractRepelParticleAffector::_sfConstant field.
inline
void DistanceAttractRepelParticleAffectorBase::setConstant(const Real32 value)
{
    editSField(ConstantFieldMask);

    _sfConstant.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void DistanceAttractRepelParticleAffectorBase::execSync (      DistanceAttractRepelParticleAffectorBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (MinDistanceFieldMask & whichField))
        _sfMinDistance.syncWith(pFrom->_sfMinDistance);

    if(FieldBits::NoField != (MaxDistanceFieldMask & whichField))
        _sfMaxDistance.syncWith(pFrom->_sfMaxDistance);

    if(FieldBits::NoField != (QuadraticFieldMask & whichField))
        _sfQuadratic.syncWith(pFrom->_sfQuadratic);

    if(FieldBits::NoField != (LinearFieldMask & whichField))
        _sfLinear.syncWith(pFrom->_sfLinear);

    if(FieldBits::NoField != (ConstantFieldMask & whichField))
        _sfConstant.syncWith(pFrom->_sfConstant);
}
#endif


inline
const Char8 *DistanceAttractRepelParticleAffectorBase::getClassname(void)
{
    return "DistanceAttractRepelParticleAffector";
}
OSG_GEN_CONTAINERPTR(DistanceAttractRepelParticleAffector);

OSG_END_NAMESPACE

