/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DistanceParticleAffector
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDISTANCEPARTICLEAFFECTORBASE_H_
#define _OSGDISTANCEPARTICLEAFFECTORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribParticleSystemDef.h"

//#include "OSGBaseTypes.h"

#include "OSGParticleAffector.h" // Parent

#include "OSGSysFields.h"               // DistanceFromSource type
#include "OSGNodeFields.h"              // DistanceFromNode type
#include "OSGCameraFields.h"            // DistanceFromCamera type

#include "OSGDistanceParticleAffectorFields.h"

OSG_BEGIN_NAMESPACE

class DistanceParticleAffector;

//! \brief DistanceParticleAffector Base Class.

class OSG_CONTRIBPARTICLESYSTEM_DLLMAPPING DistanceParticleAffectorBase : public ParticleAffector
{
  public:

    typedef ParticleAffector Inherited;
    typedef ParticleAffector ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(DistanceParticleAffector);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        DistanceFromSourceFieldId = Inherited::NextFieldId,
        DistanceFromNodeFieldId = DistanceFromSourceFieldId + 1,
        ParticleSystemNodeFieldId = DistanceFromNodeFieldId + 1,
        DistanceFromCameraFieldId = ParticleSystemNodeFieldId + 1,
        NextFieldId = DistanceFromCameraFieldId + 1
    };

    static const OSG::BitVector DistanceFromSourceFieldMask =
        (TypeTraits<BitVector>::One << DistanceFromSourceFieldId);
    static const OSG::BitVector DistanceFromNodeFieldMask =
        (TypeTraits<BitVector>::One << DistanceFromNodeFieldId);
    static const OSG::BitVector ParticleSystemNodeFieldMask =
        (TypeTraits<BitVector>::One << ParticleSystemNodeFieldId);
    static const OSG::BitVector DistanceFromCameraFieldMask =
        (TypeTraits<BitVector>::One << DistanceFromCameraFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUInt32          SFDistanceFromSourceType;
    typedef SFUnrecNodePtr    SFDistanceFromNodeType;
    typedef SFUnrecNodePtr    SFParticleSystemNodeType;
    typedef SFUnrecCameraPtr  SFDistanceFromCameraType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFUInt32            *editSFDistanceFromSource(void);
            const SFUInt32            *getSFDistanceFromSource (void) const;
            const SFUnrecNodePtr      *getSFDistanceFromNode(void) const;
                  SFUnrecNodePtr      *editSFDistanceFromNode(void);
            const SFUnrecNodePtr      *getSFParticleSystemNode(void) const;
                  SFUnrecNodePtr      *editSFParticleSystemNode(void);
            const SFUnrecCameraPtr    *getSFDistanceFromCamera(void) const;
                  SFUnrecCameraPtr    *editSFDistanceFromCamera(void);


                  UInt32              &editDistanceFromSource(void);
                  UInt32               getDistanceFromSource (void) const;

                  Node * getDistanceFromNode(void) const;

                  Node * getParticleSystemNode(void) const;

                  Camera * getDistanceFromCamera(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setDistanceFromSource(const UInt32 value);
            void setDistanceFromNode(Node * const value);
            void setParticleSystemNode(Node * const value);
            void setDistanceFromCamera(Camera * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUInt32          _sfDistanceFromSource;
    SFUnrecNodePtr    _sfDistanceFromNode;
    SFUnrecNodePtr    _sfParticleSystemNode;
    SFUnrecCameraPtr  _sfDistanceFromCamera;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DistanceParticleAffectorBase(void);
    DistanceParticleAffectorBase(const DistanceParticleAffectorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DistanceParticleAffectorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const DistanceParticleAffector *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleDistanceFromSource (void) const;
    EditFieldHandlePtr editHandleDistanceFromSource(void);
    GetFieldHandlePtr  getHandleDistanceFromNode (void) const;
    EditFieldHandlePtr editHandleDistanceFromNode(void);
    GetFieldHandlePtr  getHandleParticleSystemNode (void) const;
    EditFieldHandlePtr editHandleParticleSystemNode(void);
    GetFieldHandlePtr  getHandleDistanceFromCamera (void) const;
    EditFieldHandlePtr editHandleDistanceFromCamera(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      DistanceParticleAffectorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DistanceParticleAffectorBase &source);
};

typedef DistanceParticleAffectorBase *DistanceParticleAffectorBaseP;

OSG_END_NAMESPACE

#endif /* _OSGDISTANCEPARTICLEAFFECTORBASE_H_ */
