/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DynamicsParticleGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDYNAMICSPARTICLEGENERATORBASE_H_
#define _OSGDYNAMICSPARTICLEGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribParticleSystemDef.h"

//#include "OSGBaseTypes.h"

#include "OSGParticleGenerator.h" // Parent

#include "OSGDistribution3DFields.h"    // PositionDistribution type
#include "OSGDistribution1DFields.h"    // TransparencyDistribution type

#include "OSGDynamicsParticleGeneratorFields.h"


OSG_BEGIN_NAMESPACE

class DynamicsParticleGenerator;

//! \brief DynamicsParticleGenerator Base Class.

class OSG_CONTRIBPARTICLESYSTEM_DLLMAPPING DynamicsParticleGeneratorBase : public ParticleGenerator
{
  public:

    typedef ParticleGenerator Inherited;
    typedef ParticleGenerator ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(DynamicsParticleGenerator);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        PositionDistributionFieldId = Inherited::NextFieldId,
        SecPositionDistributionFieldId = PositionDistributionFieldId + 1,
        NormalDistributionFieldId = SecPositionDistributionFieldId + 1,
        ColorDistributionFieldId = NormalDistributionFieldId + 1,
        TransparencyDistributionFieldId = ColorDistributionFieldId + 1,
        SizeDistributionFieldId = TransparencyDistributionFieldId + 1,
        LifespanDistributionFieldId = SizeDistributionFieldId + 1,
        AgeDistributionFieldId = LifespanDistributionFieldId + 1,
        VelocityDistributionFieldId = AgeDistributionFieldId + 1,
        SecVelocityDistributionFieldId = VelocityDistributionFieldId + 1,
        AccelerationDistributionFieldId = SecVelocityDistributionFieldId + 1,
        NextFieldId = AccelerationDistributionFieldId + 1
    };

    static const OSG::BitVector PositionDistributionFieldMask =
        (TypeTraits<BitVector>::One << PositionDistributionFieldId);
    static const OSG::BitVector SecPositionDistributionFieldMask =
        (TypeTraits<BitVector>::One << SecPositionDistributionFieldId);
    static const OSG::BitVector NormalDistributionFieldMask =
        (TypeTraits<BitVector>::One << NormalDistributionFieldId);
    static const OSG::BitVector ColorDistributionFieldMask =
        (TypeTraits<BitVector>::One << ColorDistributionFieldId);
    static const OSG::BitVector TransparencyDistributionFieldMask =
        (TypeTraits<BitVector>::One << TransparencyDistributionFieldId);
    static const OSG::BitVector SizeDistributionFieldMask =
        (TypeTraits<BitVector>::One << SizeDistributionFieldId);
    static const OSG::BitVector LifespanDistributionFieldMask =
        (TypeTraits<BitVector>::One << LifespanDistributionFieldId);
    static const OSG::BitVector AgeDistributionFieldMask =
        (TypeTraits<BitVector>::One << AgeDistributionFieldId);
    static const OSG::BitVector VelocityDistributionFieldMask =
        (TypeTraits<BitVector>::One << VelocityDistributionFieldId);
    static const OSG::BitVector SecVelocityDistributionFieldMask =
        (TypeTraits<BitVector>::One << SecVelocityDistributionFieldId);
    static const OSG::BitVector AccelerationDistributionFieldMask =
        (TypeTraits<BitVector>::One << AccelerationDistributionFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUnrecDistribution3DPtr SFPositionDistributionType;
    typedef SFUnrecDistribution3DPtr SFSecPositionDistributionType;
    typedef SFUnrecDistribution3DPtr SFNormalDistributionType;
    typedef SFUnrecDistribution3DPtr SFColorDistributionType;
    typedef SFUnrecDistribution1DPtr SFTransparencyDistributionType;
    typedef SFUnrecDistribution3DPtr SFSizeDistributionType;
    typedef SFUnrecDistribution1DPtr SFLifespanDistributionType;
    typedef SFUnrecDistribution1DPtr SFAgeDistributionType;
    typedef SFUnrecDistribution3DPtr SFVelocityDistributionType;
    typedef SFUnrecDistribution3DPtr SFSecVelocityDistributionType;
    typedef SFUnrecDistribution3DPtr SFAccelerationDistributionType;


    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFUnrecDistribution3DPtr *getSFPositionDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFPositionDistribution(void);
            const SFUnrecDistribution3DPtr *getSFSecPositionDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFSecPositionDistribution(void);
            const SFUnrecDistribution3DPtr *getSFNormalDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFNormalDistribution(void);
            const SFUnrecDistribution3DPtr *getSFColorDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFColorDistribution(void);
            const SFUnrecDistribution1DPtr *getSFTransparencyDistribution(void) const;
                  SFUnrecDistribution1DPtr *editSFTransparencyDistribution(void);
            const SFUnrecDistribution3DPtr *getSFSizeDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFSizeDistribution(void);
            const SFUnrecDistribution1DPtr *getSFLifespanDistribution(void) const;
                  SFUnrecDistribution1DPtr *editSFLifespanDistribution(void);
            const SFUnrecDistribution1DPtr *getSFAgeDistribution(void) const;
                  SFUnrecDistribution1DPtr *editSFAgeDistribution(void);
            const SFUnrecDistribution3DPtr *getSFVelocityDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFVelocityDistribution(void);
            const SFUnrecDistribution3DPtr *getSFSecVelocityDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFSecVelocityDistribution(void);
            const SFUnrecDistribution3DPtr *getSFAccelerationDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFAccelerationDistribution(void);


                  Distribution3D * getPositionDistribution(void) const;

                  Distribution3D * getSecPositionDistribution(void) const;

                  Distribution3D * getNormalDistribution(void) const;

                  Distribution3D * getColorDistribution(void) const;

                  Distribution1D * getTransparencyDistribution(void) const;

                  Distribution3D * getSizeDistribution(void) const;

                  Distribution1D * getLifespanDistribution(void) const;

                  Distribution1D * getAgeDistribution(void) const;

                  Distribution3D * getVelocityDistribution(void) const;

                  Distribution3D * getSecVelocityDistribution(void) const;

                  Distribution3D * getAccelerationDistribution(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setPositionDistribution(Distribution3D * const value);
            void setSecPositionDistribution(Distribution3D * const value);
            void setNormalDistribution(Distribution3D * const value);
            void setColorDistribution(Distribution3D * const value);
            void setTransparencyDistribution(Distribution1D * const value);
            void setSizeDistribution(Distribution3D * const value);
            void setLifespanDistribution(Distribution1D * const value);
            void setAgeDistribution(Distribution1D * const value);
            void setVelocityDistribution(Distribution3D * const value);
            void setSecVelocityDistribution(Distribution3D * const value);
            void setAccelerationDistribution(Distribution3D * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */

    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUnrecDistribution3DPtr _sfPositionDistribution;
    SFUnrecDistribution3DPtr _sfSecPositionDistribution;
    SFUnrecDistribution3DPtr _sfNormalDistribution;
    SFUnrecDistribution3DPtr _sfColorDistribution;
    SFUnrecDistribution1DPtr _sfTransparencyDistribution;
    SFUnrecDistribution3DPtr _sfSizeDistribution;
    SFUnrecDistribution1DPtr _sfLifespanDistribution;
    SFUnrecDistribution1DPtr _sfAgeDistribution;
    SFUnrecDistribution3DPtr _sfVelocityDistribution;
    SFUnrecDistribution3DPtr _sfSecVelocityDistribution;
    SFUnrecDistribution3DPtr _sfAccelerationDistribution;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DynamicsParticleGeneratorBase(void);
    DynamicsParticleGeneratorBase(const DynamicsParticleGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DynamicsParticleGeneratorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const DynamicsParticleGenerator *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandlePositionDistribution (void) const;
    EditFieldHandlePtr editHandlePositionDistribution(void);
    GetFieldHandlePtr  getHandleSecPositionDistribution (void) const;
    EditFieldHandlePtr editHandleSecPositionDistribution(void);
    GetFieldHandlePtr  getHandleNormalDistribution (void) const;
    EditFieldHandlePtr editHandleNormalDistribution(void);
    GetFieldHandlePtr  getHandleColorDistribution (void) const;
    EditFieldHandlePtr editHandleColorDistribution(void);
    GetFieldHandlePtr  getHandleTransparencyDistribution (void) const;
    EditFieldHandlePtr editHandleTransparencyDistribution(void);
    GetFieldHandlePtr  getHandleSizeDistribution (void) const;
    EditFieldHandlePtr editHandleSizeDistribution(void);
    GetFieldHandlePtr  getHandleLifespanDistribution (void) const;
    EditFieldHandlePtr editHandleLifespanDistribution(void);
    GetFieldHandlePtr  getHandleAgeDistribution (void) const;
    EditFieldHandlePtr editHandleAgeDistribution(void);
    GetFieldHandlePtr  getHandleVelocityDistribution (void) const;
    EditFieldHandlePtr editHandleVelocityDistribution(void);
    GetFieldHandlePtr  getHandleSecVelocityDistribution (void) const;
    EditFieldHandlePtr editHandleSecVelocityDistribution(void);
    GetFieldHandlePtr  getHandleAccelerationDistribution (void) const;
    EditFieldHandlePtr editHandleAccelerationDistribution(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      DynamicsParticleGeneratorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DynamicsParticleGeneratorBase &source);
};

typedef DynamicsParticleGeneratorBase *DynamicsParticleGeneratorBaseP;

OSG_END_NAMESPACE

#endif /* _OSGDYNAMICSPARTICLEGENERATORBASE_H_ */
