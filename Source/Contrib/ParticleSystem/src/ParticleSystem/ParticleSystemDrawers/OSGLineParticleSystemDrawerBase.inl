/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LineParticleSystemDrawer!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LineParticleSystemDrawerBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 LineParticleSystemDrawerBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 LineParticleSystemDrawerBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the LineParticleSystemDrawer::_sfLineWidthScaling field.

inline
Real32 &LineParticleSystemDrawerBase::editLineWidthScaling(void)
{
    editSField(LineWidthScalingFieldMask);

    return _sfLineWidthScaling.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineWidthScaling field.
inline
      Real32  LineParticleSystemDrawerBase::getLineWidthScaling(void) const
{
    return _sfLineWidthScaling.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineWidthScaling field.
inline
void LineParticleSystemDrawerBase::setLineWidthScaling(const Real32 value)
{
    editSField(LineWidthScalingFieldMask);

    _sfLineWidthScaling.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfLineLengthScaling field.

inline
Real32 &LineParticleSystemDrawerBase::editLineLengthScaling(void)
{
    editSField(LineLengthScalingFieldMask);

    return _sfLineLengthScaling.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineLengthScaling field.
inline
      Real32  LineParticleSystemDrawerBase::getLineLengthScaling(void) const
{
    return _sfLineLengthScaling.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineLengthScaling field.
inline
void LineParticleSystemDrawerBase::setLineLengthScaling(const Real32 value)
{
    editSField(LineLengthScalingFieldMask);

    _sfLineLengthScaling.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfLineDirectionSource field.

inline
UInt32 &LineParticleSystemDrawerBase::editLineDirectionSource(void)
{
    editSField(LineDirectionSourceFieldMask);

    return _sfLineDirectionSource.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineDirectionSource field.
inline
      UInt32  LineParticleSystemDrawerBase::getLineDirectionSource(void) const
{
    return _sfLineDirectionSource.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineDirectionSource field.
inline
void LineParticleSystemDrawerBase::setLineDirectionSource(const UInt32 value)
{
    editSField(LineDirectionSourceFieldMask);

    _sfLineDirectionSource.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfLineDirection field.

inline
Vec3f &LineParticleSystemDrawerBase::editLineDirection(void)
{
    editSField(LineDirectionFieldMask);

    return _sfLineDirection.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineDirection field.
inline
const Vec3f &LineParticleSystemDrawerBase::getLineDirection(void) const
{
    return _sfLineDirection.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineDirection field.
inline
void LineParticleSystemDrawerBase::setLineDirection(const Vec3f &value)
{
    editSField(LineDirectionFieldMask);

    _sfLineDirection.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfLineLengthSource field.

inline
UInt32 &LineParticleSystemDrawerBase::editLineLengthSource(void)
{
    editSField(LineLengthSourceFieldMask);

    return _sfLineLengthSource.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineLengthSource field.
inline
      UInt32  LineParticleSystemDrawerBase::getLineLengthSource(void) const
{
    return _sfLineLengthSource.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineLengthSource field.
inline
void LineParticleSystemDrawerBase::setLineLengthSource(const UInt32 value)
{
    editSField(LineLengthSourceFieldMask);

    _sfLineLengthSource.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfLineLength field.

inline
Real32 &LineParticleSystemDrawerBase::editLineLength(void)
{
    editSField(LineLengthFieldMask);

    return _sfLineLength.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfLineLength field.
inline
      Real32  LineParticleSystemDrawerBase::getLineLength(void) const
{
    return _sfLineLength.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfLineLength field.
inline
void LineParticleSystemDrawerBase::setLineLength(const Real32 value)
{
    editSField(LineLengthFieldMask);

    _sfLineLength.setValue(value);
}
//! Get the value of the LineParticleSystemDrawer::_sfEndPointFading field.

inline
Vec2f &LineParticleSystemDrawerBase::editEndPointFading(void)
{
    editSField(EndPointFadingFieldMask);

    return _sfEndPointFading.getValue();
}

//! Get the value of the LineParticleSystemDrawer::_sfEndPointFading field.
inline
const Vec2f &LineParticleSystemDrawerBase::getEndPointFading(void) const
{
    return _sfEndPointFading.getValue();
}

//! Set the value of the LineParticleSystemDrawer::_sfEndPointFading field.
inline
void LineParticleSystemDrawerBase::setEndPointFading(const Vec2f &value)
{
    editSField(EndPointFadingFieldMask);

    _sfEndPointFading.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void LineParticleSystemDrawerBase::execSync (      LineParticleSystemDrawerBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (LineWidthScalingFieldMask & whichField))
        _sfLineWidthScaling.syncWith(pFrom->_sfLineWidthScaling);

    if(FieldBits::NoField != (LineLengthScalingFieldMask & whichField))
        _sfLineLengthScaling.syncWith(pFrom->_sfLineLengthScaling);

    if(FieldBits::NoField != (LineDirectionSourceFieldMask & whichField))
        _sfLineDirectionSource.syncWith(pFrom->_sfLineDirectionSource);

    if(FieldBits::NoField != (LineDirectionFieldMask & whichField))
        _sfLineDirection.syncWith(pFrom->_sfLineDirection);

    if(FieldBits::NoField != (LineLengthSourceFieldMask & whichField))
        _sfLineLengthSource.syncWith(pFrom->_sfLineLengthSource);

    if(FieldBits::NoField != (LineLengthFieldMask & whichField))
        _sfLineLength.syncWith(pFrom->_sfLineLength);

    if(FieldBits::NoField != (EndPointFadingFieldMask & whichField))
        _sfEndPointFading.syncWith(pFrom->_sfEndPointFading);
}
#endif


inline
const Char8 *LineParticleSystemDrawerBase::getClassname(void)
{
    return "LineParticleSystemDrawer";
}
OSG_GEN_CONTAINERPTR(LineParticleSystemDrawer);

OSG_END_NAMESPACE

