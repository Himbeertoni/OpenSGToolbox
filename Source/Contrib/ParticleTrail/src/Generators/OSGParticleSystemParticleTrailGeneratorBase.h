/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), Daniel Guilliams           *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystemParticleTrailGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPARTICLESYSTEMPARTICLETRAILGENERATORBASE_H_
#define _OSGPARTICLESYSTEMPARTICLETRAILGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribParticleTrailDef.h"

//#include "OSGBaseTypes.h"

#include "OSGParticleTrailGenerator.h" // Parent

#include "OSGParticleSystemFields.h"    // ParticleSystem type
#include "OSGDistribution3DFields.h"    // VelocityDistribution type
#include "OSGDistribution1DFields.h"    // TransparencyDistribution type
#include "OSGSysFields.h"               // VelocityMultiplier type

#include "OSGParticleSystemParticleTrailGeneratorFields.h"

OSG_BEGIN_NAMESPACE

class ParticleSystemParticleTrailGenerator;

//! \brief ParticleSystemParticleTrailGenerator Base Class.

class OSG_CONTRIBPARTICLETRAIL_DLLMAPPING ParticleSystemParticleTrailGeneratorBase : public ParticleTrailGenerator
{
  public:

    typedef ParticleTrailGenerator Inherited;
    typedef ParticleTrailGenerator ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(ParticleSystemParticleTrailGenerator);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ParticleSystemFieldId = Inherited::NextFieldId,
        VelocityDistributionFieldId = ParticleSystemFieldId + 1,
        NormalDistributionFieldId = VelocityDistributionFieldId + 1,
        ColorDistributionFieldId = NormalDistributionFieldId + 1,
        TransparencyDistributionFieldId = ColorDistributionFieldId + 1,
        SizeDistributionFieldId = TransparencyDistributionFieldId + 1,
        AccelerationDistributionFieldId = SizeDistributionFieldId + 1,
        VelocityMultiplierFieldId = AccelerationDistributionFieldId + 1,
        VelocitySourceFieldId = VelocityMultiplierFieldId + 1,
        NextFieldId = VelocitySourceFieldId + 1
    };

    static const OSG::BitVector ParticleSystemFieldMask =
        (TypeTraits<BitVector>::One << ParticleSystemFieldId);
    static const OSG::BitVector VelocityDistributionFieldMask =
        (TypeTraits<BitVector>::One << VelocityDistributionFieldId);
    static const OSG::BitVector NormalDistributionFieldMask =
        (TypeTraits<BitVector>::One << NormalDistributionFieldId);
    static const OSG::BitVector ColorDistributionFieldMask =
        (TypeTraits<BitVector>::One << ColorDistributionFieldId);
    static const OSG::BitVector TransparencyDistributionFieldMask =
        (TypeTraits<BitVector>::One << TransparencyDistributionFieldId);
    static const OSG::BitVector SizeDistributionFieldMask =
        (TypeTraits<BitVector>::One << SizeDistributionFieldId);
    static const OSG::BitVector AccelerationDistributionFieldMask =
        (TypeTraits<BitVector>::One << AccelerationDistributionFieldId);
    static const OSG::BitVector VelocityMultiplierFieldMask =
        (TypeTraits<BitVector>::One << VelocityMultiplierFieldId);
    static const OSG::BitVector VelocitySourceFieldMask =
        (TypeTraits<BitVector>::One << VelocitySourceFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUnrecParticleSystemPtr SFParticleSystemType;
    typedef SFUnrecDistribution3DPtr SFVelocityDistributionType;
    typedef SFUnrecDistribution3DPtr SFNormalDistributionType;
    typedef SFUnrecDistribution3DPtr SFColorDistributionType;
    typedef SFUnrecDistribution1DPtr SFTransparencyDistributionType;
    typedef SFUnrecDistribution3DPtr SFSizeDistributionType;
    typedef SFUnrecDistribution3DPtr SFAccelerationDistributionType;
    typedef SFReal32          SFVelocityMultiplierType;
    typedef SFUInt32          SFVelocitySourceType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFUnrecParticleSystemPtr *getSFParticleSystem (void) const;
                  SFUnrecParticleSystemPtr *editSFParticleSystem (void);
            const SFUnrecDistribution3DPtr *getSFVelocityDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFVelocityDistribution(void);
            const SFUnrecDistribution3DPtr *getSFNormalDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFNormalDistribution(void);
            const SFUnrecDistribution3DPtr *getSFColorDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFColorDistribution(void);
            const SFUnrecDistribution1DPtr *getSFTransparencyDistribution(void) const;
                  SFUnrecDistribution1DPtr *editSFTransparencyDistribution(void);
            const SFUnrecDistribution3DPtr *getSFSizeDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFSizeDistribution(void);
            const SFUnrecDistribution3DPtr *getSFAccelerationDistribution(void) const;
                  SFUnrecDistribution3DPtr *editSFAccelerationDistribution(void);

                  SFReal32            *editSFVelocityMultiplier(void);
            const SFReal32            *getSFVelocityMultiplier (void) const;

                  SFUInt32            *editSFVelocitySource (void);
            const SFUInt32            *getSFVelocitySource  (void) const;


                  ParticleSystem * getParticleSystem (void) const;

                  Distribution3D * getVelocityDistribution(void) const;

                  Distribution3D * getNormalDistribution(void) const;

                  Distribution3D * getColorDistribution(void) const;

                  Distribution1D * getTransparencyDistribution(void) const;

                  Distribution3D * getSizeDistribution(void) const;

                  Distribution3D * getAccelerationDistribution(void) const;

                  Real32              &editVelocityMultiplier(void);
                  Real32               getVelocityMultiplier (void) const;

                  UInt32              &editVelocitySource (void);
                  UInt32               getVelocitySource  (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setParticleSystem (ParticleSystem * const value);
            void setVelocityDistribution(Distribution3D * const value);
            void setNormalDistribution(Distribution3D * const value);
            void setColorDistribution(Distribution3D * const value);
            void setTransparencyDistribution(Distribution1D * const value);
            void setSizeDistribution(Distribution3D * const value);
            void setAccelerationDistribution(Distribution3D * const value);
            void setVelocityMultiplier(const Real32 value);
            void setVelocitySource (const UInt32 value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  ParticleSystemParticleTrailGeneratorTransitPtr  create          (void);
    static  ParticleSystemParticleTrailGenerator           *createEmpty     (void);

    static  ParticleSystemParticleTrailGeneratorTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  ParticleSystemParticleTrailGenerator            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  ParticleSystemParticleTrailGeneratorTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUnrecParticleSystemPtr _sfParticleSystem;
    SFUnrecDistribution3DPtr _sfVelocityDistribution;
    SFUnrecDistribution3DPtr _sfNormalDistribution;
    SFUnrecDistribution3DPtr _sfColorDistribution;
    SFUnrecDistribution1DPtr _sfTransparencyDistribution;
    SFUnrecDistribution3DPtr _sfSizeDistribution;
    SFUnrecDistribution3DPtr _sfAccelerationDistribution;
    SFReal32          _sfVelocityMultiplier;
    SFUInt32          _sfVelocitySource;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    ParticleSystemParticleTrailGeneratorBase(void);
    ParticleSystemParticleTrailGeneratorBase(const ParticleSystemParticleTrailGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~ParticleSystemParticleTrailGeneratorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const ParticleSystemParticleTrailGenerator *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleParticleSystem  (void) const;
    EditFieldHandlePtr editHandleParticleSystem (void);
    GetFieldHandlePtr  getHandleVelocityDistribution (void) const;
    EditFieldHandlePtr editHandleVelocityDistribution(void);
    GetFieldHandlePtr  getHandleNormalDistribution (void) const;
    EditFieldHandlePtr editHandleNormalDistribution(void);
    GetFieldHandlePtr  getHandleColorDistribution (void) const;
    EditFieldHandlePtr editHandleColorDistribution(void);
    GetFieldHandlePtr  getHandleTransparencyDistribution (void) const;
    EditFieldHandlePtr editHandleTransparencyDistribution(void);
    GetFieldHandlePtr  getHandleSizeDistribution (void) const;
    EditFieldHandlePtr editHandleSizeDistribution(void);
    GetFieldHandlePtr  getHandleAccelerationDistribution (void) const;
    EditFieldHandlePtr editHandleAccelerationDistribution(void);
    GetFieldHandlePtr  getHandleVelocityMultiplier (void) const;
    EditFieldHandlePtr editHandleVelocityMultiplier(void);
    GetFieldHandlePtr  getHandleVelocitySource  (void) const;
    EditFieldHandlePtr editHandleVelocitySource (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      ParticleSystemParticleTrailGeneratorBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const ParticleSystemParticleTrailGeneratorBase &source);
};

typedef ParticleSystemParticleTrailGeneratorBase *ParticleSystemParticleTrailGeneratorBaseP;

OSG_END_NAMESPACE

#endif /* _OSGPARTICLESYSTEMPARTICLETRAILGENERATORBASE_H_ */
