/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CheckboxButton!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &CheckboxButtonBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 CheckboxButtonBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 CheckboxButtonBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the CheckboxButton::_sfCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getCheckboxDrawObject(void) const
{
    return _sfCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfCheckboxDrawObject field.
inline
void CheckboxButtonBase::setCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(CheckboxDrawObjectFieldMask);

    _sfCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getSelectedCheckboxDrawObject(void) const
{
    return _sfSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setSelectedCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(SelectedCheckboxDrawObjectFieldMask);

    _sfSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getActiveCheckboxDrawObject(void) const
{
    return _sfActiveCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfActiveCheckboxDrawObject field.
inline
void CheckboxButtonBase::setActiveCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(ActiveCheckboxDrawObjectFieldMask);

    _sfActiveCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getActiveSelectedCheckboxDrawObject(void) const
{
    return _sfActiveSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfActiveSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setActiveSelectedCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(ActiveSelectedCheckboxDrawObjectFieldMask);

    _sfActiveSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getRolloverCheckboxDrawObject(void) const
{
    return _sfRolloverCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfRolloverCheckboxDrawObject field.
inline
void CheckboxButtonBase::setRolloverCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(RolloverCheckboxDrawObjectFieldMask);

    _sfRolloverCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getRolloverSelectedCheckboxDrawObject(void) const
{
    return _sfRolloverSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfRolloverSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setRolloverSelectedCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(RolloverSelectedCheckboxDrawObjectFieldMask);

    _sfRolloverSelectedCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getDisabledCheckboxDrawObject(void) const
{
    return _sfDisabledCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfDisabledCheckboxDrawObject field.
inline
void CheckboxButtonBase::setDisabledCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(DisabledCheckboxDrawObjectFieldMask);

    _sfDisabledCheckboxDrawObject.setValue(value);
}

//! Get the value of the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
UIDrawObjectCanvas * CheckboxButtonBase::getDisabledSelectedCheckboxDrawObject(void) const
{
    return _sfDisabledSelectedCheckboxDrawObject.getValue();
}

//! Set the value of the CheckboxButton::_sfDisabledSelectedCheckboxDrawObject field.
inline
void CheckboxButtonBase::setDisabledSelectedCheckboxDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(DisabledSelectedCheckboxDrawObjectFieldMask);

    _sfDisabledSelectedCheckboxDrawObject.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void CheckboxButtonBase::execSync (      CheckboxButtonBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (CheckboxDrawObjectFieldMask & whichField))
        _sfCheckboxDrawObject.syncWith(pFrom->_sfCheckboxDrawObject);

    if(FieldBits::NoField != (SelectedCheckboxDrawObjectFieldMask & whichField))
        _sfSelectedCheckboxDrawObject.syncWith(pFrom->_sfSelectedCheckboxDrawObject);

    if(FieldBits::NoField != (ActiveCheckboxDrawObjectFieldMask & whichField))
        _sfActiveCheckboxDrawObject.syncWith(pFrom->_sfActiveCheckboxDrawObject);

    if(FieldBits::NoField != (ActiveSelectedCheckboxDrawObjectFieldMask & whichField))
        _sfActiveSelectedCheckboxDrawObject.syncWith(pFrom->_sfActiveSelectedCheckboxDrawObject);

    if(FieldBits::NoField != (RolloverCheckboxDrawObjectFieldMask & whichField))
        _sfRolloverCheckboxDrawObject.syncWith(pFrom->_sfRolloverCheckboxDrawObject);

    if(FieldBits::NoField != (RolloverSelectedCheckboxDrawObjectFieldMask & whichField))
        _sfRolloverSelectedCheckboxDrawObject.syncWith(pFrom->_sfRolloverSelectedCheckboxDrawObject);

    if(FieldBits::NoField != (DisabledCheckboxDrawObjectFieldMask & whichField))
        _sfDisabledCheckboxDrawObject.syncWith(pFrom->_sfDisabledCheckboxDrawObject);

    if(FieldBits::NoField != (DisabledSelectedCheckboxDrawObjectFieldMask & whichField))
        _sfDisabledSelectedCheckboxDrawObject.syncWith(pFrom->_sfDisabledSelectedCheckboxDrawObject);
}
#endif


inline
const Char8 *CheckboxButtonBase::getClassname(void)
{
    return "CheckboxButton";
}
OSG_GEN_CONTAINERPTR(CheckboxButton);

OSG_END_NAMESPACE

