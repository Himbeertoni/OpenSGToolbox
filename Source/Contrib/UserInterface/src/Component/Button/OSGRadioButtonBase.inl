/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RadioButton!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &RadioButtonBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 RadioButtonBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 RadioButtonBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the RadioButton::_sfRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getRadioDrawObject(void) const
{
    return _sfRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfRadioDrawObject field.
inline
void RadioButtonBase::setRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(RadioDrawObjectFieldMask);

    _sfRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfSelectedRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getSelectedRadioDrawObject(void) const
{
    return _sfSelectedRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfSelectedRadioDrawObject field.
inline
void RadioButtonBase::setSelectedRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(SelectedRadioDrawObjectFieldMask);

    _sfSelectedRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfActiveRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getActiveRadioDrawObject(void) const
{
    return _sfActiveRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfActiveRadioDrawObject field.
inline
void RadioButtonBase::setActiveRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(ActiveRadioDrawObjectFieldMask);

    _sfActiveRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfActiveSelectedRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getActiveSelectedRadioDrawObject(void) const
{
    return _sfActiveSelectedRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfActiveSelectedRadioDrawObject field.
inline
void RadioButtonBase::setActiveSelectedRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(ActiveSelectedRadioDrawObjectFieldMask);

    _sfActiveSelectedRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfRolloverRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getRolloverRadioDrawObject(void) const
{
    return _sfRolloverRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfRolloverRadioDrawObject field.
inline
void RadioButtonBase::setRolloverRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(RolloverRadioDrawObjectFieldMask);

    _sfRolloverRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfRolloverSelectedRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getRolloverSelectedRadioDrawObject(void) const
{
    return _sfRolloverSelectedRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfRolloverSelectedRadioDrawObject field.
inline
void RadioButtonBase::setRolloverSelectedRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(RolloverSelectedRadioDrawObjectFieldMask);

    _sfRolloverSelectedRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfDisabledRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getDisabledRadioDrawObject(void) const
{
    return _sfDisabledRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfDisabledRadioDrawObject field.
inline
void RadioButtonBase::setDisabledRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(DisabledRadioDrawObjectFieldMask);

    _sfDisabledRadioDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfDisabledSelectedRadioDrawObject field.
inline
UIDrawObjectCanvas * RadioButtonBase::getDisabledSelectedRadioDrawObject(void) const
{
    return _sfDisabledSelectedRadioDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfDisabledSelectedRadioDrawObject field.
inline
void RadioButtonBase::setDisabledSelectedRadioDrawObject(UIDrawObjectCanvas * const value)
{
    editSField(DisabledSelectedRadioDrawObjectFieldMask);

    _sfDisabledSelectedRadioDrawObject.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void RadioButtonBase::execSync (      RadioButtonBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (RadioDrawObjectFieldMask & whichField))
        _sfRadioDrawObject.syncWith(pFrom->_sfRadioDrawObject);

    if(FieldBits::NoField != (SelectedRadioDrawObjectFieldMask & whichField))
        _sfSelectedRadioDrawObject.syncWith(pFrom->_sfSelectedRadioDrawObject);

    if(FieldBits::NoField != (ActiveRadioDrawObjectFieldMask & whichField))
        _sfActiveRadioDrawObject.syncWith(pFrom->_sfActiveRadioDrawObject);

    if(FieldBits::NoField != (ActiveSelectedRadioDrawObjectFieldMask & whichField))
        _sfActiveSelectedRadioDrawObject.syncWith(pFrom->_sfActiveSelectedRadioDrawObject);

    if(FieldBits::NoField != (RolloverRadioDrawObjectFieldMask & whichField))
        _sfRolloverRadioDrawObject.syncWith(pFrom->_sfRolloverRadioDrawObject);

    if(FieldBits::NoField != (RolloverSelectedRadioDrawObjectFieldMask & whichField))
        _sfRolloverSelectedRadioDrawObject.syncWith(pFrom->_sfRolloverSelectedRadioDrawObject);

    if(FieldBits::NoField != (DisabledRadioDrawObjectFieldMask & whichField))
        _sfDisabledRadioDrawObject.syncWith(pFrom->_sfDisabledRadioDrawObject);

    if(FieldBits::NoField != (DisabledSelectedRadioDrawObjectFieldMask & whichField))
        _sfDisabledSelectedRadioDrawObject.syncWith(pFrom->_sfDisabledSelectedRadioDrawObject);
}
#endif


inline
const Char8 *RadioButtonBase::getClassname(void)
{
    return "RadioButton";
}
OSG_GEN_CONTAINERPTR(RadioButton);

OSG_END_NAMESPACE

