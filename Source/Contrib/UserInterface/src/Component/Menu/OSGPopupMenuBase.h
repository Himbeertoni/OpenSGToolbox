/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PopupMenu
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPOPUPMENUBASE_H_
#define _OSGPOPUPMENUBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribUserInterfaceDef.h"

//#include "OSGBaseTypes.h"

#include "OSGComponentContainer.h" // Parent

#include "OSGSysFields.h"               // SubMenuDelay type
#include "OSGComponentFields.h"         // Invoker type
#include "OSGSeparatorFields.h"         // DefaultSeparator type
#include "OSGSingleSelectionModelFields.h" // SelectionModel type

#include "OSGPopupMenuFields.h"

//Event Producer Headers
#include "OSGEventProducer.h"
#include "OSGEventProducerType.h"
#include "OSGMethodDescription.h"

OSG_BEGIN_NAMESPACE

class PopupMenu;

//! \brief PopupMenu Base Class.

class OSG_CONTRIBUSERINTERFACE_DLLMAPPING PopupMenuBase : public ComponentContainer
{
  public:

    typedef ComponentContainer Inherited;
    typedef ComponentContainer ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(PopupMenu);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        SubMenuDelayFieldId = Inherited::NextFieldId,
        InvokerFieldId = SubMenuDelayFieldId + 1,
        DefaultSeparatorFieldId = InvokerFieldId + 1,
        SelectionModelFieldId = DefaultSeparatorFieldId + 1,
        NextFieldId = SelectionModelFieldId + 1
    };

    static const OSG::BitVector SubMenuDelayFieldMask =
        (TypeTraits<BitVector>::One << SubMenuDelayFieldId);
    static const OSG::BitVector InvokerFieldMask =
        (TypeTraits<BitVector>::One << InvokerFieldId);
    static const OSG::BitVector DefaultSeparatorFieldMask =
        (TypeTraits<BitVector>::One << DefaultSeparatorFieldId);
    static const OSG::BitVector SelectionModelFieldMask =
        (TypeTraits<BitVector>::One << SelectionModelFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFReal32          SFSubMenuDelayType;
    typedef SFUnrecComponentPtr SFInvokerType;
    typedef SFUnrecSeparatorPtr SFDefaultSeparatorType;
    typedef SFUnrecSingleSelectionModelPtr SFSelectionModelType;

    enum
    {
        PopupMenuWillBecomeVisibleMethodId = Inherited::NextProducedMethodId,
        PopupMenuWillBecomeInvisibleMethodId = PopupMenuWillBecomeVisibleMethodId + 1,
        PopupMenuCanceledMethodId = PopupMenuWillBecomeInvisibleMethodId + 1,
        PopupMenuContentsChangedMethodId = PopupMenuCanceledMethodId + 1,
        NextProducedMethodId = PopupMenuContentsChangedMethodId + 1
    };

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);
    static const  EventProducerType  &getProducerClassType  (void);
    static        UInt32              getProducerClassTypeId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFReal32            *editSFSubMenuDelay   (void);
            const SFReal32            *getSFSubMenuDelay    (void) const;
            const SFUnrecComponentPtr *getSFInvoker        (void) const;
                  SFUnrecComponentPtr *editSFInvoker        (void);
            const SFUnrecSeparatorPtr *getSFDefaultSeparator(void) const;
                  SFUnrecSeparatorPtr *editSFDefaultSeparator(void);
            const SFUnrecSingleSelectionModelPtr *getSFSelectionModel (void) const;
                  SFUnrecSingleSelectionModelPtr *editSFSelectionModel (void);


                  Real32              &editSubMenuDelay   (void);
                  Real32               getSubMenuDelay    (void) const;

                  Component * getInvoker        (void) const;

                  Separator * getDefaultSeparator(void) const;

                  SingleSelectionModel * getSelectionModel (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setSubMenuDelay   (const Real32 value);
            void setInvoker        (Component * const value);
            void setDefaultSeparator(Separator * const value);
            void setSelectionModel (SingleSelectionModel * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Method Produced Get                           */
    /*! \{                                                                 */

    virtual const EventProducerType &getProducerType(void) const; 


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  PopupMenuTransitPtr  create          (void);
    static  PopupMenu           *createEmpty     (void);

    static  PopupMenuTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  PopupMenu            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  PopupMenuTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFReal32          _sfSubMenuDelay;
    SFUnrecComponentPtr _sfInvoker;
    SFUnrecSeparatorPtr _sfDefaultSeparator;
    SFUnrecSingleSelectionModelPtr _sfSelectionModel;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    PopupMenuBase(void);
    PopupMenuBase(const PopupMenuBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~PopupMenuBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const PopupMenu *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleSubMenuDelay    (void) const;
    EditFieldHandlePtr editHandleSubMenuDelay   (void);
    GetFieldHandlePtr  getHandleInvoker         (void) const;
    EditFieldHandlePtr editHandleInvoker        (void);
    GetFieldHandlePtr  getHandleDefaultSeparator (void) const;
    EditFieldHandlePtr editHandleDefaultSeparator(void);
    GetFieldHandlePtr  getHandleSelectionModel  (void) const;
    EditFieldHandlePtr editHandleSelectionModel (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      PopupMenuBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/
    static MethodDescription   *_methodDesc[];
    static EventProducerType _producerType;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const PopupMenuBase &source);
};

typedef PopupMenuBase *PopupMenuBaseP;

OSG_END_NAMESPACE

#endif /* _OSGPOPUPMENUBASE_H_ */
