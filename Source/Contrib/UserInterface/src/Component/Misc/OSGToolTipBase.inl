/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ToolTip!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ToolTipBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ToolTipBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ToolTipBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the ToolTip::_sfFont field.
inline
UIFont * ToolTipBase::getFont(void) const
{
    return _sfFont.getValue();
}

//! Set the value of the ToolTip::_sfFont field.
inline
void ToolTipBase::setFont(UIFont * const value)
{
    editSField(FontFieldMask);

    _sfFont.setValue(value);
}

//! Get the value of the ToolTip::_sfTippedComponent field.
inline
Component * ToolTipBase::getTippedComponent(void) const
{
    return _sfTippedComponent.getValue();
}

//! Set the value of the ToolTip::_sfTippedComponent field.
inline
void ToolTipBase::setTippedComponent(Component * const value)
{
    editSField(TippedComponentFieldMask);

    _sfTippedComponent.setValue(value);
}
//! Get the value of the ToolTip::_sfText field.

inline
std::string &ToolTipBase::editText(void)
{
    editSField(TextFieldMask);

    return _sfText.getValue();
}

//! Get the value of the ToolTip::_sfText field.
inline
const std::string &ToolTipBase::getText(void) const
{
    return _sfText.getValue();
}

//! Set the value of the ToolTip::_sfText field.
inline
void ToolTipBase::setText(const std::string &value)
{
    editSField(TextFieldMask);

    _sfText.setValue(value);
}
//! Get the value of the ToolTip::_sfAlignment field.

inline
Vec2f &ToolTipBase::editAlignment(void)
{
    editSField(AlignmentFieldMask);

    return _sfAlignment.getValue();
}

//! Get the value of the ToolTip::_sfAlignment field.
inline
const Vec2f &ToolTipBase::getAlignment(void) const
{
    return _sfAlignment.getValue();
}

//! Set the value of the ToolTip::_sfAlignment field.
inline
void ToolTipBase::setAlignment(const Vec2f &value)
{
    editSField(AlignmentFieldMask);

    _sfAlignment.setValue(value);
}
//! Get the value of the ToolTip::_sfTextColor field.

inline
Color4f &ToolTipBase::editTextColor(void)
{
    editSField(TextColorFieldMask);

    return _sfTextColor.getValue();
}

//! Get the value of the ToolTip::_sfTextColor field.
inline
const Color4f &ToolTipBase::getTextColor(void) const
{
    return _sfTextColor.getValue();
}

//! Set the value of the ToolTip::_sfTextColor field.
inline
void ToolTipBase::setTextColor(const Color4f &value)
{
    editSField(TextColorFieldMask);

    _sfTextColor.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void ToolTipBase::execSync (      ToolTipBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (FontFieldMask & whichField))
        _sfFont.syncWith(pFrom->_sfFont);

    if(FieldBits::NoField != (TippedComponentFieldMask & whichField))
        _sfTippedComponent.syncWith(pFrom->_sfTippedComponent);

    if(FieldBits::NoField != (TextFieldMask & whichField))
        _sfText.syncWith(pFrom->_sfText);

    if(FieldBits::NoField != (AlignmentFieldMask & whichField))
        _sfAlignment.syncWith(pFrom->_sfAlignment);

    if(FieldBits::NoField != (TextColorFieldMask & whichField))
        _sfTextColor.syncWith(pFrom->_sfTextColor);
}
#endif


inline
const Char8 *ToolTipBase::getClassname(void)
{
    return "ToolTip";
}
OSG_GEN_CONTAINERPTR(ToolTip);

OSG_END_NAMESPACE

