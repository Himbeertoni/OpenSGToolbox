/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ScrollPanel
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGSCROLLPANELBASE_H_
#define _OSGSCROLLPANELBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribUserInterfaceDef.h"

//#include "OSGBaseTypes.h"

#include "OSGComponentContainer.h" // Parent

#include "OSGUIViewportFields.h"        // View type
#include "OSGScrollBarFields.h"         // InternalVerticalScrollBar type
#include "OSGSysFields.h"               // VerticalScrollBarDisplayPolicy type
#include "OSGDefaultBoundedRangeModelFields.h" // VerticalRangeModel type

#include "OSGScrollPanelFields.h"

OSG_BEGIN_NAMESPACE

class ScrollPanel;

//! \brief ScrollPanel Base Class.

class OSG_CONTRIBUSERINTERFACE_DLLMAPPING ScrollPanelBase : public ComponentContainer
{
  public:

    typedef ComponentContainer Inherited;
    typedef ComponentContainer ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(ScrollPanel);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ViewFieldId = Inherited::NextFieldId,
        InternalVerticalScrollBarFieldId = ViewFieldId + 1,
        InternalHorizontalScrollBarFieldId = InternalVerticalScrollBarFieldId + 1,
        VerticalScrollBarDisplayPolicyFieldId = InternalHorizontalScrollBarFieldId + 1,
        HorizontalScrollBarDisplayPolicyFieldId = VerticalScrollBarDisplayPolicyFieldId + 1,
        VerticalResizePolicyFieldId = HorizontalScrollBarDisplayPolicyFieldId + 1,
        HorizontalResizePolicyFieldId = VerticalResizePolicyFieldId + 1,
        VerticalScrollBarAlignmentFieldId = HorizontalResizePolicyFieldId + 1,
        HorizontalScrollBarAlignmentFieldId = VerticalScrollBarAlignmentFieldId + 1,
        VerticalRangeModelFieldId = HorizontalScrollBarAlignmentFieldId + 1,
        HorizontalRangeModelFieldId = VerticalRangeModelFieldId + 1,
        NextFieldId = HorizontalRangeModelFieldId + 1
    };

    static const OSG::BitVector ViewFieldMask =
        (TypeTraits<BitVector>::One << ViewFieldId);
    static const OSG::BitVector InternalVerticalScrollBarFieldMask =
        (TypeTraits<BitVector>::One << InternalVerticalScrollBarFieldId);
    static const OSG::BitVector InternalHorizontalScrollBarFieldMask =
        (TypeTraits<BitVector>::One << InternalHorizontalScrollBarFieldId);
    static const OSG::BitVector VerticalScrollBarDisplayPolicyFieldMask =
        (TypeTraits<BitVector>::One << VerticalScrollBarDisplayPolicyFieldId);
    static const OSG::BitVector HorizontalScrollBarDisplayPolicyFieldMask =
        (TypeTraits<BitVector>::One << HorizontalScrollBarDisplayPolicyFieldId);
    static const OSG::BitVector VerticalResizePolicyFieldMask =
        (TypeTraits<BitVector>::One << VerticalResizePolicyFieldId);
    static const OSG::BitVector HorizontalResizePolicyFieldMask =
        (TypeTraits<BitVector>::One << HorizontalResizePolicyFieldId);
    static const OSG::BitVector VerticalScrollBarAlignmentFieldMask =
        (TypeTraits<BitVector>::One << VerticalScrollBarAlignmentFieldId);
    static const OSG::BitVector HorizontalScrollBarAlignmentFieldMask =
        (TypeTraits<BitVector>::One << HorizontalScrollBarAlignmentFieldId);
    static const OSG::BitVector VerticalRangeModelFieldMask =
        (TypeTraits<BitVector>::One << VerticalRangeModelFieldId);
    static const OSG::BitVector HorizontalRangeModelFieldMask =
        (TypeTraits<BitVector>::One << HorizontalRangeModelFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUnrecUIViewportPtr SFViewType;
    typedef SFUnrecScrollBarPtr SFInternalVerticalScrollBarType;
    typedef SFUnrecScrollBarPtr SFInternalHorizontalScrollBarType;
    typedef SFUInt32          SFVerticalScrollBarDisplayPolicyType;
    typedef SFUInt32          SFHorizontalScrollBarDisplayPolicyType;
    typedef SFUInt32          SFVerticalResizePolicyType;
    typedef SFUInt32          SFHorizontalResizePolicyType;
    typedef SFUInt32          SFVerticalScrollBarAlignmentType;
    typedef SFUInt32          SFHorizontalScrollBarAlignmentType;
    typedef SFUnrecDefaultBoundedRangeModelPtr SFVerticalRangeModelType;
    typedef SFUnrecDefaultBoundedRangeModelPtr SFHorizontalRangeModelType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFUInt32            *editSFVerticalScrollBarDisplayPolicy(void);
            const SFUInt32            *getSFVerticalScrollBarDisplayPolicy (void) const;

                  SFUInt32            *editSFHorizontalScrollBarDisplayPolicy(void);
            const SFUInt32            *getSFHorizontalScrollBarDisplayPolicy (void) const;

                  SFUInt32            *editSFVerticalResizePolicy(void);
            const SFUInt32            *getSFVerticalResizePolicy (void) const;

                  SFUInt32            *editSFHorizontalResizePolicy(void);
            const SFUInt32            *getSFHorizontalResizePolicy (void) const;

                  SFUInt32            *editSFVerticalScrollBarAlignment(void);
            const SFUInt32            *getSFVerticalScrollBarAlignment (void) const;

                  SFUInt32            *editSFHorizontalScrollBarAlignment(void);
            const SFUInt32            *getSFHorizontalScrollBarAlignment (void) const;
            const SFUnrecDefaultBoundedRangeModelPtr *getSFVerticalRangeModel(void) const;
                  SFUnrecDefaultBoundedRangeModelPtr *editSFVerticalRangeModel(void);
            const SFUnrecDefaultBoundedRangeModelPtr *getSFHorizontalRangeModel(void) const;
                  SFUnrecDefaultBoundedRangeModelPtr *editSFHorizontalRangeModel(void);


                  UInt32              &editVerticalScrollBarDisplayPolicy(void);
                  UInt32               getVerticalScrollBarDisplayPolicy (void) const;

                  UInt32              &editHorizontalScrollBarDisplayPolicy(void);
                  UInt32               getHorizontalScrollBarDisplayPolicy (void) const;

                  UInt32              &editVerticalResizePolicy(void);
                  UInt32               getVerticalResizePolicy (void) const;

                  UInt32              &editHorizontalResizePolicy(void);
                  UInt32               getHorizontalResizePolicy (void) const;

                  UInt32              &editVerticalScrollBarAlignment(void);
                  UInt32               getVerticalScrollBarAlignment (void) const;

                  UInt32              &editHorizontalScrollBarAlignment(void);
                  UInt32               getHorizontalScrollBarAlignment (void) const;

                  DefaultBoundedRangeModel * getVerticalRangeModel(void) const;

                  DefaultBoundedRangeModel * getHorizontalRangeModel(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setVerticalScrollBarDisplayPolicy(const UInt32 value);
            void setHorizontalScrollBarDisplayPolicy(const UInt32 value);
            void setVerticalResizePolicy(const UInt32 value);
            void setHorizontalResizePolicy(const UInt32 value);
            void setVerticalScrollBarAlignment(const UInt32 value);
            void setHorizontalScrollBarAlignment(const UInt32 value);
            void setVerticalRangeModel(DefaultBoundedRangeModel * const value);
            void setHorizontalRangeModel(DefaultBoundedRangeModel * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  ScrollPanelTransitPtr  create          (void);
    static  ScrollPanel           *createEmpty     (void);

    static  ScrollPanelTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  ScrollPanel            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  ScrollPanelTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUnrecUIViewportPtr _sfView;
    SFUnrecScrollBarPtr _sfInternalVerticalScrollBar;
    SFUnrecScrollBarPtr _sfInternalHorizontalScrollBar;
    SFUInt32          _sfVerticalScrollBarDisplayPolicy;
    SFUInt32          _sfHorizontalScrollBarDisplayPolicy;
    SFUInt32          _sfVerticalResizePolicy;
    SFUInt32          _sfHorizontalResizePolicy;
    SFUInt32          _sfVerticalScrollBarAlignment;
    SFUInt32          _sfHorizontalScrollBarAlignment;
    SFUnrecDefaultBoundedRangeModelPtr _sfVerticalRangeModel;
    SFUnrecDefaultBoundedRangeModelPtr _sfHorizontalRangeModel;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    ScrollPanelBase(void);
    ScrollPanelBase(const ScrollPanelBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~ScrollPanelBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const ScrollPanel *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleView            (void) const;
    EditFieldHandlePtr editHandleView           (void);
    GetFieldHandlePtr  getHandleInternalVerticalScrollBar (void) const;
    EditFieldHandlePtr editHandleInternalVerticalScrollBar(void);
    GetFieldHandlePtr  getHandleInternalHorizontalScrollBar (void) const;
    EditFieldHandlePtr editHandleInternalHorizontalScrollBar(void);
    GetFieldHandlePtr  getHandleVerticalScrollBarDisplayPolicy (void) const;
    EditFieldHandlePtr editHandleVerticalScrollBarDisplayPolicy(void);
    GetFieldHandlePtr  getHandleHorizontalScrollBarDisplayPolicy (void) const;
    EditFieldHandlePtr editHandleHorizontalScrollBarDisplayPolicy(void);
    GetFieldHandlePtr  getHandleVerticalResizePolicy (void) const;
    EditFieldHandlePtr editHandleVerticalResizePolicy(void);
    GetFieldHandlePtr  getHandleHorizontalResizePolicy (void) const;
    EditFieldHandlePtr editHandleHorizontalResizePolicy(void);
    GetFieldHandlePtr  getHandleVerticalScrollBarAlignment (void) const;
    EditFieldHandlePtr editHandleVerticalScrollBarAlignment(void);
    GetFieldHandlePtr  getHandleHorizontalScrollBarAlignment (void) const;
    EditFieldHandlePtr editHandleHorizontalScrollBarAlignment(void);
    GetFieldHandlePtr  getHandleVerticalRangeModel (void) const;
    EditFieldHandlePtr editHandleVerticalRangeModel(void);
    GetFieldHandlePtr  getHandleHorizontalRangeModel (void) const;
    EditFieldHandlePtr editHandleHorizontalRangeModel(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFUnrecUIViewportPtr *getSFView            (void) const;
                  SFUnrecUIViewportPtr *editSFView           (void);
            const SFUnrecScrollBarPtr *getSFInternalVerticalScrollBar (void) const;
                  SFUnrecScrollBarPtr *editSFInternalVerticalScrollBar(void);
            const SFUnrecScrollBarPtr *getSFInternalHorizontalScrollBar (void) const;
                  SFUnrecScrollBarPtr *editSFInternalHorizontalScrollBar(void);


                  UIViewport * getView           (void) const;

                  ScrollBar * getInternalVerticalScrollBar(void) const;

                  ScrollBar * getInternalHorizontalScrollBar(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setView           (UIViewport * const value);
            void setInternalVerticalScrollBar(ScrollBar * const value);
            void setInternalHorizontalScrollBar(ScrollBar * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      ScrollPanelBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const ScrollPanelBase &source);
};

typedef ScrollPanelBase *ScrollPanelBaseP;

OSG_END_NAMESPACE

#endif /* _OSGSCROLLPANELBASE_H_ */
