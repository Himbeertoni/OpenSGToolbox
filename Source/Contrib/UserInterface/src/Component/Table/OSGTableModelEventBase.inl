/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TableModelEvent!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TableModelEventBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 TableModelEventBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
TableModelEventPtr TableModelEventBase::create(void) 
{
    TableModelEventPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = TableModelEventPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
TableModelEventPtr TableModelEventBase::createEmpty(void) 
{ 
    TableModelEventPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the TableModelEvent::_sfFirstColumn field.
inline
const SFUInt32 *TableModelEventBase::getSFFirstColumn(void) const
{
    return &_sfFirstColumn;
}

//! Get the TableModelEvent::_sfFirstColumn field.
inline
SFUInt32 *TableModelEventBase::editSFFirstColumn(void)
{
    return &_sfFirstColumn;
}

//! Get the TableModelEvent::_sfLastColumn field.
inline
const SFUInt32 *TableModelEventBase::getSFLastColumn(void) const
{
    return &_sfLastColumn;
}

//! Get the TableModelEvent::_sfLastColumn field.
inline
SFUInt32 *TableModelEventBase::editSFLastColumn(void)
{
    return &_sfLastColumn;
}

//! Get the TableModelEvent::_sfFirstRow field.
inline
const SFUInt32 *TableModelEventBase::getSFFirstRow(void) const
{
    return &_sfFirstRow;
}

//! Get the TableModelEvent::_sfFirstRow field.
inline
SFUInt32 *TableModelEventBase::editSFFirstRow(void)
{
    return &_sfFirstRow;
}

//! Get the TableModelEvent::_sfLastRow field.
inline
const SFUInt32 *TableModelEventBase::getSFLastRow(void) const
{
    return &_sfLastRow;
}

//! Get the TableModelEvent::_sfLastRow field.
inline
SFUInt32 *TableModelEventBase::editSFLastRow(void)
{
    return &_sfLastRow;
}


//! Get the value of the TableModelEvent::_sfFirstColumn field.
inline
UInt32 &TableModelEventBase::editFirstColumn(void)
{
    return _sfFirstColumn.getValue();
}

//! Get the value of the TableModelEvent::_sfFirstColumn field.
inline
const UInt32 &TableModelEventBase::getFirstColumn(void) const
{
    return _sfFirstColumn.getValue();
}

//! Set the value of the TableModelEvent::_sfFirstColumn field.
inline
void TableModelEventBase::setFirstColumn(const UInt32 &value)
{
    _sfFirstColumn.setValue(value);
}

//! Get the value of the TableModelEvent::_sfLastColumn field.
inline
UInt32 &TableModelEventBase::editLastColumn(void)
{
    return _sfLastColumn.getValue();
}

//! Get the value of the TableModelEvent::_sfLastColumn field.
inline
const UInt32 &TableModelEventBase::getLastColumn(void) const
{
    return _sfLastColumn.getValue();
}

//! Set the value of the TableModelEvent::_sfLastColumn field.
inline
void TableModelEventBase::setLastColumn(const UInt32 &value)
{
    _sfLastColumn.setValue(value);
}

//! Get the value of the TableModelEvent::_sfFirstRow field.
inline
UInt32 &TableModelEventBase::editFirstRow(void)
{
    return _sfFirstRow.getValue();
}

//! Get the value of the TableModelEvent::_sfFirstRow field.
inline
const UInt32 &TableModelEventBase::getFirstRow(void) const
{
    return _sfFirstRow.getValue();
}

//! Set the value of the TableModelEvent::_sfFirstRow field.
inline
void TableModelEventBase::setFirstRow(const UInt32 &value)
{
    _sfFirstRow.setValue(value);
}

//! Get the value of the TableModelEvent::_sfLastRow field.
inline
UInt32 &TableModelEventBase::editLastRow(void)
{
    return _sfLastRow.getValue();
}

//! Get the value of the TableModelEvent::_sfLastRow field.
inline
const UInt32 &TableModelEventBase::getLastRow(void) const
{
    return _sfLastRow.getValue();
}

//! Set the value of the TableModelEvent::_sfLastRow field.
inline
void TableModelEventBase::setLastRow(const UInt32 &value)
{
    _sfLastRow.setValue(value);
}


OSG_END_NAMESPACE

