/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TexturedQuadUIDrawObject!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TexturedQuadUIDrawObjectBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 TexturedQuadUIDrawObjectBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 TexturedQuadUIDrawObjectBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the TexturedQuadUIDrawObject::_sfPoint1 field.

inline
Pnt2f &TexturedQuadUIDrawObjectBase::editPoint1(void)
{
    editSField(Point1FieldMask);

    return _sfPoint1.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfPoint1 field.
inline
const Pnt2f &TexturedQuadUIDrawObjectBase::getPoint1(void) const
{
    return _sfPoint1.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfPoint1 field.
inline
void TexturedQuadUIDrawObjectBase::setPoint1(const Pnt2f &value)
{
    editSField(Point1FieldMask);

    _sfPoint1.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfPoint2 field.

inline
Pnt2f &TexturedQuadUIDrawObjectBase::editPoint2(void)
{
    editSField(Point2FieldMask);

    return _sfPoint2.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfPoint2 field.
inline
const Pnt2f &TexturedQuadUIDrawObjectBase::getPoint2(void) const
{
    return _sfPoint2.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfPoint2 field.
inline
void TexturedQuadUIDrawObjectBase::setPoint2(const Pnt2f &value)
{
    editSField(Point2FieldMask);

    _sfPoint2.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfPoint3 field.

inline
Pnt2f &TexturedQuadUIDrawObjectBase::editPoint3(void)
{
    editSField(Point3FieldMask);

    return _sfPoint3.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfPoint3 field.
inline
const Pnt2f &TexturedQuadUIDrawObjectBase::getPoint3(void) const
{
    return _sfPoint3.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfPoint3 field.
inline
void TexturedQuadUIDrawObjectBase::setPoint3(const Pnt2f &value)
{
    editSField(Point3FieldMask);

    _sfPoint3.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfPoint4 field.

inline
Pnt2f &TexturedQuadUIDrawObjectBase::editPoint4(void)
{
    editSField(Point4FieldMask);

    return _sfPoint4.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfPoint4 field.
inline
const Pnt2f &TexturedQuadUIDrawObjectBase::getPoint4(void) const
{
    return _sfPoint4.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfPoint4 field.
inline
void TexturedQuadUIDrawObjectBase::setPoint4(const Pnt2f &value)
{
    editSField(Point4FieldMask);

    _sfPoint4.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord1 field.

inline
Vec2f &TexturedQuadUIDrawObjectBase::editTexCoord1(void)
{
    editSField(TexCoord1FieldMask);

    return _sfTexCoord1.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord1 field.
inline
const Vec2f &TexturedQuadUIDrawObjectBase::getTexCoord1(void) const
{
    return _sfTexCoord1.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfTexCoord1 field.
inline
void TexturedQuadUIDrawObjectBase::setTexCoord1(const Vec2f &value)
{
    editSField(TexCoord1FieldMask);

    _sfTexCoord1.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord2 field.

inline
Vec2f &TexturedQuadUIDrawObjectBase::editTexCoord2(void)
{
    editSField(TexCoord2FieldMask);

    return _sfTexCoord2.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord2 field.
inline
const Vec2f &TexturedQuadUIDrawObjectBase::getTexCoord2(void) const
{
    return _sfTexCoord2.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfTexCoord2 field.
inline
void TexturedQuadUIDrawObjectBase::setTexCoord2(const Vec2f &value)
{
    editSField(TexCoord2FieldMask);

    _sfTexCoord2.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord3 field.

inline
Vec2f &TexturedQuadUIDrawObjectBase::editTexCoord3(void)
{
    editSField(TexCoord3FieldMask);

    return _sfTexCoord3.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord3 field.
inline
const Vec2f &TexturedQuadUIDrawObjectBase::getTexCoord3(void) const
{
    return _sfTexCoord3.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfTexCoord3 field.
inline
void TexturedQuadUIDrawObjectBase::setTexCoord3(const Vec2f &value)
{
    editSField(TexCoord3FieldMask);

    _sfTexCoord3.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord4 field.

inline
Vec2f &TexturedQuadUIDrawObjectBase::editTexCoord4(void)
{
    editSField(TexCoord4FieldMask);

    return _sfTexCoord4.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfTexCoord4 field.
inline
const Vec2f &TexturedQuadUIDrawObjectBase::getTexCoord4(void) const
{
    return _sfTexCoord4.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfTexCoord4 field.
inline
void TexturedQuadUIDrawObjectBase::setTexCoord4(const Vec2f &value)
{
    editSField(TexCoord4FieldMask);

    _sfTexCoord4.setValue(value);
}

//! Get the value of the TexturedQuadUIDrawObject::_sfTexture field.
inline
TextureObjChunk * TexturedQuadUIDrawObjectBase::getTexture(void) const
{
    return _sfTexture.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfTexture field.
inline
void TexturedQuadUIDrawObjectBase::setTexture(TextureObjChunk * const value)
{
    editSField(TextureFieldMask);

    _sfTexture.setValue(value);
}
//! Get the value of the TexturedQuadUIDrawObject::_sfOpacity field.

inline
Real32 &TexturedQuadUIDrawObjectBase::editOpacity(void)
{
    editSField(OpacityFieldMask);

    return _sfOpacity.getValue();
}

//! Get the value of the TexturedQuadUIDrawObject::_sfOpacity field.
inline
      Real32  TexturedQuadUIDrawObjectBase::getOpacity(void) const
{
    return _sfOpacity.getValue();
}

//! Set the value of the TexturedQuadUIDrawObject::_sfOpacity field.
inline
void TexturedQuadUIDrawObjectBase::setOpacity(const Real32 value)
{
    editSField(OpacityFieldMask);

    _sfOpacity.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void TexturedQuadUIDrawObjectBase::execSync (      TexturedQuadUIDrawObjectBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (Point1FieldMask & whichField))
        _sfPoint1.syncWith(pFrom->_sfPoint1);

    if(FieldBits::NoField != (Point2FieldMask & whichField))
        _sfPoint2.syncWith(pFrom->_sfPoint2);

    if(FieldBits::NoField != (Point3FieldMask & whichField))
        _sfPoint3.syncWith(pFrom->_sfPoint3);

    if(FieldBits::NoField != (Point4FieldMask & whichField))
        _sfPoint4.syncWith(pFrom->_sfPoint4);

    if(FieldBits::NoField != (TexCoord1FieldMask & whichField))
        _sfTexCoord1.syncWith(pFrom->_sfTexCoord1);

    if(FieldBits::NoField != (TexCoord2FieldMask & whichField))
        _sfTexCoord2.syncWith(pFrom->_sfTexCoord2);

    if(FieldBits::NoField != (TexCoord3FieldMask & whichField))
        _sfTexCoord3.syncWith(pFrom->_sfTexCoord3);

    if(FieldBits::NoField != (TexCoord4FieldMask & whichField))
        _sfTexCoord4.syncWith(pFrom->_sfTexCoord4);

    if(FieldBits::NoField != (TextureFieldMask & whichField))
        _sfTexture.syncWith(pFrom->_sfTexture);

    if(FieldBits::NoField != (OpacityFieldMask & whichField))
        _sfOpacity.syncWith(pFrom->_sfOpacity);
}
#endif


inline
const Char8 *TexturedQuadUIDrawObjectBase::getClassname(void)
{
    return "TexturedQuadUIDrawObject";
}
OSG_GEN_CONTAINERPTR(TexturedQuadUIDrawObject);

OSG_END_NAMESPACE

