/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BoxLayout!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &BoxLayoutBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 BoxLayoutBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 BoxLayoutBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the BoxLayout::_sfOrientation field.

inline
UInt32 &BoxLayoutBase::editOrientation(void)
{
    editSField(OrientationFieldMask);

    return _sfOrientation.getValue();
}

//! Get the value of the BoxLayout::_sfOrientation field.
inline
      UInt32  BoxLayoutBase::getOrientation(void) const
{
    return _sfOrientation.getValue();
}

//! Set the value of the BoxLayout::_sfOrientation field.
inline
void BoxLayoutBase::setOrientation(const UInt32 value)
{
    editSField(OrientationFieldMask);

    _sfOrientation.setValue(value);
}
//! Get the value of the BoxLayout::_sfMajorAxisAlignment field.

inline
Real32 &BoxLayoutBase::editMajorAxisAlignment(void)
{
    editSField(MajorAxisAlignmentFieldMask);

    return _sfMajorAxisAlignment.getValue();
}

//! Get the value of the BoxLayout::_sfMajorAxisAlignment field.
inline
      Real32  BoxLayoutBase::getMajorAxisAlignment(void) const
{
    return _sfMajorAxisAlignment.getValue();
}

//! Set the value of the BoxLayout::_sfMajorAxisAlignment field.
inline
void BoxLayoutBase::setMajorAxisAlignment(const Real32 value)
{
    editSField(MajorAxisAlignmentFieldMask);

    _sfMajorAxisAlignment.setValue(value);
}
//! Get the value of the BoxLayout::_sfMinorAxisAlignment field.

inline
Real32 &BoxLayoutBase::editMinorAxisAlignment(void)
{
    editSField(MinorAxisAlignmentFieldMask);

    return _sfMinorAxisAlignment.getValue();
}

//! Get the value of the BoxLayout::_sfMinorAxisAlignment field.
inline
      Real32  BoxLayoutBase::getMinorAxisAlignment(void) const
{
    return _sfMinorAxisAlignment.getValue();
}

//! Set the value of the BoxLayout::_sfMinorAxisAlignment field.
inline
void BoxLayoutBase::setMinorAxisAlignment(const Real32 value)
{
    editSField(MinorAxisAlignmentFieldMask);

    _sfMinorAxisAlignment.setValue(value);
}
//! Get the value of the BoxLayout::_sfComponentAlignment field.

inline
Real32 &BoxLayoutBase::editComponentAlignment(void)
{
    editSField(ComponentAlignmentFieldMask);

    return _sfComponentAlignment.getValue();
}

//! Get the value of the BoxLayout::_sfComponentAlignment field.
inline
      Real32  BoxLayoutBase::getComponentAlignment(void) const
{
    return _sfComponentAlignment.getValue();
}

//! Set the value of the BoxLayout::_sfComponentAlignment field.
inline
void BoxLayoutBase::setComponentAlignment(const Real32 value)
{
    editSField(ComponentAlignmentFieldMask);

    _sfComponentAlignment.setValue(value);
}
//! Get the value of the BoxLayout::_sfMajorAxisMinimumGap field.

inline
Real32 &BoxLayoutBase::editMajorAxisMinimumGap(void)
{
    editSField(MajorAxisMinimumGapFieldMask);

    return _sfMajorAxisMinimumGap.getValue();
}

//! Get the value of the BoxLayout::_sfMajorAxisMinimumGap field.
inline
      Real32  BoxLayoutBase::getMajorAxisMinimumGap(void) const
{
    return _sfMajorAxisMinimumGap.getValue();
}

//! Set the value of the BoxLayout::_sfMajorAxisMinimumGap field.
inline
void BoxLayoutBase::setMajorAxisMinimumGap(const Real32 value)
{
    editSField(MajorAxisMinimumGapFieldMask);

    _sfMajorAxisMinimumGap.setValue(value);
}
//! Get the value of the BoxLayout::_sfMajorAxisMaximumGap field.

inline
Real32 &BoxLayoutBase::editMajorAxisMaximumGap(void)
{
    editSField(MajorAxisMaximumGapFieldMask);

    return _sfMajorAxisMaximumGap.getValue();
}

//! Get the value of the BoxLayout::_sfMajorAxisMaximumGap field.
inline
      Real32  BoxLayoutBase::getMajorAxisMaximumGap(void) const
{
    return _sfMajorAxisMaximumGap.getValue();
}

//! Set the value of the BoxLayout::_sfMajorAxisMaximumGap field.
inline
void BoxLayoutBase::setMajorAxisMaximumGap(const Real32 value)
{
    editSField(MajorAxisMaximumGapFieldMask);

    _sfMajorAxisMaximumGap.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void BoxLayoutBase::execSync (      BoxLayoutBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (OrientationFieldMask & whichField))
        _sfOrientation.syncWith(pFrom->_sfOrientation);

    if(FieldBits::NoField != (MajorAxisAlignmentFieldMask & whichField))
        _sfMajorAxisAlignment.syncWith(pFrom->_sfMajorAxisAlignment);

    if(FieldBits::NoField != (MinorAxisAlignmentFieldMask & whichField))
        _sfMinorAxisAlignment.syncWith(pFrom->_sfMinorAxisAlignment);

    if(FieldBits::NoField != (ComponentAlignmentFieldMask & whichField))
        _sfComponentAlignment.syncWith(pFrom->_sfComponentAlignment);

    if(FieldBits::NoField != (MajorAxisMinimumGapFieldMask & whichField))
        _sfMajorAxisMinimumGap.syncWith(pFrom->_sfMajorAxisMinimumGap);

    if(FieldBits::NoField != (MajorAxisMaximumGapFieldMask & whichField))
        _sfMajorAxisMaximumGap.syncWith(pFrom->_sfMajorAxisMaximumGap);
}
#endif


inline
const Char8 *BoxLayoutBase::getClassname(void)
{
    return "BoxLayout";
}
OSG_GEN_CONTAINERPTR(BoxLayout);

OSG_END_NAMESPACE

