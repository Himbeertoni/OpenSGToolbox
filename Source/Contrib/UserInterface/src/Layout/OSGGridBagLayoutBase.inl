/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GridBagLayout!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &GridBagLayoutBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 GridBagLayoutBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 GridBagLayoutBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the GridBagLayout::_sfRows field.

inline
UInt32 &GridBagLayoutBase::editRows(void)
{
    editSField(RowsFieldMask);

    return _sfRows.getValue();
}

//! Get the value of the GridBagLayout::_sfRows field.
inline
      UInt32  GridBagLayoutBase::getRows(void) const
{
    return _sfRows.getValue();
}

//! Set the value of the GridBagLayout::_sfRows field.
inline
void GridBagLayoutBase::setRows(const UInt32 value)
{
    editSField(RowsFieldMask);

    _sfRows.setValue(value);
}
//! Get the value of the GridBagLayout::_sfColumns field.

inline
UInt32 &GridBagLayoutBase::editColumns(void)
{
    editSField(ColumnsFieldMask);

    return _sfColumns.getValue();
}

//! Get the value of the GridBagLayout::_sfColumns field.
inline
      UInt32  GridBagLayoutBase::getColumns(void) const
{
    return _sfColumns.getValue();
}

//! Set the value of the GridBagLayout::_sfColumns field.
inline
void GridBagLayoutBase::setColumns(const UInt32 value)
{
    editSField(ColumnsFieldMask);

    _sfColumns.setValue(value);
}

//! Get the value of the \a index element the GridBagLayout::_mfColumnWeights field.
inline
      Real32  GridBagLayoutBase::getColumnWeights(const UInt32 index) const
{
    return _mfColumnWeights[index];
}

inline
Real32 &GridBagLayoutBase::editColumnWeights(const UInt32 index)
{
    editMField(ColumnWeightsFieldMask, _mfColumnWeights);

    return _mfColumnWeights[index];
}


//! Get the value of the \a index element the GridBagLayout::_mfColumnWidths field.
inline
      Real32  GridBagLayoutBase::getColumnWidths(const UInt32 index) const
{
    return _mfColumnWidths[index];
}

inline
Real32 &GridBagLayoutBase::editColumnWidths(const UInt32 index)
{
    editMField(ColumnWidthsFieldMask, _mfColumnWidths);

    return _mfColumnWidths[index];
}


//! Get the value of the \a index element the GridBagLayout::_mfRowWeights field.
inline
      Real32  GridBagLayoutBase::getRowWeights(const UInt32 index) const
{
    return _mfRowWeights[index];
}

inline
Real32 &GridBagLayoutBase::editRowWeights(const UInt32 index)
{
    editMField(RowWeightsFieldMask, _mfRowWeights);

    return _mfRowWeights[index];
}


//! Get the value of the \a index element the GridBagLayout::_mfRowHeights field.
inline
      Real32  GridBagLayoutBase::getRowHeights(const UInt32 index) const
{
    return _mfRowHeights[index];
}

inline
Real32 &GridBagLayoutBase::editRowHeights(const UInt32 index)
{
    editMField(RowHeightsFieldMask, _mfRowHeights);

    return _mfRowHeights[index];
}



#ifdef OSG_MT_CPTR_ASPECT
inline
void GridBagLayoutBase::execSync (      GridBagLayoutBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (RowsFieldMask & whichField))
        _sfRows.syncWith(pFrom->_sfRows);

    if(FieldBits::NoField != (ColumnsFieldMask & whichField))
        _sfColumns.syncWith(pFrom->_sfColumns);

    if(FieldBits::NoField != (ColumnWeightsFieldMask & whichField))
        _mfColumnWeights.syncWith(pFrom->_mfColumnWeights,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (ColumnWidthsFieldMask & whichField))
        _mfColumnWidths.syncWith(pFrom->_mfColumnWidths,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (RowWeightsFieldMask & whichField))
        _mfRowWeights.syncWith(pFrom->_mfRowWeights,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (RowHeightsFieldMask & whichField))
        _mfRowHeights.syncWith(pFrom->_mfRowHeights,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);
}
#endif


inline
const Char8 *GridBagLayoutBase::getClassname(void)
{
    return "GridBagLayout";
}
OSG_GEN_CONTAINERPTR(GridBagLayout);

OSG_END_NAMESPACE

