/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), David Naylor               *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkeletonBlendedGeometry
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGSKELETONBLENDEDGEOMETRYBASE_H_
#define _OSGSKELETONBLENDEDGEOMETRYBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGTBAnimationDef.h"

//#include "OSGBaseTypes.h"

#include "OSGGeometry.h" // Parent

#include "OSGGeometryFields.h"          // BaseGeometry type
#include "OSGJointFields.h"             // Joints type
#include "OSGSysFields.h"               // PositionIndexes type
#include "OSGSkeletonFields.h"          // Skeletons type

#include "OSGSkeletonBlendedGeometryFields.h"

OSG_BEGIN_NAMESPACE

class SkeletonBlendedGeometry;

//! \brief SkeletonBlendedGeometry Base Class.

class OSG_TBANIMATION_DLLMAPPING SkeletonBlendedGeometryBase : public Geometry
{
  public:

    typedef Geometry Inherited;
    typedef Geometry ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(SkeletonBlendedGeometry);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        BaseGeometryFieldId = Inherited::NextFieldId,
        JointsFieldId = BaseGeometryFieldId + 1,
        PositionIndexesFieldId = JointsFieldId + 1,
        BlendAmountsFieldId = PositionIndexesFieldId + 1,
        SkeletonsFieldId = BlendAmountsFieldId + 1,
        BlendModeFieldId = SkeletonsFieldId + 1,
        NextFieldId = BlendModeFieldId + 1
    };

    static const OSG::BitVector BaseGeometryFieldMask =
        (TypeTraits<BitVector>::One << BaseGeometryFieldId);
    static const OSG::BitVector JointsFieldMask =
        (TypeTraits<BitVector>::One << JointsFieldId);
    static const OSG::BitVector PositionIndexesFieldMask =
        (TypeTraits<BitVector>::One << PositionIndexesFieldId);
    static const OSG::BitVector BlendAmountsFieldMask =
        (TypeTraits<BitVector>::One << BlendAmountsFieldId);
    static const OSG::BitVector SkeletonsFieldMask =
        (TypeTraits<BitVector>::One << SkeletonsFieldId);
    static const OSG::BitVector BlendModeFieldMask =
        (TypeTraits<BitVector>::One << BlendModeFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFUnrecGeometryPtr SFBaseGeometryType;
    typedef MFUnrecJointPtr   MFJointsType;
    typedef MFUInt32          MFPositionIndexesType;
    typedef MFReal32          MFBlendAmountsType;
    typedef MFUnrecSkeletonPtr MFSkeletonsType;
    typedef SFUInt32          SFBlendModeType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFUnrecGeometryPtr  *getSFBaseGeometry   (void) const;
                  SFUnrecGeometryPtr  *editSFBaseGeometry   (void);
            const MFUnrecSkeletonPtr  *getMFSkeletons      (void) const;
                  MFUnrecSkeletonPtr  *editMFSkeletons      (void);

                  SFUInt32            *editSFBlendMode      (void);
            const SFUInt32            *getSFBlendMode       (void) const;


                  Geometry * getBaseGeometry   (void) const;

                  Skeleton * getSkeletons      (const UInt32 index) const;

                  UInt32              &editBlendMode      (void);
                  UInt32               getBlendMode       (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setBaseGeometry   (Geometry * const value);
            void setBlendMode      (const UInt32 value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    void pushToSkeletons           (Skeleton * const value   );
    void assignSkeletons          (const MFUnrecSkeletonPtr &value);
    void removeFromSkeletons (UInt32               uiIndex );
    void removeObjFromSkeletons(Skeleton * const value   );
    void clearSkeletons             (void                         );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  SkeletonBlendedGeometryTransitPtr  create          (void);
    static  SkeletonBlendedGeometry           *createEmpty     (void);

    static  SkeletonBlendedGeometryTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  SkeletonBlendedGeometry            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  SkeletonBlendedGeometryTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUnrecGeometryPtr _sfBaseGeometry;
    MFUnrecJointPtr   _mfJoints;
    MFUInt32          _mfPositionIndexes;
    MFReal32          _mfBlendAmounts;
    MFUnrecSkeletonPtr _mfSkeletons;
    SFUInt32          _sfBlendMode;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    SkeletonBlendedGeometryBase(void);
    SkeletonBlendedGeometryBase(const SkeletonBlendedGeometryBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~SkeletonBlendedGeometryBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const SkeletonBlendedGeometry *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleBaseGeometry    (void) const;
    EditFieldHandlePtr editHandleBaseGeometry   (void);
    GetFieldHandlePtr  getHandleJoints          (void) const;
    EditFieldHandlePtr editHandleJoints         (void);
    GetFieldHandlePtr  getHandlePositionIndexes (void) const;
    EditFieldHandlePtr editHandlePositionIndexes(void);
    GetFieldHandlePtr  getHandleBlendAmounts    (void) const;
    EditFieldHandlePtr editHandleBlendAmounts   (void);
    GetFieldHandlePtr  getHandleSkeletons       (void) const;
    EditFieldHandlePtr editHandleSkeletons      (void);
    GetFieldHandlePtr  getHandleBlendMode       (void) const;
    EditFieldHandlePtr editHandleBlendMode      (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const MFUnrecJointPtr     *getMFJoints          (void) const;
                  MFUnrecJointPtr     *editMFJoints         (void);

                  MFUInt32            *editMFPositionIndexes(void);
            const MFUInt32            *getMFPositionIndexes (void) const;

                  MFReal32            *editMFBlendAmounts   (void);
            const MFReal32            *getMFBlendAmounts    (void) const;


                  Joint * getJoints         (const UInt32 index) const;

                  UInt32              &editPositionIndexes(const UInt32 index);
                  UInt32               getPositionIndexes (const UInt32 index) const;

                  Real32              &editBlendAmounts   (const UInt32 index);
                  Real32               getBlendAmounts    (const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    void pushToJoints              (Joint * const value   );
    void assignJoints              (const MFUnrecJointPtr   &value);
    void removeFromJoints (UInt32                uiIndex );
    void removeObjFromJoints(Joint * const value   );
    void clearJoints                (void                          );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      SkeletonBlendedGeometryBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const SkeletonBlendedGeometryBase &source);
};

typedef SkeletonBlendedGeometryBase *SkeletonBlendedGeometryBaseP;

OSG_END_NAMESPACE

#endif /* _OSGSKELETONBLENDEDGEOMETRYBASE_H_ */
