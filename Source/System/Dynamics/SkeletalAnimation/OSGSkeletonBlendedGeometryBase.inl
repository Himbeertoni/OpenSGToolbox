/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com), David Naylor               *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkeletonBlendedGeometry!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SkeletonBlendedGeometryBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 SkeletonBlendedGeometryBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 SkeletonBlendedGeometryBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
Geometry * SkeletonBlendedGeometryBase::getBaseGeometry(void) const
{
    return _sfBaseGeometry.getValue();
}

//! Set the value of the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
void SkeletonBlendedGeometryBase::setBaseGeometry(Geometry * const value)
{
    editSField(BaseGeometryFieldMask);

    _sfBaseGeometry.setValue(value);
}
//! Get the value of the SkeletonBlendedGeometry::_sfBlendMode field.

inline
UInt32 &SkeletonBlendedGeometryBase::editBlendMode(void)
{
    editSField(BlendModeFieldMask);

    return _sfBlendMode.getValue();
}

//! Get the value of the SkeletonBlendedGeometry::_sfBlendMode field.
inline
      UInt32  SkeletonBlendedGeometryBase::getBlendMode(void) const
{
    return _sfBlendMode.getValue();
}

//! Set the value of the SkeletonBlendedGeometry::_sfBlendMode field.
inline
void SkeletonBlendedGeometryBase::setBlendMode(const UInt32 value)
{
    editSField(BlendModeFieldMask);

    _sfBlendMode.setValue(value);
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfJoints field.
inline
Joint * SkeletonBlendedGeometryBase::getJoints(const UInt32 index) const
{
    return _mfJoints[index];
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfPositionIndexes field.
inline
      UInt32  SkeletonBlendedGeometryBase::getPositionIndexes(const UInt32 index) const
{
    return _mfPositionIndexes[index];
}

inline
UInt32 &SkeletonBlendedGeometryBase::editPositionIndexes(const UInt32 index)
{
    editMField(PositionIndexesFieldMask, _mfPositionIndexes);

    return _mfPositionIndexes[index];
}


//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfBlendAmounts field.
inline
      Real32  SkeletonBlendedGeometryBase::getBlendAmounts(const UInt32 index) const
{
    return _mfBlendAmounts[index];
}

inline
Real32 &SkeletonBlendedGeometryBase::editBlendAmounts(const UInt32 index)
{
    editMField(BlendAmountsFieldMask, _mfBlendAmounts);

    return _mfBlendAmounts[index];
}


//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfSkeletons field.
inline
Skeleton * SkeletonBlendedGeometryBase::getSkeletons(const UInt32 index) const
{
    return _mfSkeletons[index];
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void SkeletonBlendedGeometryBase::execSync (      SkeletonBlendedGeometryBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (BaseGeometryFieldMask & whichField))
        _sfBaseGeometry.syncWith(pFrom->_sfBaseGeometry);

    if(FieldBits::NoField != (JointsFieldMask & whichField))
        _mfJoints.syncWith(pFrom->_mfJoints,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (PositionIndexesFieldMask & whichField))
        _mfPositionIndexes.syncWith(pFrom->_mfPositionIndexes,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (BlendAmountsFieldMask & whichField))
        _mfBlendAmounts.syncWith(pFrom->_mfBlendAmounts,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (SkeletonsFieldMask & whichField))
        _mfSkeletons.syncWith(pFrom->_mfSkeletons,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (BlendModeFieldMask & whichField))
        _sfBlendMode.syncWith(pFrom->_sfBlendMode);
}
#endif


inline
const Char8 *SkeletonBlendedGeometryBase::getClassname(void)
{
    return "SkeletonBlendedGeometry";
}


OSG_GEN_CONTAINERPTR(SkeletonBlendedGeometry);

OSG_END_NAMESPACE

