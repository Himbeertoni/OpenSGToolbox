/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MouseWheelEvent!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &MouseWheelEventBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 MouseWheelEventBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 MouseWheelEventBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the MouseWheelEvent::_sfScrollType field.

inline
UInt8 &MouseWheelEventBase::editScrollType(void)
{
    editSField(ScrollTypeFieldMask);

    return _sfScrollType.getValue();
}

//! Get the value of the MouseWheelEvent::_sfScrollType field.
inline
      UInt8  MouseWheelEventBase::getScrollType(void) const
{
    return _sfScrollType.getValue();
}

//! Set the value of the MouseWheelEvent::_sfScrollType field.
inline
void MouseWheelEventBase::setScrollType(const UInt8 value)
{
    editSField(ScrollTypeFieldMask);

    _sfScrollType.setValue(value);
}
//! Get the value of the MouseWheelEvent::_sfScrollOrientation field.

inline
UInt8 &MouseWheelEventBase::editScrollOrientation(void)
{
    editSField(ScrollOrientationFieldMask);

    return _sfScrollOrientation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfScrollOrientation field.
inline
      UInt8  MouseWheelEventBase::getScrollOrientation(void) const
{
    return _sfScrollOrientation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfScrollOrientation field.
inline
void MouseWheelEventBase::setScrollOrientation(const UInt8 value)
{
    editSField(ScrollOrientationFieldMask);

    _sfScrollOrientation.setValue(value);
}
//! Get the value of the MouseWheelEvent::_sfWheelRotation field.

inline
Int32 &MouseWheelEventBase::editWheelRotation(void)
{
    editSField(WheelRotationFieldMask);

    return _sfWheelRotation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfWheelRotation field.
inline
      Int32  MouseWheelEventBase::getWheelRotation(void) const
{
    return _sfWheelRotation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfWheelRotation field.
inline
void MouseWheelEventBase::setWheelRotation(const Int32 value)
{
    editSField(WheelRotationFieldMask);

    _sfWheelRotation.setValue(value);
}
//! Get the value of the MouseWheelEvent::_sfLocation field.

inline
Pnt2f &MouseWheelEventBase::editLocation(void)
{
    editSField(LocationFieldMask);

    return _sfLocation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfLocation field.
inline
const Pnt2f &MouseWheelEventBase::getLocation(void) const
{
    return _sfLocation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfLocation field.
inline
void MouseWheelEventBase::setLocation(const Pnt2f &value)
{
    editSField(LocationFieldMask);

    _sfLocation.setValue(value);
}

//! Get the value of the MouseWheelEvent::_sfViewport field.
inline
Viewport * MouseWheelEventBase::getViewport(void) const
{
    return _sfViewport.getValue();
}

//! Set the value of the MouseWheelEvent::_sfViewport field.
inline
void MouseWheelEventBase::setViewport(Viewport * const value)
{
    editSField(ViewportFieldMask);

    _sfViewport.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void MouseWheelEventBase::execSync (      MouseWheelEventBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (ScrollTypeFieldMask & whichField))
        _sfScrollType.syncWith(pFrom->_sfScrollType);

    if(FieldBits::NoField != (ScrollOrientationFieldMask & whichField))
        _sfScrollOrientation.syncWith(pFrom->_sfScrollOrientation);

    if(FieldBits::NoField != (WheelRotationFieldMask & whichField))
        _sfWheelRotation.syncWith(pFrom->_sfWheelRotation);

    if(FieldBits::NoField != (LocationFieldMask & whichField))
        _sfLocation.syncWith(pFrom->_sfLocation);

    if(FieldBits::NoField != (ViewportFieldMask & whichField))
        _sfViewport.syncWith(pFrom->_sfViewport);
}
#endif


inline
const Char8 *MouseWheelEventBase::getClassname(void)
{
    return "MouseWheelEvent";
}


OSG_GEN_CONTAINERPTR(MouseWheelEvent);

OSG_END_NAMESPACE

