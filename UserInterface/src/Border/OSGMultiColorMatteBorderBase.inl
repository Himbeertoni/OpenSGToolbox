/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MultiColorMatteBorder!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &MultiColorMatteBorderBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 MultiColorMatteBorderBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
MultiColorMatteBorderPtr MultiColorMatteBorderBase::create(void) 
{
    MultiColorMatteBorderPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = MultiColorMatteBorderPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
MultiColorMatteBorderPtr MultiColorMatteBorderBase::createEmpty(void) 
{ 
    MultiColorMatteBorderPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the MultiColorMatteBorder::_sfLeftWidth field.
inline
SFUInt32 *MultiColorMatteBorderBase::getSFLeftWidth(void)
{
    return &_sfLeftWidth;
}

//! Get the MultiColorMatteBorder::_sfRightWidth field.
inline
SFUInt32 *MultiColorMatteBorderBase::getSFRightWidth(void)
{
    return &_sfRightWidth;
}

//! Get the MultiColorMatteBorder::_sfTopWidth field.
inline
SFUInt32 *MultiColorMatteBorderBase::getSFTopWidth(void)
{
    return &_sfTopWidth;
}

//! Get the MultiColorMatteBorder::_sfBottomWidth field.
inline
SFUInt32 *MultiColorMatteBorderBase::getSFBottomWidth(void)
{
    return &_sfBottomWidth;
}

//! Get the MultiColorMatteBorder::_sfLeftLineTopColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFLeftLineTopColor(void)
{
    return &_sfLeftLineTopColor;
}

//! Get the MultiColorMatteBorder::_sfLeftLineBottomColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFLeftLineBottomColor(void)
{
    return &_sfLeftLineBottomColor;
}

//! Get the MultiColorMatteBorder::_sfTopLineLeftColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFTopLineLeftColor(void)
{
    return &_sfTopLineLeftColor;
}

//! Get the MultiColorMatteBorder::_sfTopLineRightColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFTopLineRightColor(void)
{
    return &_sfTopLineRightColor;
}

//! Get the MultiColorMatteBorder::_sfRightLineTopColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFRightLineTopColor(void)
{
    return &_sfRightLineTopColor;
}

//! Get the MultiColorMatteBorder::_sfRightLineBottomColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFRightLineBottomColor(void)
{
    return &_sfRightLineBottomColor;
}

//! Get the MultiColorMatteBorder::_sfBottomLineLeftColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFBottomLineLeftColor(void)
{
    return &_sfBottomLineLeftColor;
}

//! Get the MultiColorMatteBorder::_sfBottomLineRightColor field.
inline
SFColor4f *MultiColorMatteBorderBase::getSFBottomLineRightColor(void)
{
    return &_sfBottomLineRightColor;
}


//! Get the value of the MultiColorMatteBorder::_sfLeftWidth field.
inline
UInt32 &MultiColorMatteBorderBase::getLeftWidth(void)
{
    return _sfLeftWidth.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfLeftWidth field.
inline
const UInt32 &MultiColorMatteBorderBase::getLeftWidth(void) const
{
    return _sfLeftWidth.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfLeftWidth field.
inline
void MultiColorMatteBorderBase::setLeftWidth(const UInt32 &value)
{
    _sfLeftWidth.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfRightWidth field.
inline
UInt32 &MultiColorMatteBorderBase::getRightWidth(void)
{
    return _sfRightWidth.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfRightWidth field.
inline
const UInt32 &MultiColorMatteBorderBase::getRightWidth(void) const
{
    return _sfRightWidth.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfRightWidth field.
inline
void MultiColorMatteBorderBase::setRightWidth(const UInt32 &value)
{
    _sfRightWidth.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfTopWidth field.
inline
UInt32 &MultiColorMatteBorderBase::getTopWidth(void)
{
    return _sfTopWidth.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfTopWidth field.
inline
const UInt32 &MultiColorMatteBorderBase::getTopWidth(void) const
{
    return _sfTopWidth.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfTopWidth field.
inline
void MultiColorMatteBorderBase::setTopWidth(const UInt32 &value)
{
    _sfTopWidth.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfBottomWidth field.
inline
UInt32 &MultiColorMatteBorderBase::getBottomWidth(void)
{
    return _sfBottomWidth.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfBottomWidth field.
inline
const UInt32 &MultiColorMatteBorderBase::getBottomWidth(void) const
{
    return _sfBottomWidth.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfBottomWidth field.
inline
void MultiColorMatteBorderBase::setBottomWidth(const UInt32 &value)
{
    _sfBottomWidth.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfLeftLineTopColor field.
inline
Color4f &MultiColorMatteBorderBase::getLeftLineTopColor(void)
{
    return _sfLeftLineTopColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfLeftLineTopColor field.
inline
const Color4f &MultiColorMatteBorderBase::getLeftLineTopColor(void) const
{
    return _sfLeftLineTopColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfLeftLineTopColor field.
inline
void MultiColorMatteBorderBase::setLeftLineTopColor(const Color4f &value)
{
    _sfLeftLineTopColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfLeftLineBottomColor field.
inline
Color4f &MultiColorMatteBorderBase::getLeftLineBottomColor(void)
{
    return _sfLeftLineBottomColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfLeftLineBottomColor field.
inline
const Color4f &MultiColorMatteBorderBase::getLeftLineBottomColor(void) const
{
    return _sfLeftLineBottomColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfLeftLineBottomColor field.
inline
void MultiColorMatteBorderBase::setLeftLineBottomColor(const Color4f &value)
{
    _sfLeftLineBottomColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfTopLineLeftColor field.
inline
Color4f &MultiColorMatteBorderBase::getTopLineLeftColor(void)
{
    return _sfTopLineLeftColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfTopLineLeftColor field.
inline
const Color4f &MultiColorMatteBorderBase::getTopLineLeftColor(void) const
{
    return _sfTopLineLeftColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfTopLineLeftColor field.
inline
void MultiColorMatteBorderBase::setTopLineLeftColor(const Color4f &value)
{
    _sfTopLineLeftColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfTopLineRightColor field.
inline
Color4f &MultiColorMatteBorderBase::getTopLineRightColor(void)
{
    return _sfTopLineRightColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfTopLineRightColor field.
inline
const Color4f &MultiColorMatteBorderBase::getTopLineRightColor(void) const
{
    return _sfTopLineRightColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfTopLineRightColor field.
inline
void MultiColorMatteBorderBase::setTopLineRightColor(const Color4f &value)
{
    _sfTopLineRightColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfRightLineTopColor field.
inline
Color4f &MultiColorMatteBorderBase::getRightLineTopColor(void)
{
    return _sfRightLineTopColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfRightLineTopColor field.
inline
const Color4f &MultiColorMatteBorderBase::getRightLineTopColor(void) const
{
    return _sfRightLineTopColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfRightLineTopColor field.
inline
void MultiColorMatteBorderBase::setRightLineTopColor(const Color4f &value)
{
    _sfRightLineTopColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfRightLineBottomColor field.
inline
Color4f &MultiColorMatteBorderBase::getRightLineBottomColor(void)
{
    return _sfRightLineBottomColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfRightLineBottomColor field.
inline
const Color4f &MultiColorMatteBorderBase::getRightLineBottomColor(void) const
{
    return _sfRightLineBottomColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfRightLineBottomColor field.
inline
void MultiColorMatteBorderBase::setRightLineBottomColor(const Color4f &value)
{
    _sfRightLineBottomColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfBottomLineLeftColor field.
inline
Color4f &MultiColorMatteBorderBase::getBottomLineLeftColor(void)
{
    return _sfBottomLineLeftColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfBottomLineLeftColor field.
inline
const Color4f &MultiColorMatteBorderBase::getBottomLineLeftColor(void) const
{
    return _sfBottomLineLeftColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfBottomLineLeftColor field.
inline
void MultiColorMatteBorderBase::setBottomLineLeftColor(const Color4f &value)
{
    _sfBottomLineLeftColor.setValue(value);
}

//! Get the value of the MultiColorMatteBorder::_sfBottomLineRightColor field.
inline
Color4f &MultiColorMatteBorderBase::getBottomLineRightColor(void)
{
    return _sfBottomLineRightColor.getValue();
}

//! Get the value of the MultiColorMatteBorder::_sfBottomLineRightColor field.
inline
const Color4f &MultiColorMatteBorderBase::getBottomLineRightColor(void) const
{
    return _sfBottomLineRightColor.getValue();
}

//! Set the value of the MultiColorMatteBorder::_sfBottomLineRightColor field.
inline
void MultiColorMatteBorderBase::setBottomLineRightColor(const Color4f &value)
{
    _sfBottomLineRightColor.setValue(value);
}


OSG_END_NAMESPACE

#define OSGMULTICOLORMATTEBORDERBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

