/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DefaultListComponentGenerator!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &DefaultListComponentGeneratorBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 DefaultListComponentGeneratorBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
DefaultListComponentGeneratorPtr DefaultListComponentGeneratorBase::create(void) 
{
    DefaultListComponentGeneratorPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = DefaultListComponentGeneratorPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
DefaultListComponentGeneratorPtr DefaultListComponentGeneratorBase::createEmpty(void) 
{ 
    DefaultListComponentGeneratorPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the DefaultListComponentGenerator::_sfDrawObjectPrototype field.
inline
SFComponentPtr *DefaultListComponentGeneratorBase::getSFDrawObjectPrototype(void)
{
    return &_sfDrawObjectPrototype;
}

//! Get the DefaultListComponentGenerator::_sfSelectedBackground field.
inline
SFUIBackgroundPtr *DefaultListComponentGeneratorBase::getSFSelectedBackground(void)
{
    return &_sfSelectedBackground;
}

//! Get the DefaultListComponentGenerator::_sfFocusedBackground field.
inline
SFUIBackgroundPtr *DefaultListComponentGeneratorBase::getSFFocusedBackground(void)
{
    return &_sfFocusedBackground;
}

//! Get the DefaultListComponentGenerator::_sfSelectedBorder field.
inline
SFBorderPtr *DefaultListComponentGeneratorBase::getSFSelectedBorder(void)
{
    return &_sfSelectedBorder;
}

//! Get the DefaultListComponentGenerator::_sfFocusedBorder field.
inline
SFBorderPtr *DefaultListComponentGeneratorBase::getSFFocusedBorder(void)
{
    return &_sfFocusedBorder;
}

//! Get the DefaultListComponentGenerator::_sfSelectedTextColor field.
inline
SFColor4f *DefaultListComponentGeneratorBase::getSFSelectedTextColor(void)
{
    return &_sfSelectedTextColor;
}

//! Get the DefaultListComponentGenerator::_sfFocusedTextColor field.
inline
SFColor4f *DefaultListComponentGeneratorBase::getSFFocusedTextColor(void)
{
    return &_sfFocusedTextColor;
}

//! Get the DefaultListComponentGenerator::_sfFocusedTextColorHasPriority field.
inline
SFBool *DefaultListComponentGeneratorBase::getSFFocusedTextColorHasPriority(void)
{
    return &_sfFocusedTextColorHasPriority;
}

//! Get the DefaultListComponentGenerator::_sfFocusedBorderHasPriority field.
inline
SFBool *DefaultListComponentGeneratorBase::getSFFocusedBorderHasPriority(void)
{
    return &_sfFocusedBorderHasPriority;
}

//! Get the DefaultListComponentGenerator::_sfFocusedBackgroundHasPriority field.
inline
SFBool *DefaultListComponentGeneratorBase::getSFFocusedBackgroundHasPriority(void)
{
    return &_sfFocusedBackgroundHasPriority;
}


//! Get the value of the DefaultListComponentGenerator::_sfDrawObjectPrototype field.
inline
ComponentPtr &DefaultListComponentGeneratorBase::getDrawObjectPrototype(void)
{
    return _sfDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfDrawObjectPrototype field.
inline
const ComponentPtr &DefaultListComponentGeneratorBase::getDrawObjectPrototype(void) const
{
    return _sfDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfDrawObjectPrototype field.
inline
void DefaultListComponentGeneratorBase::setDrawObjectPrototype(const ComponentPtr &value)
{
    _sfDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedBackground field.
inline
UIBackgroundPtr &DefaultListComponentGeneratorBase::getSelectedBackground(void)
{
    return _sfSelectedBackground.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedBackground field.
inline
const UIBackgroundPtr &DefaultListComponentGeneratorBase::getSelectedBackground(void) const
{
    return _sfSelectedBackground.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfSelectedBackground field.
inline
void DefaultListComponentGeneratorBase::setSelectedBackground(const UIBackgroundPtr &value)
{
    _sfSelectedBackground.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBackground field.
inline
UIBackgroundPtr &DefaultListComponentGeneratorBase::getFocusedBackground(void)
{
    return _sfFocusedBackground.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBackground field.
inline
const UIBackgroundPtr &DefaultListComponentGeneratorBase::getFocusedBackground(void) const
{
    return _sfFocusedBackground.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedBackground field.
inline
void DefaultListComponentGeneratorBase::setFocusedBackground(const UIBackgroundPtr &value)
{
    _sfFocusedBackground.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedBorder field.
inline
BorderPtr &DefaultListComponentGeneratorBase::getSelectedBorder(void)
{
    return _sfSelectedBorder.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedBorder field.
inline
const BorderPtr &DefaultListComponentGeneratorBase::getSelectedBorder(void) const
{
    return _sfSelectedBorder.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfSelectedBorder field.
inline
void DefaultListComponentGeneratorBase::setSelectedBorder(const BorderPtr &value)
{
    _sfSelectedBorder.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBorder field.
inline
BorderPtr &DefaultListComponentGeneratorBase::getFocusedBorder(void)
{
    return _sfFocusedBorder.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBorder field.
inline
const BorderPtr &DefaultListComponentGeneratorBase::getFocusedBorder(void) const
{
    return _sfFocusedBorder.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedBorder field.
inline
void DefaultListComponentGeneratorBase::setFocusedBorder(const BorderPtr &value)
{
    _sfFocusedBorder.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedTextColor field.
inline
Color4f &DefaultListComponentGeneratorBase::getSelectedTextColor(void)
{
    return _sfSelectedTextColor.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfSelectedTextColor field.
inline
const Color4f &DefaultListComponentGeneratorBase::getSelectedTextColor(void) const
{
    return _sfSelectedTextColor.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfSelectedTextColor field.
inline
void DefaultListComponentGeneratorBase::setSelectedTextColor(const Color4f &value)
{
    _sfSelectedTextColor.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedTextColor field.
inline
Color4f &DefaultListComponentGeneratorBase::getFocusedTextColor(void)
{
    return _sfFocusedTextColor.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedTextColor field.
inline
const Color4f &DefaultListComponentGeneratorBase::getFocusedTextColor(void) const
{
    return _sfFocusedTextColor.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedTextColor field.
inline
void DefaultListComponentGeneratorBase::setFocusedTextColor(const Color4f &value)
{
    _sfFocusedTextColor.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedTextColorHasPriority field.
inline
bool &DefaultListComponentGeneratorBase::getFocusedTextColorHasPriority(void)
{
    return _sfFocusedTextColorHasPriority.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedTextColorHasPriority field.
inline
const bool &DefaultListComponentGeneratorBase::getFocusedTextColorHasPriority(void) const
{
    return _sfFocusedTextColorHasPriority.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedTextColorHasPriority field.
inline
void DefaultListComponentGeneratorBase::setFocusedTextColorHasPriority(const bool &value)
{
    _sfFocusedTextColorHasPriority.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBorderHasPriority field.
inline
bool &DefaultListComponentGeneratorBase::getFocusedBorderHasPriority(void)
{
    return _sfFocusedBorderHasPriority.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBorderHasPriority field.
inline
const bool &DefaultListComponentGeneratorBase::getFocusedBorderHasPriority(void) const
{
    return _sfFocusedBorderHasPriority.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedBorderHasPriority field.
inline
void DefaultListComponentGeneratorBase::setFocusedBorderHasPriority(const bool &value)
{
    _sfFocusedBorderHasPriority.setValue(value);
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBackgroundHasPriority field.
inline
bool &DefaultListComponentGeneratorBase::getFocusedBackgroundHasPriority(void)
{
    return _sfFocusedBackgroundHasPriority.getValue();
}

//! Get the value of the DefaultListComponentGenerator::_sfFocusedBackgroundHasPriority field.
inline
const bool &DefaultListComponentGeneratorBase::getFocusedBackgroundHasPriority(void) const
{
    return _sfFocusedBackgroundHasPriority.getValue();
}

//! Set the value of the DefaultListComponentGenerator::_sfFocusedBackgroundHasPriority field.
inline
void DefaultListComponentGeneratorBase::setFocusedBackgroundHasPriority(const bool &value)
{
    _sfFocusedBackgroundHasPriority.setValue(value);
}


OSG_END_NAMESPACE

#define OSGDEFAULTLISTCOMPONENTGENERATORBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

