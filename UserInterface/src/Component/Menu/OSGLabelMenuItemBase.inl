/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LabelMenuItem!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LabelMenuItemBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LabelMenuItemBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
LabelMenuItemPtr LabelMenuItemBase::create(void) 
{
    LabelMenuItemPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = LabelMenuItemPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
LabelMenuItemPtr LabelMenuItemBase::createEmpty(void) 
{ 
    LabelMenuItemPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the LabelMenuItem::_sfFont field.
inline
SFUIFontPtr *LabelMenuItemBase::getSFFont(void)
{
    return &_sfFont;
}

//! Get the LabelMenuItem::_sfText field.
inline
SFString *LabelMenuItemBase::getSFText(void)
{
    return &_sfText;
}

//! Get the LabelMenuItem::_sfAcceleratorModifiers field.
inline
SFUInt32 *LabelMenuItemBase::getSFAcceleratorModifiers(void)
{
    return &_sfAcceleratorModifiers;
}

//! Get the LabelMenuItem::_sfAcceleratorKey field.
inline
SFUInt32 *LabelMenuItemBase::getSFAcceleratorKey(void)
{
    return &_sfAcceleratorKey;
}

//! Get the LabelMenuItem::_sfMnemonicKey field.
inline
SFUInt32 *LabelMenuItemBase::getSFMnemonicKey(void)
{
    return &_sfMnemonicKey;
}

//! Get the LabelMenuItem::_sfSelectedBorder field.
inline
SFBorderPtr *LabelMenuItemBase::getSFSelectedBorder(void)
{
    return &_sfSelectedBorder;
}

//! Get the LabelMenuItem::_sfSelectedBackground field.
inline
SFUIBackgroundPtr *LabelMenuItemBase::getSFSelectedBackground(void)
{
    return &_sfSelectedBackground;
}

//! Get the LabelMenuItem::_sfSelectedTextColor field.
inline
SFColor4f *LabelMenuItemBase::getSFSelectedTextColor(void)
{
    return &_sfSelectedTextColor;
}

//! Get the LabelMenuItem::_sfFocusedTextColor field.
inline
SFColor4f *LabelMenuItemBase::getSFFocusedTextColor(void)
{
    return &_sfFocusedTextColor;
}

//! Get the LabelMenuItem::_sfRolloverTextColor field.
inline
SFColor4f *LabelMenuItemBase::getSFRolloverTextColor(void)
{
    return &_sfRolloverTextColor;
}

//! Get the LabelMenuItem::_sfDisabledTextColor field.
inline
SFColor4f *LabelMenuItemBase::getSFDisabledTextColor(void)
{
    return &_sfDisabledTextColor;
}

//! Get the LabelMenuItem::_sfTextColor field.
inline
SFColor4f *LabelMenuItemBase::getSFTextColor(void)
{
    return &_sfTextColor;
}

//! Get the LabelMenuItem::_sfAcceleratorText field.
inline
SFString *LabelMenuItemBase::getSFAcceleratorText(void)
{
    return &_sfAcceleratorText;
}

//! Get the LabelMenuItem::_sfMnemonicTextPosition field.
inline
SFInt32 *LabelMenuItemBase::getSFMnemonicTextPosition(void)
{
    return &_sfMnemonicTextPosition;
}


//! Get the value of the LabelMenuItem::_sfFont field.
inline
UIFontPtr &LabelMenuItemBase::getFont(void)
{
    return _sfFont.getValue();
}

//! Get the value of the LabelMenuItem::_sfFont field.
inline
const UIFontPtr &LabelMenuItemBase::getFont(void) const
{
    return _sfFont.getValue();
}

//! Set the value of the LabelMenuItem::_sfFont field.
inline
void LabelMenuItemBase::setFont(const UIFontPtr &value)
{
    _sfFont.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfText field.
inline
std::string &LabelMenuItemBase::getText(void)
{
    return _sfText.getValue();
}

//! Get the value of the LabelMenuItem::_sfText field.
inline
const std::string &LabelMenuItemBase::getText(void) const
{
    return _sfText.getValue();
}

//! Set the value of the LabelMenuItem::_sfText field.
inline
void LabelMenuItemBase::setText(const std::string &value)
{
    _sfText.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfAcceleratorModifiers field.
inline
UInt32 &LabelMenuItemBase::getAcceleratorModifiers(void)
{
    return _sfAcceleratorModifiers.getValue();
}

//! Get the value of the LabelMenuItem::_sfAcceleratorModifiers field.
inline
const UInt32 &LabelMenuItemBase::getAcceleratorModifiers(void) const
{
    return _sfAcceleratorModifiers.getValue();
}

//! Set the value of the LabelMenuItem::_sfAcceleratorModifiers field.
inline
void LabelMenuItemBase::setAcceleratorModifiers(const UInt32 &value)
{
    _sfAcceleratorModifiers.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfAcceleratorKey field.
inline
UInt32 &LabelMenuItemBase::getAcceleratorKey(void)
{
    return _sfAcceleratorKey.getValue();
}

//! Get the value of the LabelMenuItem::_sfAcceleratorKey field.
inline
const UInt32 &LabelMenuItemBase::getAcceleratorKey(void) const
{
    return _sfAcceleratorKey.getValue();
}

//! Set the value of the LabelMenuItem::_sfAcceleratorKey field.
inline
void LabelMenuItemBase::setAcceleratorKey(const UInt32 &value)
{
    _sfAcceleratorKey.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfMnemonicKey field.
inline
UInt32 &LabelMenuItemBase::getMnemonicKey(void)
{
    return _sfMnemonicKey.getValue();
}

//! Get the value of the LabelMenuItem::_sfMnemonicKey field.
inline
const UInt32 &LabelMenuItemBase::getMnemonicKey(void) const
{
    return _sfMnemonicKey.getValue();
}

//! Set the value of the LabelMenuItem::_sfMnemonicKey field.
inline
void LabelMenuItemBase::setMnemonicKey(const UInt32 &value)
{
    _sfMnemonicKey.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfSelectedBorder field.
inline
BorderPtr &LabelMenuItemBase::getSelectedBorder(void)
{
    return _sfSelectedBorder.getValue();
}

//! Get the value of the LabelMenuItem::_sfSelectedBorder field.
inline
const BorderPtr &LabelMenuItemBase::getSelectedBorder(void) const
{
    return _sfSelectedBorder.getValue();
}

//! Set the value of the LabelMenuItem::_sfSelectedBorder field.
inline
void LabelMenuItemBase::setSelectedBorder(const BorderPtr &value)
{
    _sfSelectedBorder.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfSelectedBackground field.
inline
UIBackgroundPtr &LabelMenuItemBase::getSelectedBackground(void)
{
    return _sfSelectedBackground.getValue();
}

//! Get the value of the LabelMenuItem::_sfSelectedBackground field.
inline
const UIBackgroundPtr &LabelMenuItemBase::getSelectedBackground(void) const
{
    return _sfSelectedBackground.getValue();
}

//! Set the value of the LabelMenuItem::_sfSelectedBackground field.
inline
void LabelMenuItemBase::setSelectedBackground(const UIBackgroundPtr &value)
{
    _sfSelectedBackground.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfSelectedTextColor field.
inline
Color4f &LabelMenuItemBase::getSelectedTextColor(void)
{
    return _sfSelectedTextColor.getValue();
}

//! Get the value of the LabelMenuItem::_sfSelectedTextColor field.
inline
const Color4f &LabelMenuItemBase::getSelectedTextColor(void) const
{
    return _sfSelectedTextColor.getValue();
}

//! Set the value of the LabelMenuItem::_sfSelectedTextColor field.
inline
void LabelMenuItemBase::setSelectedTextColor(const Color4f &value)
{
    _sfSelectedTextColor.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfFocusedTextColor field.
inline
Color4f &LabelMenuItemBase::getFocusedTextColor(void)
{
    return _sfFocusedTextColor.getValue();
}

//! Get the value of the LabelMenuItem::_sfFocusedTextColor field.
inline
const Color4f &LabelMenuItemBase::getFocusedTextColor(void) const
{
    return _sfFocusedTextColor.getValue();
}

//! Set the value of the LabelMenuItem::_sfFocusedTextColor field.
inline
void LabelMenuItemBase::setFocusedTextColor(const Color4f &value)
{
    _sfFocusedTextColor.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfRolloverTextColor field.
inline
Color4f &LabelMenuItemBase::getRolloverTextColor(void)
{
    return _sfRolloverTextColor.getValue();
}

//! Get the value of the LabelMenuItem::_sfRolloverTextColor field.
inline
const Color4f &LabelMenuItemBase::getRolloverTextColor(void) const
{
    return _sfRolloverTextColor.getValue();
}

//! Set the value of the LabelMenuItem::_sfRolloverTextColor field.
inline
void LabelMenuItemBase::setRolloverTextColor(const Color4f &value)
{
    _sfRolloverTextColor.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfDisabledTextColor field.
inline
Color4f &LabelMenuItemBase::getDisabledTextColor(void)
{
    return _sfDisabledTextColor.getValue();
}

//! Get the value of the LabelMenuItem::_sfDisabledTextColor field.
inline
const Color4f &LabelMenuItemBase::getDisabledTextColor(void) const
{
    return _sfDisabledTextColor.getValue();
}

//! Set the value of the LabelMenuItem::_sfDisabledTextColor field.
inline
void LabelMenuItemBase::setDisabledTextColor(const Color4f &value)
{
    _sfDisabledTextColor.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfTextColor field.
inline
Color4f &LabelMenuItemBase::getTextColor(void)
{
    return _sfTextColor.getValue();
}

//! Get the value of the LabelMenuItem::_sfTextColor field.
inline
const Color4f &LabelMenuItemBase::getTextColor(void) const
{
    return _sfTextColor.getValue();
}

//! Set the value of the LabelMenuItem::_sfTextColor field.
inline
void LabelMenuItemBase::setTextColor(const Color4f &value)
{
    _sfTextColor.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfAcceleratorText field.
inline
std::string &LabelMenuItemBase::getAcceleratorText(void)
{
    return _sfAcceleratorText.getValue();
}

//! Get the value of the LabelMenuItem::_sfAcceleratorText field.
inline
const std::string &LabelMenuItemBase::getAcceleratorText(void) const
{
    return _sfAcceleratorText.getValue();
}

//! Set the value of the LabelMenuItem::_sfAcceleratorText field.
inline
void LabelMenuItemBase::setAcceleratorText(const std::string &value)
{
    _sfAcceleratorText.setValue(value);
}

//! Get the value of the LabelMenuItem::_sfMnemonicTextPosition field.
inline
Int32 &LabelMenuItemBase::getMnemonicTextPosition(void)
{
    return _sfMnemonicTextPosition.getValue();
}

//! Get the value of the LabelMenuItem::_sfMnemonicTextPosition field.
inline
const Int32 &LabelMenuItemBase::getMnemonicTextPosition(void) const
{
    return _sfMnemonicTextPosition.getValue();
}

//! Set the value of the LabelMenuItem::_sfMnemonicTextPosition field.
inline
void LabelMenuItemBase::setMnemonicTextPosition(const Int32 &value)
{
    _sfMnemonicTextPosition.setValue(value);
}


OSG_END_NAMESPACE

#define OSGLABELMENUITEMBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

