/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RadioButton!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>
#include "OSGUserInterfaceDef.h"
OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &RadioButtonBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 RadioButtonBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
RadioButtonPtr RadioButtonBase::create(void) 
{
    RadioButtonPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = RadioButtonPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
RadioButtonPtr RadioButtonBase::createEmpty(void) 
{ 
    RadioButtonPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the RadioButton::_sfDrawObject field.
inline
SFUIDrawObjectCanvasPtr *RadioButtonBase::getSFDrawObject(void)
{
    return &_sfDrawObject;
}

//! Get the RadioButton::_sfCheckedDrawObject field.
inline
SFUIDrawObjectCanvasPtr *RadioButtonBase::getSFCheckedDrawObject(void)
{
    return &_sfCheckedDrawObject;
}

//! Get the RadioButton::_sfActiveDrawObject field.
inline
SFUIDrawObjectCanvasPtr *RadioButtonBase::getSFActiveDrawObject(void)
{
    return &_sfActiveDrawObject;
}

//! Get the RadioButton::_sfActiveCheckedDrawObject field.
inline
SFUIDrawObjectCanvasPtr *RadioButtonBase::getSFActiveCheckedDrawObject(void)
{
    return &_sfActiveCheckedDrawObject;
}

//! Get the RadioButton::_sfChecked field.
inline
SFBool *RadioButtonBase::getSFChecked(void)
{
    return &_sfChecked;
}


//! Get the value of the RadioButton::_sfDrawObject field.
inline
UIDrawObjectCanvasPtr &RadioButtonBase::getDrawObject(void)
{
    return _sfDrawObject.getValue();
}

//! Get the value of the RadioButton::_sfDrawObject field.
inline
const UIDrawObjectCanvasPtr &RadioButtonBase::getDrawObject(void) const
{
    return _sfDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfDrawObject field.
inline
void RadioButtonBase::setDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfCheckedDrawObject field.
inline
UIDrawObjectCanvasPtr &RadioButtonBase::getCheckedDrawObject(void)
{
    return _sfCheckedDrawObject.getValue();
}

//! Get the value of the RadioButton::_sfCheckedDrawObject field.
inline
const UIDrawObjectCanvasPtr &RadioButtonBase::getCheckedDrawObject(void) const
{
    return _sfCheckedDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfCheckedDrawObject field.
inline
void RadioButtonBase::setCheckedDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfCheckedDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfActiveDrawObject field.
inline
UIDrawObjectCanvasPtr &RadioButtonBase::getActiveDrawObject(void)
{
    return _sfActiveDrawObject.getValue();
}

//! Get the value of the RadioButton::_sfActiveDrawObject field.
inline
const UIDrawObjectCanvasPtr &RadioButtonBase::getActiveDrawObject(void) const
{
    return _sfActiveDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfActiveDrawObject field.
inline
void RadioButtonBase::setActiveDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfActiveDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfActiveCheckedDrawObject field.
inline
UIDrawObjectCanvasPtr &RadioButtonBase::getActiveCheckedDrawObject(void)
{
    return _sfActiveCheckedDrawObject.getValue();
}

//! Get the value of the RadioButton::_sfActiveCheckedDrawObject field.
inline
const UIDrawObjectCanvasPtr &RadioButtonBase::getActiveCheckedDrawObject(void) const
{
    return _sfActiveCheckedDrawObject.getValue();
}

//! Set the value of the RadioButton::_sfActiveCheckedDrawObject field.
inline
void RadioButtonBase::setActiveCheckedDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfActiveCheckedDrawObject.setValue(value);
}

//! Get the value of the RadioButton::_sfChecked field.
inline
bool &RadioButtonBase::getChecked(void)
{
    return _sfChecked.getValue();
}

//! Get the value of the RadioButton::_sfChecked field.
inline
const bool &RadioButtonBase::getChecked(void) const
{
    return _sfChecked.getValue();
}

//! Set the value of the RadioButton::_sfChecked field.
inline
void RadioButtonBase::setChecked(const bool &value)
{
    _sfChecked.setValue(value);
}


OSG_END_NAMESPACE

#define OSGRADIOBUTTONBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

