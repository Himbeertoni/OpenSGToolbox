/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DefaultTreeComponentGenerator!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &DefaultTreeComponentGeneratorBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 DefaultTreeComponentGeneratorBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
DefaultTreeComponentGeneratorPtr DefaultTreeComponentGeneratorBase::create(void) 
{
    DefaultTreeComponentGeneratorPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = DefaultTreeComponentGeneratorPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
DefaultTreeComponentGeneratorPtr DefaultTreeComponentGeneratorBase::createEmpty(void) 
{ 
    DefaultTreeComponentGeneratorPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the DefaultTreeComponentGenerator::_sfExpandedDrawObjectPrototype field.
inline
SFUIDrawObjectCanvasPtr *DefaultTreeComponentGeneratorBase::getSFExpandedDrawObjectPrototype(void)
{
    return &_sfExpandedDrawObjectPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfNotExpandedDrawObjectPrototype field.
inline
SFUIDrawObjectCanvasPtr *DefaultTreeComponentGeneratorBase::getSFNotExpandedDrawObjectPrototype(void)
{
    return &_sfNotExpandedDrawObjectPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfLeafDrawObjectPrototype field.
inline
SFUIDrawObjectCanvasPtr *DefaultTreeComponentGeneratorBase::getSFLeafDrawObjectPrototype(void)
{
    return &_sfLeafDrawObjectPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfNonLeafDrawObjectPrototype field.
inline
SFUIDrawObjectCanvasPtr *DefaultTreeComponentGeneratorBase::getSFNonLeafDrawObjectPrototype(void)
{
    return &_sfNonLeafDrawObjectPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfExpandedNonLeafDrawObjectPrototype field.
inline
SFUIDrawObjectCanvasPtr *DefaultTreeComponentGeneratorBase::getSFExpandedNonLeafDrawObjectPrototype(void)
{
    return &_sfExpandedNonLeafDrawObjectPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfNodeLabelPrototype field.
inline
SFLabelPtr *DefaultTreeComponentGeneratorBase::getSFNodeLabelPrototype(void)
{
    return &_sfNodeLabelPrototype;
}

//! Get the DefaultTreeComponentGenerator::_sfSelectedBackground field.
inline
SFUIBackgroundPtr *DefaultTreeComponentGeneratorBase::getSFSelectedBackground(void)
{
    return &_sfSelectedBackground;
}

//! Get the DefaultTreeComponentGenerator::_sfNonSelectedBackground field.
inline
SFUIBackgroundPtr *DefaultTreeComponentGeneratorBase::getSFNonSelectedBackground(void)
{
    return &_sfNonSelectedBackground;
}

//! Get the DefaultTreeComponentGenerator::_sfSelectedBorder field.
inline
SFBorderPtr *DefaultTreeComponentGeneratorBase::getSFSelectedBorder(void)
{
    return &_sfSelectedBorder;
}

//! Get the DefaultTreeComponentGenerator::_sfSelectedTextColor field.
inline
SFColor4f *DefaultTreeComponentGeneratorBase::getSFSelectedTextColor(void)
{
    return &_sfSelectedTextColor;
}

//! Get the DefaultTreeComponentGenerator::_sfNonSelectedTextColor field.
inline
SFColor4f *DefaultTreeComponentGeneratorBase::getSFNonSelectedTextColor(void)
{
    return &_sfNonSelectedTextColor;
}


//! Get the value of the DefaultTreeComponentGenerator::_sfExpandedDrawObjectPrototype field.
inline
UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getExpandedDrawObjectPrototype(void)
{
    return _sfExpandedDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfExpandedDrawObjectPrototype field.
inline
const UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getExpandedDrawObjectPrototype(void) const
{
    return _sfExpandedDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfExpandedDrawObjectPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setExpandedDrawObjectPrototype(const UIDrawObjectCanvasPtr &value)
{
    _sfExpandedDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNotExpandedDrawObjectPrototype field.
inline
UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getNotExpandedDrawObjectPrototype(void)
{
    return _sfNotExpandedDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNotExpandedDrawObjectPrototype field.
inline
const UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getNotExpandedDrawObjectPrototype(void) const
{
    return _sfNotExpandedDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfNotExpandedDrawObjectPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setNotExpandedDrawObjectPrototype(const UIDrawObjectCanvasPtr &value)
{
    _sfNotExpandedDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfLeafDrawObjectPrototype field.
inline
UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getLeafDrawObjectPrototype(void)
{
    return _sfLeafDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfLeafDrawObjectPrototype field.
inline
const UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getLeafDrawObjectPrototype(void) const
{
    return _sfLeafDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfLeafDrawObjectPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setLeafDrawObjectPrototype(const UIDrawObjectCanvasPtr &value)
{
    _sfLeafDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonLeafDrawObjectPrototype field.
inline
UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getNonLeafDrawObjectPrototype(void)
{
    return _sfNonLeafDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonLeafDrawObjectPrototype field.
inline
const UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getNonLeafDrawObjectPrototype(void) const
{
    return _sfNonLeafDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfNonLeafDrawObjectPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setNonLeafDrawObjectPrototype(const UIDrawObjectCanvasPtr &value)
{
    _sfNonLeafDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfExpandedNonLeafDrawObjectPrototype field.
inline
UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getExpandedNonLeafDrawObjectPrototype(void)
{
    return _sfExpandedNonLeafDrawObjectPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfExpandedNonLeafDrawObjectPrototype field.
inline
const UIDrawObjectCanvasPtr &DefaultTreeComponentGeneratorBase::getExpandedNonLeafDrawObjectPrototype(void) const
{
    return _sfExpandedNonLeafDrawObjectPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfExpandedNonLeafDrawObjectPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setExpandedNonLeafDrawObjectPrototype(const UIDrawObjectCanvasPtr &value)
{
    _sfExpandedNonLeafDrawObjectPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNodeLabelPrototype field.
inline
LabelPtr &DefaultTreeComponentGeneratorBase::getNodeLabelPrototype(void)
{
    return _sfNodeLabelPrototype.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNodeLabelPrototype field.
inline
const LabelPtr &DefaultTreeComponentGeneratorBase::getNodeLabelPrototype(void) const
{
    return _sfNodeLabelPrototype.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfNodeLabelPrototype field.
inline
void DefaultTreeComponentGeneratorBase::setNodeLabelPrototype(const LabelPtr &value)
{
    _sfNodeLabelPrototype.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedBackground field.
inline
UIBackgroundPtr &DefaultTreeComponentGeneratorBase::getSelectedBackground(void)
{
    return _sfSelectedBackground.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedBackground field.
inline
const UIBackgroundPtr &DefaultTreeComponentGeneratorBase::getSelectedBackground(void) const
{
    return _sfSelectedBackground.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfSelectedBackground field.
inline
void DefaultTreeComponentGeneratorBase::setSelectedBackground(const UIBackgroundPtr &value)
{
    _sfSelectedBackground.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonSelectedBackground field.
inline
UIBackgroundPtr &DefaultTreeComponentGeneratorBase::getNonSelectedBackground(void)
{
    return _sfNonSelectedBackground.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonSelectedBackground field.
inline
const UIBackgroundPtr &DefaultTreeComponentGeneratorBase::getNonSelectedBackground(void) const
{
    return _sfNonSelectedBackground.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfNonSelectedBackground field.
inline
void DefaultTreeComponentGeneratorBase::setNonSelectedBackground(const UIBackgroundPtr &value)
{
    _sfNonSelectedBackground.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedBorder field.
inline
BorderPtr &DefaultTreeComponentGeneratorBase::getSelectedBorder(void)
{
    return _sfSelectedBorder.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedBorder field.
inline
const BorderPtr &DefaultTreeComponentGeneratorBase::getSelectedBorder(void) const
{
    return _sfSelectedBorder.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfSelectedBorder field.
inline
void DefaultTreeComponentGeneratorBase::setSelectedBorder(const BorderPtr &value)
{
    _sfSelectedBorder.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedTextColor field.
inline
Color4f &DefaultTreeComponentGeneratorBase::getSelectedTextColor(void)
{
    return _sfSelectedTextColor.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfSelectedTextColor field.
inline
const Color4f &DefaultTreeComponentGeneratorBase::getSelectedTextColor(void) const
{
    return _sfSelectedTextColor.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfSelectedTextColor field.
inline
void DefaultTreeComponentGeneratorBase::setSelectedTextColor(const Color4f &value)
{
    _sfSelectedTextColor.setValue(value);
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonSelectedTextColor field.
inline
Color4f &DefaultTreeComponentGeneratorBase::getNonSelectedTextColor(void)
{
    return _sfNonSelectedTextColor.getValue();
}

//! Get the value of the DefaultTreeComponentGenerator::_sfNonSelectedTextColor field.
inline
const Color4f &DefaultTreeComponentGeneratorBase::getNonSelectedTextColor(void) const
{
    return _sfNonSelectedTextColor.getValue();
}

//! Set the value of the DefaultTreeComponentGenerator::_sfNonSelectedTextColor field.
inline
void DefaultTreeComponentGeneratorBase::setNonSelectedTextColor(const Color4f &value)
{
    _sfNonSelectedTextColor.setValue(value);
}


OSG_END_NAMESPACE

#define OSGDEFAULTTREECOMPONENTGENERATORBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

