/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LookAndFeel!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LookAndFeelBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LookAndFeelBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 


/*------------------------------ get -----------------------------------*/

//! Get the LookAndFeel::_mfPrototypes field.
inline
MFFieldContainerPtr *LookAndFeelBase::getMFPrototypes(void)
{
    return &_mfPrototypes;
}

//! Get the LookAndFeel::_sfTextCaretRate field.
inline
SFTime *LookAndFeelBase::getSFTextCaretRate(void)
{
    return &_sfTextCaretRate;
}

//! Get the LookAndFeel::_sfToolTipPopupTime field.
inline
SFTime *LookAndFeelBase::getSFToolTipPopupTime(void)
{
    return &_sfToolTipPopupTime;
}

//! Get the LookAndFeel::_sfSubMenuPopupTime field.
inline
SFTime *LookAndFeelBase::getSFSubMenuPopupTime(void)
{
    return &_sfSubMenuPopupTime;
}

//! Get the LookAndFeel::_sfKeyAcceleratorMenuFlashTime field.
inline
SFTime *LookAndFeelBase::getSFKeyAcceleratorMenuFlashTime(void)
{
    return &_sfKeyAcceleratorMenuFlashTime;
}


//! Get the value of the LookAndFeel::_sfTextCaretRate field.
inline
Time &LookAndFeelBase::getTextCaretRate(void)
{
    return _sfTextCaretRate.getValue();
}

//! Get the value of the LookAndFeel::_sfTextCaretRate field.
inline
const Time &LookAndFeelBase::getTextCaretRate(void) const
{
    return _sfTextCaretRate.getValue();
}

//! Set the value of the LookAndFeel::_sfTextCaretRate field.
inline
void LookAndFeelBase::setTextCaretRate(const Time &value)
{
    _sfTextCaretRate.setValue(value);
}

//! Get the value of the LookAndFeel::_sfToolTipPopupTime field.
inline
Time &LookAndFeelBase::getToolTipPopupTime(void)
{
    return _sfToolTipPopupTime.getValue();
}

//! Get the value of the LookAndFeel::_sfToolTipPopupTime field.
inline
const Time &LookAndFeelBase::getToolTipPopupTime(void) const
{
    return _sfToolTipPopupTime.getValue();
}

//! Set the value of the LookAndFeel::_sfToolTipPopupTime field.
inline
void LookAndFeelBase::setToolTipPopupTime(const Time &value)
{
    _sfToolTipPopupTime.setValue(value);
}

//! Get the value of the LookAndFeel::_sfSubMenuPopupTime field.
inline
Time &LookAndFeelBase::getSubMenuPopupTime(void)
{
    return _sfSubMenuPopupTime.getValue();
}

//! Get the value of the LookAndFeel::_sfSubMenuPopupTime field.
inline
const Time &LookAndFeelBase::getSubMenuPopupTime(void) const
{
    return _sfSubMenuPopupTime.getValue();
}

//! Set the value of the LookAndFeel::_sfSubMenuPopupTime field.
inline
void LookAndFeelBase::setSubMenuPopupTime(const Time &value)
{
    _sfSubMenuPopupTime.setValue(value);
}

//! Get the value of the LookAndFeel::_sfKeyAcceleratorMenuFlashTime field.
inline
Time &LookAndFeelBase::getKeyAcceleratorMenuFlashTime(void)
{
    return _sfKeyAcceleratorMenuFlashTime.getValue();
}

//! Get the value of the LookAndFeel::_sfKeyAcceleratorMenuFlashTime field.
inline
const Time &LookAndFeelBase::getKeyAcceleratorMenuFlashTime(void) const
{
    return _sfKeyAcceleratorMenuFlashTime.getValue();
}

//! Set the value of the LookAndFeel::_sfKeyAcceleratorMenuFlashTime field.
inline
void LookAndFeelBase::setKeyAcceleratorMenuFlashTime(const Time &value)
{
    _sfKeyAcceleratorMenuFlashTime.setValue(value);
}


//! Get the value of the \a index element the LookAndFeel::_mfPrototypes field.
inline
FieldContainerPtr &LookAndFeelBase::getPrototypes(const UInt32 index)
{
    return _mfPrototypes[index];
}

//! Get the LookAndFeel::_mfPrototypes field.
inline
MFFieldContainerPtr &LookAndFeelBase::getPrototypes(void)
{
    return _mfPrototypes;
}

//! Get the LookAndFeel::_mfPrototypes field.
inline
const MFFieldContainerPtr &LookAndFeelBase::getPrototypes(void) const
{
    return _mfPrototypes;
}

OSG_END_NAMESPACE

#define OSGLOOKANDFEELBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

