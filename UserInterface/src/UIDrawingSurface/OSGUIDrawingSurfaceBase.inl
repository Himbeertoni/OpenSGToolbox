/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class UIDrawingSurface!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &UIDrawingSurfaceBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 UIDrawingSurfaceBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
UIDrawingSurfacePtr UIDrawingSurfaceBase::create(void) 
{
    UIDrawingSurfacePtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = UIDrawingSurfacePtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
UIDrawingSurfacePtr UIDrawingSurfaceBase::createEmpty(void) 
{ 
    UIDrawingSurfacePtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the UIDrawingSurface::_sfRootFrame field.
inline
SFFramePtr *UIDrawingSurfaceBase::getSFRootFrame(void)
{
    return &_sfRootFrame;
}

//! Get the UIDrawingSurface::_sfEventProducer field.
inline
SFWindowEventProducerPtr *UIDrawingSurfaceBase::getSFEventProducer(void)
{
    return &_sfEventProducer;
}

//! Get the UIDrawingSurface::_sfGraphics field.
inline
SFGraphicsPtr *UIDrawingSurfaceBase::getSFGraphics(void)
{
    return &_sfGraphics;
}

//! Get the UIDrawingSurface::_sfMouseTransformFunctor field.
inline
SFUIDrawingSurfaceMouseTransformFunctorPtr *UIDrawingSurfaceBase::getSFMouseTransformFunctor(void)
{
    return &_sfMouseTransformFunctor;
}


//! Get the value of the UIDrawingSurface::_sfRootFrame field.
inline
FramePtr &UIDrawingSurfaceBase::getRootFrame(void)
{
    return _sfRootFrame.getValue();
}

//! Get the value of the UIDrawingSurface::_sfRootFrame field.
inline
const FramePtr &UIDrawingSurfaceBase::getRootFrame(void) const
{
    return _sfRootFrame.getValue();
}

//! Set the value of the UIDrawingSurface::_sfRootFrame field.
inline
void UIDrawingSurfaceBase::setRootFrame(const FramePtr &value)
{
    _sfRootFrame.setValue(value);
}

//! Get the value of the UIDrawingSurface::_sfEventProducer field.
inline
WindowEventProducerPtr &UIDrawingSurfaceBase::getEventProducer(void)
{
    return _sfEventProducer.getValue();
}

//! Get the value of the UIDrawingSurface::_sfEventProducer field.
inline
const WindowEventProducerPtr &UIDrawingSurfaceBase::getEventProducer(void) const
{
    return _sfEventProducer.getValue();
}

//! Set the value of the UIDrawingSurface::_sfEventProducer field.
inline
void UIDrawingSurfaceBase::setEventProducer(const WindowEventProducerPtr &value)
{
    _sfEventProducer.setValue(value);
}

//! Get the value of the UIDrawingSurface::_sfGraphics field.
inline
GraphicsPtr &UIDrawingSurfaceBase::getGraphics(void)
{
    return _sfGraphics.getValue();
}

//! Get the value of the UIDrawingSurface::_sfGraphics field.
inline
const GraphicsPtr &UIDrawingSurfaceBase::getGraphics(void) const
{
    return _sfGraphics.getValue();
}

//! Set the value of the UIDrawingSurface::_sfGraphics field.
inline
void UIDrawingSurfaceBase::setGraphics(const GraphicsPtr &value)
{
    _sfGraphics.setValue(value);
}

//! Get the value of the UIDrawingSurface::_sfMouseTransformFunctor field.
inline
UIDrawingSurfaceMouseTransformFunctorPtr &UIDrawingSurfaceBase::getMouseTransformFunctor(void)
{
    return _sfMouseTransformFunctor.getValue();
}

//! Get the value of the UIDrawingSurface::_sfMouseTransformFunctor field.
inline
const UIDrawingSurfaceMouseTransformFunctorPtr &UIDrawingSurfaceBase::getMouseTransformFunctor(void) const
{
    return _sfMouseTransformFunctor.getValue();
}

//! Set the value of the UIDrawingSurface::_sfMouseTransformFunctor field.
inline
void UIDrawingSurfaceBase::setMouseTransformFunctor(const UIDrawingSurfaceMouseTransformFunctorPtr &value)
{
    _sfMouseTransformFunctor.setValue(value);
}


OSG_END_NAMESPACE

#define OSGUIDRAWINGSURFACEBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

