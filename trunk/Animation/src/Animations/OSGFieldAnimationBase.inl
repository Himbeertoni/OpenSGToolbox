/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FieldAnimation!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FieldAnimationBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 FieldAnimationBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
FieldAnimationPtr FieldAnimationBase::create(void) 
{
    FieldAnimationPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = FieldAnimationPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
FieldAnimationPtr FieldAnimationBase::createEmpty(void) 
{ 
    FieldAnimationPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the FieldAnimation::_sfAnimator field.
inline
SFAnimatorPtr *FieldAnimationBase::getSFAnimator(void)
{
    return &_sfAnimator;
}

//! Get the FieldAnimation::_sfContainer field.
inline
SFFieldContainerPtr *FieldAnimationBase::getSFContainer(void)
{
    return &_sfContainer;
}

//! Get the FieldAnimation::_sfFieldId field.
inline
SFUInt32 *FieldAnimationBase::getSFFieldId(void)
{
    return &_sfFieldId;
}

//! Get the FieldAnimation::_sfFieldName field.
inline
SFString *FieldAnimationBase::getSFFieldName(void)
{
    return &_sfFieldName;
}

//! Get the FieldAnimation::_sfIndex field.
inline
SFInt64 *FieldAnimationBase::getSFIndex(void)
{
    return &_sfIndex;
}

//! Get the FieldAnimation::_sfInterpolationType field.
inline
SFUInt32 *FieldAnimationBase::getSFInterpolationType(void)
{
    return &_sfInterpolationType;
}

//! Get the FieldAnimation::_sfReplacementPolicy field.
inline
SFUInt32 *FieldAnimationBase::getSFReplacementPolicy(void)
{
    return &_sfReplacementPolicy;
}


//! Get the value of the FieldAnimation::_sfAnimator field.
inline
AnimatorPtr &FieldAnimationBase::getAnimator(void)
{
    return _sfAnimator.getValue();
}

//! Get the value of the FieldAnimation::_sfAnimator field.
inline
const AnimatorPtr &FieldAnimationBase::getAnimator(void) const
{
    return _sfAnimator.getValue();
}

//! Set the value of the FieldAnimation::_sfAnimator field.
inline
void FieldAnimationBase::setAnimator(const AnimatorPtr &value)
{
    _sfAnimator.setValue(value);
}

//! Get the value of the FieldAnimation::_sfContainer field.
inline
FieldContainerPtr &FieldAnimationBase::getContainer(void)
{
    return _sfContainer.getValue();
}

//! Get the value of the FieldAnimation::_sfContainer field.
inline
const FieldContainerPtr &FieldAnimationBase::getContainer(void) const
{
    return _sfContainer.getValue();
}

//! Set the value of the FieldAnimation::_sfContainer field.
inline
void FieldAnimationBase::setContainer(const FieldContainerPtr &value)
{
    _sfContainer.setValue(value);
}

//! Get the value of the FieldAnimation::_sfFieldId field.
inline
UInt32 &FieldAnimationBase::getFieldId(void)
{
    return _sfFieldId.getValue();
}

//! Get the value of the FieldAnimation::_sfFieldId field.
inline
const UInt32 &FieldAnimationBase::getFieldId(void) const
{
    return _sfFieldId.getValue();
}

//! Set the value of the FieldAnimation::_sfFieldId field.
inline
void FieldAnimationBase::setFieldId(const UInt32 &value)
{
    _sfFieldId.setValue(value);
}

//! Get the value of the FieldAnimation::_sfFieldName field.
inline
std::string &FieldAnimationBase::getFieldName(void)
{
    return _sfFieldName.getValue();
}

//! Get the value of the FieldAnimation::_sfFieldName field.
inline
const std::string &FieldAnimationBase::getFieldName(void) const
{
    return _sfFieldName.getValue();
}

//! Set the value of the FieldAnimation::_sfFieldName field.
inline
void FieldAnimationBase::setFieldName(const std::string &value)
{
    _sfFieldName.setValue(value);
}

//! Get the value of the FieldAnimation::_sfIndex field.
inline
Int64 &FieldAnimationBase::getIndex(void)
{
    return _sfIndex.getValue();
}

//! Get the value of the FieldAnimation::_sfIndex field.
inline
const Int64 &FieldAnimationBase::getIndex(void) const
{
    return _sfIndex.getValue();
}

//! Set the value of the FieldAnimation::_sfIndex field.
inline
void FieldAnimationBase::setIndex(const Int64 &value)
{
    _sfIndex.setValue(value);
}

//! Get the value of the FieldAnimation::_sfInterpolationType field.
inline
UInt32 &FieldAnimationBase::getInterpolationType(void)
{
    return _sfInterpolationType.getValue();
}

//! Get the value of the FieldAnimation::_sfInterpolationType field.
inline
const UInt32 &FieldAnimationBase::getInterpolationType(void) const
{
    return _sfInterpolationType.getValue();
}

//! Set the value of the FieldAnimation::_sfInterpolationType field.
inline
void FieldAnimationBase::setInterpolationType(const UInt32 &value)
{
    _sfInterpolationType.setValue(value);
}

//! Get the value of the FieldAnimation::_sfReplacementPolicy field.
inline
UInt32 &FieldAnimationBase::getReplacementPolicy(void)
{
    return _sfReplacementPolicy.getValue();
}

//! Get the value of the FieldAnimation::_sfReplacementPolicy field.
inline
const UInt32 &FieldAnimationBase::getReplacementPolicy(void) const
{
    return _sfReplacementPolicy.getValue();
}

//! Set the value of the FieldAnimation::_sfReplacementPolicy field.
inline
void FieldAnimationBase::setReplacementPolicy(const UInt32 &value)
{
    _sfReplacementPolicy.setValue(value);
}


OSG_END_NAMESPACE

#define OSGFIELDANIMATIONBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

