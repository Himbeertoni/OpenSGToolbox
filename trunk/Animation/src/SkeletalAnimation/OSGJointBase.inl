/*---------------------------------------------------------------------------*\
 *                       OpenSG ToolBox Animation                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Joint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &JointBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 JointBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
JointPtr JointBase::create(void) 
{
    JointPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = JointPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
JointPtr JointBase::createEmpty(void) 
{ 
    JointPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the Joint::_sfRelativeTransformation field.
inline
SFMatrix *JointBase::getSFRelativeTransformation(void)
{
    return &_sfRelativeTransformation;
}

//! Get the Joint::_sfBindRelativeTransformation field.
inline
SFMatrix *JointBase::getSFBindRelativeTransformation(void)
{
    return &_sfBindRelativeTransformation;
}

//! Get the Joint::_mfChildJoints field.
inline
MFJointPtr *JointBase::getMFChildJoints(void)
{
    return &_mfChildJoints;
}

//! Get the Joint::_sfParentJoint field.
inline
SFJointPtr *JointBase::getSFParentJoint(void)
{
    return &_sfParentJoint;
}


//! Get the value of the Joint::_sfRelativeTransformation field.
inline
Matrix &JointBase::getRelativeTransformation(void)
{
    return _sfRelativeTransformation.getValue();
}

//! Get the value of the Joint::_sfRelativeTransformation field.
inline
const Matrix &JointBase::getRelativeTransformation(void) const
{
    return _sfRelativeTransformation.getValue();
}

//! Set the value of the Joint::_sfRelativeTransformation field.
inline
void JointBase::setRelativeTransformation(const Matrix &value)
{
    _sfRelativeTransformation.setValue(value);
}

//! Get the value of the Joint::_sfBindRelativeTransformation field.
inline
Matrix &JointBase::getBindRelativeTransformation(void)
{
    return _sfBindRelativeTransformation.getValue();
}

//! Get the value of the Joint::_sfBindRelativeTransformation field.
inline
const Matrix &JointBase::getBindRelativeTransformation(void) const
{
    return _sfBindRelativeTransformation.getValue();
}

//! Set the value of the Joint::_sfBindRelativeTransformation field.
inline
void JointBase::setBindRelativeTransformation(const Matrix &value)
{
    _sfBindRelativeTransformation.setValue(value);
}

//! Get the value of the Joint::_sfParentJoint field.
inline
JointPtr &JointBase::getParentJoint(void)
{
    return _sfParentJoint.getValue();
}

//! Get the value of the Joint::_sfParentJoint field.
inline
const JointPtr &JointBase::getParentJoint(void) const
{
    return _sfParentJoint.getValue();
}

//! Set the value of the Joint::_sfParentJoint field.
inline
void JointBase::setParentJoint(const JointPtr &value)
{
    _sfParentJoint.setValue(value);
}


//! Get the value of the \a index element the Joint::_mfChildJoints field.
inline
JointPtr &JointBase::getChildJoints(const UInt32 index)
{
    return _mfChildJoints[index];
}

//! Get the Joint::_mfChildJoints field.
inline
MFJointPtr &JointBase::getChildJoints(void)
{
    return _mfChildJoints;
}

//! Get the Joint::_mfChildJoints field.
inline
const MFJointPtr &JointBase::getChildJoints(void) const
{
    return _mfChildJoints;
}

OSG_END_NAMESPACE

#define OSGJOINTBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

