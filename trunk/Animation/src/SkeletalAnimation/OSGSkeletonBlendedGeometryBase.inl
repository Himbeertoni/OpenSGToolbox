/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkeletonBlendedGeometry!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SkeletonBlendedGeometryBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 SkeletonBlendedGeometryBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
SkeletonBlendedGeometryPtr SkeletonBlendedGeometryBase::create(void) 
{
    SkeletonBlendedGeometryPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = SkeletonBlendedGeometryPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
SkeletonBlendedGeometryPtr SkeletonBlendedGeometryBase::createEmpty(void) 
{ 
    SkeletonBlendedGeometryPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
SFGeometryPtr *SkeletonBlendedGeometryBase::getSFBaseGeometry(void)
{
    return &_sfBaseGeometry;
}

//! Get the SkeletonBlendedGeometry::_mfBones field.
inline
MFBonePtr *SkeletonBlendedGeometryBase::getMFBones(void)
{
    return &_mfBones;
}

//! Get the SkeletonBlendedGeometry::_mfPositionIndexes field.
inline
MFUInt32 *SkeletonBlendedGeometryBase::getMFPositionIndexes(void)
{
    return &_mfPositionIndexes;
}

//! Get the SkeletonBlendedGeometry::_mfBlendAmounts field.
inline
MFReal32 *SkeletonBlendedGeometryBase::getMFBlendAmounts(void)
{
    return &_mfBlendAmounts;
}

//! Get the SkeletonBlendedGeometry::_mfAttachedToEnd field.
inline
MFUInt8 *SkeletonBlendedGeometryBase::getMFAttachedToEnd(void)
{
    return &_mfAttachedToEnd;
}

//! Get the SkeletonBlendedGeometry::_mfSkeletons field.
inline
MFSkeletonPtr *SkeletonBlendedGeometryBase::getMFSkeletons(void)
{
    return &_mfSkeletons;
}

//! Get the SkeletonBlendedGeometry::_sfBlendMode field.
inline
SFUInt32 *SkeletonBlendedGeometryBase::getSFBlendMode(void)
{
    return &_sfBlendMode;
}


//! Get the value of the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
GeometryPtr &SkeletonBlendedGeometryBase::getBaseGeometry(void)
{
    return _sfBaseGeometry.getValue();
}

//! Get the value of the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
const GeometryPtr &SkeletonBlendedGeometryBase::getBaseGeometry(void) const
{
    return _sfBaseGeometry.getValue();
}

//! Set the value of the SkeletonBlendedGeometry::_sfBaseGeometry field.
inline
void SkeletonBlendedGeometryBase::setBaseGeometry(const GeometryPtr &value)
{
    _sfBaseGeometry.setValue(value);
}

//! Get the value of the SkeletonBlendedGeometry::_sfBlendMode field.
inline
UInt32 &SkeletonBlendedGeometryBase::getBlendMode(void)
{
    return _sfBlendMode.getValue();
}

//! Get the value of the SkeletonBlendedGeometry::_sfBlendMode field.
inline
const UInt32 &SkeletonBlendedGeometryBase::getBlendMode(void) const
{
    return _sfBlendMode.getValue();
}

//! Set the value of the SkeletonBlendedGeometry::_sfBlendMode field.
inline
void SkeletonBlendedGeometryBase::setBlendMode(const UInt32 &value)
{
    _sfBlendMode.setValue(value);
}


//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfBones field.
inline
BonePtr &SkeletonBlendedGeometryBase::getBones(const UInt32 index)
{
    return _mfBones[index];
}

//! Get the SkeletonBlendedGeometry::_mfBones field.
inline
MFBonePtr &SkeletonBlendedGeometryBase::getBones(void)
{
    return _mfBones;
}

//! Get the SkeletonBlendedGeometry::_mfBones field.
inline
const MFBonePtr &SkeletonBlendedGeometryBase::getBones(void) const
{
    return _mfBones;
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfPositionIndexes field.
inline
UInt32 &SkeletonBlendedGeometryBase::getPositionIndexes(const UInt32 index)
{
    return _mfPositionIndexes[index];
}

//! Get the SkeletonBlendedGeometry::_mfPositionIndexes field.
inline
MFUInt32 &SkeletonBlendedGeometryBase::getPositionIndexes(void)
{
    return _mfPositionIndexes;
}

//! Get the SkeletonBlendedGeometry::_mfPositionIndexes field.
inline
const MFUInt32 &SkeletonBlendedGeometryBase::getPositionIndexes(void) const
{
    return _mfPositionIndexes;
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfBlendAmounts field.
inline
Real32 &SkeletonBlendedGeometryBase::getBlendAmounts(const UInt32 index)
{
    return _mfBlendAmounts[index];
}

//! Get the SkeletonBlendedGeometry::_mfBlendAmounts field.
inline
MFReal32 &SkeletonBlendedGeometryBase::getBlendAmounts(void)
{
    return _mfBlendAmounts;
}

//! Get the SkeletonBlendedGeometry::_mfBlendAmounts field.
inline
const MFReal32 &SkeletonBlendedGeometryBase::getBlendAmounts(void) const
{
    return _mfBlendAmounts;
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfAttachedToEnd field.
inline
UInt8 &SkeletonBlendedGeometryBase::getAttachedToEnd(const UInt32 index)
{
    return _mfAttachedToEnd[index];
}

//! Get the SkeletonBlendedGeometry::_mfAttachedToEnd field.
inline
MFUInt8 &SkeletonBlendedGeometryBase::getAttachedToEnd(void)
{
    return _mfAttachedToEnd;
}

//! Get the SkeletonBlendedGeometry::_mfAttachedToEnd field.
inline
const MFUInt8 &SkeletonBlendedGeometryBase::getAttachedToEnd(void) const
{
    return _mfAttachedToEnd;
}

//! Get the value of the \a index element the SkeletonBlendedGeometry::_mfSkeletons field.
inline
SkeletonPtr &SkeletonBlendedGeometryBase::getSkeletons(const UInt32 index)
{
    return _mfSkeletons[index];
}

//! Get the SkeletonBlendedGeometry::_mfSkeletons field.
inline
MFSkeletonPtr &SkeletonBlendedGeometryBase::getSkeletons(void)
{
    return _mfSkeletons;
}

//! Get the SkeletonBlendedGeometry::_mfSkeletons field.
inline
const MFSkeletonPtr &SkeletonBlendedGeometryBase::getSkeletons(void) const
{
    return _mfSkeletons;
}

OSG_END_NAMESPACE

#define OSGSKELETONBLENDEDGEOMETRYBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

