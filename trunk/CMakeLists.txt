
CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
PROJECT(OpenSGToolbox)

#IF(COMMAND cmake_policy)
#      cmake_policy(SET CMP0003 OLD)
#ENDIF(COMMAND cmake_policy)

SET (CMAKE_VERBOSE_MAKEFILE TRUE)

######### Revision number
FIND_PACKAGE(Subversion)
IF(Subversion_FOUND)
   Subversion_WC_INFO(${CMAKE_HOME_DIRECTORY} Project)
   MESSAGE("Current revision is ${Project_WC_REVISION}")
ENDIF(Subversion_FOUND)

######### Version
FILE(STRINGS ${CMAKE_SOURCE_DIR}/VERSION VersionFile)
STRING(REGEX MATCH "([0-9]+)\\.([0-9]+)\\.([0-9])+" VersionMatch ${VersionFile})

SET(OPENSGTOOLBOX_MAJOR_VERSION ${CMAKE_MATCH_1})
SET(OPENSGTOOLBOX_MINOR_VERSION ${CMAKE_MATCH_2})
SET(OPENSGTOOLBOX_PATCH_VERSION ${CMAKE_MATCH_3})
SET(OPENSGTOOLBOX_VERSION "${OPENSGTOOLBOX_MAJOR_VERSION}.${OPENSGTOOLBOX_MINOR_VERSION}.${OPENSGTOOLBOX_PATCH_VERSION}")
MESSAGE("Current Version is ${OPENSGTOOLBOX_VERSION}")

######### Build Directory
SET(BUILD_PATH "${CMAKE_SOURCE_DIR}/Builds/${CMAKE_SYSTEM}")

######### Doxygen
FIND_PROGRAM(DOXYGEN_EXECUTABLE doxygen)
OPTION(ENABLE_USER_DOCUMENTATION "Generate user level documentation." ON)
OPTION(ENABLE_DEVELOPER_DOCUMENTATION "Generate developer level documentation." OFF)

######### FMod
FIND_PATH(FMOD_BASE_DIR NAMES api/inc/fmod.h PATHS "/Developer/FMOD Programmers API")
SET(FMOD_INC_DIR ${FMOD_BASE_DIR}/api/inc)
SET(FMOD_LIB_DIR ${FMOD_BASE_DIR}/api/lib)


######### OpenSG
IF(WIN32)
   SET(OPENSG_BASE_DIR $ENV{OPENSG}/..)
ENDIF(WIN32)

FIND_PATH(OPENSG_BASE_DIR include/OpenSG/OSGConfig.h)
SET(OPENSG_INC_DIR ${OPENSG_BASE_DIR}/include)
SET(OPENSG_LIB_DIR ${OPENSG_BASE_DIR}/lib)

IF (UNIX)
   FIND_PROGRAM(OSG_CONFIG osg-config ${OPENSG_BASE_DIR}/bin)
   #IF (${OSG_CONFIG})
     IF(APPLE)
	    SET(OPENSG_CXX_FLAGS "`${OSG_CONFIG} --cflags Base System Carbon`")
	    SET(OPENSG_LD_FLAGS "`${OSG_CONFIG} --lflags Base System Carbon`")
	    SET(OPENSG_LIBS "`${OSG_CONFIG} --llibs Base System Carbon`")
     ELSE(APPLE)
       EXECUTE_PROCESS(COMMAND ${OSG_CONFIG} --dbg --cflags Base System
                       OUTPUT_VARIABLE OPENSG_CXX_FLAGS_DBG)
       EXECUTE_PROCESS(COMMAND ${OSG_CONFIG} --opt --cflags Base System
                       OUTPUT_VARIABLE OPENSG_CXX_FLAGS_OPT)
       EXECUTE_PROCESS(COMMAND ${OSG_CONFIG} --dbg --lflags Base System
                       OUTPUT_VARIABLE OPENSG_LD_FLAGS_DBG)
       EXECUTE_PROCESS(COMMAND ${OSG_CONFIG} --opt --lflags Base System
                       OUTPUT_VARIABLE OPENSG_LD_FLAGS_OPT)
	    SET(OPENSG_LIBS_DBG "-lOSGBase -lOSGSystem")
	    SET(OPENSG_LIBS_OPT "-lOSGBase -lOSGSystem")
     ENDIF(APPLE)
     #ELSE(${OSG_CONFIG})
     #   MESSAGE("osg-config not found")
     #ENDIF (${OSG_CONFIG})
ENDIF(UNIX)

IF(WIN32)
   SET(OPENSG_CXX_FLAGS_DBG "-D_WIN32_WINNT=0x0400 -D_OSG_HAVE_CONFIGURED_H_ -DOSG_WITH_GLUT -DOSG_WITH_GIF -DOSG_WITH_TIF -DOSG_WITH_JPG -D_DEBUG /MP")
   SET(OPENSG_CXX_FLAGS_OPT "-D_WIN32_WINNT=0x0400 -D_OSG_HAVE_CONFIGURED_H_ -DOSG_WITH_GLUT -DOSG_WITH_GIF -DOSG_WITH_TIF -DOSG_WITH_JPG /MP")
   SET(OPENSG_CXX_BUILDDLL_FLAGS "-DOSG_BUILD_DLL")
   SET(OPENSG_LD_FLAGS_DBG "")
   SET(OPENSG_LD_FLAGS_OPT "")
   SET(OPENSG_LIBS_DBG OSGBaseD OSGSystemD)
   SET(OPENSG_LIBS_OPT OSGBase OSGSystem)
   SET(OPENSG_WINDOW_LIBS debug OSGWindowWIN32D optimized OSGWindowWIN32)                
ENDIF(WIN32)

######## BOOST
FIND_PACKAGE(Boost REQUIRED)


######### ODE

######### Documentation
ADD_CUSTOM_TARGET(documentation ALL COMMENT "Building Documentation")

IF(ENABLE_USER_DOCUMENTATION)
   ADD_CUSTOM_TARGET(user_doc COMMENT "Building User Documentation")
   ADD_DEPENDENCIES(documentation user_doc)
ENDIF(ENABLE_USER_DOCUMENTATION)

IF(ENABLE_DEVELOPER_DOCUMENTATION)
   ADD_CUSTOM_TARGET(dev_doc COMMENT "Building Developer Documentation")
   ADD_DEPENDENCIES(documentation dev_doc)
ENDIF(ENABLE_DEVELOPER_DOCUMENTATION)

# Libraries
SET(CMAKE_DEBUG_POSTFIX "D")
SET(TOOLBOX_BUILD_PATH "Toolbox")
ADD_SUBDIRECTORY(Toolbox/src ${TOOLBOX_BUILD_PATH})
#SET(INPUT_BUILD_PATH "Input")
#ADD_SUBDIRECTORY(Input/src ${INPUT_BUILD_PATH})

#Packaging
IF(UNIX)
   IF(APPLE)
      SET(CPACK_GENERATOR "Bundle")
   ELSE(APPLE)
      SET(CPACK_GENERATOR "TGZ")
   ENDIF(APPLE)
ELSE(UNIX)
   IF(WIN32)
      SET(CPACK_GENERATOR "NSIS")
   ENDIF(WIN32)
ENDIF(UNIX)
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OpenSGToolbox")
SET(CPACK_PACKAGE_VENDOR "")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
SET(CPACK_PACKAGE_VERSION ${OPENSGTOOLBOX_VERSION})
SET(CPACK_PACKAGE_VERSION_MAJOR ${OPENSGTOOLBOX_MAJOR_VERSION})
SET(CPACK_PACKAGE_VERSION_MINOR ${OPENSGTOOLBOX_MINOR_VERSION})
SET(CPACK_PACKAGE_VERSION_PATCH ${OPENSGTOOLBOX_PATCH_VERSION})
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake-${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
IF(WIN32 AND NOT UNIX)
  # There is a bug in NSI that does not handle full unix paths properly. Make
  # sure there is at least one set of four (4) backlasshes.
  #SET(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
  SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OpenSGToolbox.exe")
  SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OpenSGToolbox")
  SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.vrac.iastate.edu\\\\~dkabala\\\\OpenSGToolbox")
  SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.vrac.iastate.edu\\\\~dkabala\\\\OpenSGToolbox")
  #SET(CPACK_NSIS_CONTACT "me@my-personal-home-page.com")
  SET(CPACK_NSIS_MODIFY_PATH ON)
ELSE(WIN32 AND NOT UNIX)
  #SET(CPACK_STRIP_FILES "bin/MyExecutable")
  #SET(CPACK_SOURCE_STRIP_FILES "")
ENDIF(WIN32 AND NOT UNIX)

#Package Component Descriptions
SET(CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Header files")
SET(CPACK_COMPONENT_HEADERS_DESCRIPTION "C++ Header files")
SET(CPACK_COMPONENT_HEADERS_GROUP "Development")

SET(CPACK_COMPONENT_DEBUGLIBS_DISPLAY_NAME "Development Debug Libraries")
SET(CPACK_COMPONENT_DEBUGLIBS_DESCRIPTION "Development Debug Libraries")
SET(CPACK_COMPONENT_DEBUGLIBS_GROUP "Development")

SET(CPACK_COMPONENT_OPTLIBS_DISPLAY_NAME "Optimum Libraries")
SET(CPACK_COMPONENT_OPTLIBS_DESCRIPTION "Optimum Libraries")
SET(CPACK_COMPONENT_OPTLIBS_GROUP "Runtime")

SET(CPACK_COMPONENT_USERDOC_DISPLAY_NAME "User Documenttation")
SET(CPACK_COMPONENT_USERDOC_DESCRIPTION "User Documenttation")
SET(CPACK_COMPONENT_USERDOC_GROUP "Documentation")

SET(CPACK_COMPONENT_DEVDOC_DISPLAY_NAME "Developer Documentation")
SET(CPACK_COMPONENT_DEVDOC_DESCRIPTION "Developer Documentation")
SET(CPACK_COMPONENT_DEVDOC_GROUP "Documentation")

SET(CPACK_COMPONENT_GROUP_DEVELOPMENT "All the files reguired for development work")
SET(CPACK_COMPONENT_GROUP_RUNTIME "Runtime files")
SET(CPACK_COMPONENT_GROUP_DOCUMENTATION "Documentation")

#This include MUST be at the end for now
INCLUDE(CPack)
