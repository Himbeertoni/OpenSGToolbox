
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(OpenSGToolbox)

IF(COMMAND cmake_policy)
      cmake_policy(SET CMP0003 OLD)
ENDIF(COMMAND cmake_policy)

SET (CMAKE_VERBOSE_MAKEFILE TRUE)

######### Revision number
FIND_PACKAGE(Subversion)
IF(Subversion_FOUND)
   Subversion_WC_INFO(${CMAKE_HOME_DIRECTORY} Project)
   MESSAGE("Current revision is ${Project_WC_REVISION}")
ENDIF(Subversion_FOUND)

######### Build Directory
SET(BUILD_PATH "${CMAKE_SOURCE_DIR}/Builds/${CMAKE_SYSTEM}")

######### Doxygen
FIND_PROGRAM(DOXYGEN_EXECUTABLE doxygen)
OPTION(ENABLE_USER_DOCUMENTATION "Generate user level documentation." ON)
OPTION(ENABLE_DEVELOPER_DOCUMENTATION "Generate developer level documentation." OFF)

######### FMod
FIND_PATH(FMOD_BASE_DIR NAMES api/inc/fmod.h PATHS "/Developer/FMOD Programmers API")
SET(FMOD_INC_DIR ${FMOD_BASE_DIR}/api/inc)
SET(FMOD_LIB_DIR ${FMOD_BASE_DIR}/api/lib)


######### OpenSG
IF(WIN32)
   SET(OPENSG_BASE_DIR $ENV{OPENSG}/..)
ENDIF(WIN32)

FIND_PATH(OPENSG_BASE_DIR include/OpenSG/OSGConfig.h)
SET(OPENSG_INC_DIR ${OPENSG_BASE_DIR}/include)
SET(OPENSG_LIB_DIR ${OPENSG_BASE_DIR}/lib)

IF (UNIX)
   FIND_PROGRAM(OSG_CONFIG osg-config ${OPENSG_BASE_DIR}/bin)
   #IF (${OSG_CONFIG})
     IF(APPLE)
	    SET(OPENSG_CXX_FLAGS "`${OSG_CONFIG} --cflags Base System Carbon`")
	    SET(OPENSG_LD_FLAGS "`${OSG_CONFIG} --lflags Base System Carbon`")
	    SET(OPENSG_LIBS "`${OSG_CONFIG} --llibs Base System Carbon`")
     ELSE(APPLE)
	    SET(OPENSG_CXX_FLAGS "`${OPENSG_CONFIG} --opt --cflags Base System`")
       SET(OPENSG_CXX_FLAGS_DBG "`${OSG_CONFIG} --dbg --cflags Base System`")
	    SET(OPENSG_CXX_FLAGS_OPT "`${OSG_CONFIG} --opt --cflags Base System`")
	    SET(OPENSG_LD_FLAGS_DBG "`${OSG_CONFIG} --dbg --lflags Base System`")
	    SET(OPENSG_LD_FLAGS_OPT "`${OSG_CONFIG} --opt --lflags Base System`")
	    SET(OPENSG_LIBS_DBG "-lOSGBase -lOSGSystem")
	    SET(OPENSG_LIBS_OPT "-lOSGBase -lOSGSystem")
     ENDIF(APPLE)
     #ELSE(${OSG_CONFIG})
     #   MESSAGE("osg-config not found")
     #ENDIF (${OSG_CONFIG})
ENDIF(UNIX)

IF(WIN32)
   SET(OPENSG_CXX_FLAGS_DBG "-D_WIN32_WINNT=0x0400 -D_OSG_HAVE_CONFIGURED_H_ -DOSG_WITH_GLUT -DOSG_WITH_GIF -DOSG_WITH_TIF -DOSG_WITH_JPG -D_DEBUG /MP")
   SET(OPENSG_CXX_FLAGS_OPT "-D_WIN32_WINNT=0x0400 -D_OSG_HAVE_CONFIGURED_H_ -DOSG_WITH_GLUT -DOSG_WITH_GIF -DOSG_WITH_TIF -DOSG_WITH_JPG /MP")
   SET(OPENSG_CXX_BUILDDLL_FLAGS "-DOSG_BUILD_DLL")
   SET(OPENSG_LD_FLAGS_DBG "")
   SET(OPENSG_LD_FLAGS_OPT "")
   SET(OPENSG_LIBS_DBG OSGBaseD OSGSystemD)
   SET(OPENSG_LIBS_OPT OSGBase OSGSystem)
   SET(OPENSG_WINDOW_LIBS debug OSGWindowWIN32D optimized OSGWindowWIN32)                
ENDIF(WIN32)

######## BOOST
FIND_PACKAGE(Boost REQUIRED)


######### ODE

######### Documentation
ADD_CUSTOM_TARGET(documentation ALL COMMENT "Building Documentation")

IF(ENABLE_USER_DOCUMENTATION)
   ADD_CUSTOM_TARGET(user_doc COMMENT "Building User Documentation")
   ADD_DEPENDENCIES(documentation user_doc)
ENDIF(ENABLE_USER_DOCUMENTATION)

IF(ENABLE_DEVELOPER_DOCUMENTATION)
   ADD_CUSTOM_TARGET(dev_doc COMMENT "Building Developer Documentation")
   ADD_DEPENDENCIES(documentation dev_doc)
ENDIF(ENABLE_DEVELOPER_DOCUMENTATION)

# Install directories
SET(OPENSG_TOOLBOX_INC_DIR "${CMAKE_INSTALL_PREFIX}/include")
SET(OPENSG_TOOLBOX_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")

SET(TOOLBOX_BUILD_PATH "${BUILD_PATH}/Toolbox")
ADD_SUBDIRECTORY(Toolbox/src ${TOOLBOX_BUILD_PATH})
SET(INPUT_BUILD_PATH "${BUILD_PATH}/Input")
ADD_SUBDIRECTORY(Input/src ${INPUT_BUILD_PATH})
