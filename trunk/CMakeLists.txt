
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(OpenSGToolbox)

IF(COMMAND cmake_policy)
      cmake_policy(SET CMP0003 OLD)
ENDIF(COMMAND cmake_policy)

#SET (CMAKE_VERBOSE_MAKEFILE TRUE)

######### FMod
FIND_PATH(FMOD_BASE_DIR NAMES api/inc/fmod.h PATHS "/Developer/FMOD Programmers API")
SET(FMOD_INC_DIR ${FMOD_BASE_DIR}/api/inc)
SET(FMOD_LIB_DIR ${FMOD_BASE_DIR}/api/lib)


######### OpenSG
IF(WIN32)
   SET(OPENSG_BASE_DIR $ENV{OPENSG}/..)
ENDIF(WIN32)

FIND_PATH(OPENSG_BASE_DIR include/OpenSG/OSGConfig.h)
SET(OPENSG_INC_DIR ${OPENSG_BASE_DIR}/include)
SET(OPENSG_LIB_DIR ${OPENSG_BASE_DIR}/lib)

IF (UNIX)
   FIND_PROGRAM(OSG_CONFIG osg-config ${OPENSG_BASE_DIR}/bin)
   IF (${OSG_CONFIG})
     IF(APPLE)
	SET(OPENSG_CXX_FLAGS "`${OSG_CONFIG} --cflags Base System Carbon`")
	SET(OPENSG_LD_FLAGS "`${OSG_CONFIG} --lflags Base System Carbon`")
	SET(OPENSG_LIBS "`${OSG_CONFIG} --llibs Base System Carbon`")
     ELSE(APPLE)
	SET(OPENSG_CXX_FLAGS "`${OSG_CONFIG} --cflags Base System X`")
	SET(OPENSG_LD_FLAGS "`${OSG_CONFIG} --lflags Base System X`")
	SET(OPENSG_LIBS "`${OSG_CONFIG} --llibs Base System X`")
     ENDIF(APPLE)
   ELSE(${OSG_CONFIG})
      MESSAGE("osg-config not found")
   ENDIF (${OSG_CONFIG})
ENDIF(UNIX)

IF(WIN32)
   SET(OPENSG_CXX_FLAGS "-D_WIN32_WINNT=0x0400 -D_OSG_HAVE_CONFIGURED_H_ -DOSG_WITH_GLUT -DOSG_WITH_GIF -DOSG_WITH_TIF -DOSG_WITH_JPG /MP")
   SET(OPENSG_CXX_BUILDDLL_FLAGS "-DOSG_BUILD_DLL")
   SET(OPENSG_CXX_DEBUG_FLAGS "-D_DEBUG")
   SET(OPENSG_CXX_OPT_FLAGS "")
   SET(OPENSG_LD_FLAGS "")
   SET(OPENSG_LIBS debug OSGBaseD debug OSGSystemD optimized OSGBase optimized OSGSystem)
   SET(OPENSG_WINDOW_LIBS debug OSGWindowWIN32D optimized OSGWindowWIN32)
ENDIF(WIN32)

SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${OPENSG_CXX_FLAGS})
SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS};${OPENSG_LD_FLAGS})

######## BOOST
FIND_PACKAGE(Boost REQUIRED)


######### ODE


##Sub components
IF(UNIX)
   IF(APPLE)
   ELSE(APPLE)
      SET(BUILD_PATH "Builds/Linux")
   ENDIF(APPLE)
ENDIF(UNIX)

IF(WIN32)
   SET(BUILD_PATH "Builds/Windows")
ENDIF(WIN32)

ADD_SUBDIRECTORY(Toolbox/src ${BUILD_PATH})
#ADD_SUBDIRECTORY(Input/src ${BUILD_PATH})