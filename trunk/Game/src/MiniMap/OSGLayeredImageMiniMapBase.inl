/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LayeredImageMiniMap!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LayeredImageMiniMapBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LayeredImageMiniMapBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
LayeredImageMiniMapPtr LayeredImageMiniMapBase::create(void) 
{
    LayeredImageMiniMapPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = LayeredImageMiniMapPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
LayeredImageMiniMapPtr LayeredImageMiniMapBase::createEmpty(void) 
{ 
    LayeredImageMiniMapPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the LayeredImageMiniMap::_mfOverlay field.
inline
MFMiniMapOverlayPtr *LayeredImageMiniMapBase::getMFOverlay(void)
{
    return &_mfOverlay;
}

//! Get the LayeredImageMiniMap::_mfLayerTextures field.
inline
MFTextureChunkPtr *LayeredImageMiniMapBase::getMFLayerTextures(void)
{
    return &_mfLayerTextures;
}

//! Get the LayeredImageMiniMap::_mfLayerDistances field.
inline
MFReal32 *LayeredImageMiniMapBase::getMFLayerDistances(void)
{
    return &_mfLayerDistances;
}

//! Get the LayeredImageMiniMap::_sfStationaryIndicator field.
inline
SFBool *LayeredImageMiniMapBase::getSFStationaryIndicator(void)
{
    return &_sfStationaryIndicator;
}
//! Get the value of the LayeredImageMiniMap::_sfStationaryIndicator field.
inline
bool &LayeredImageMiniMapBase::getStationaryIndicator(void)
{
    return _sfStationaryIndicator.getValue();
}

//! Get the value of the LayeredImageMiniMap::_sfStationaryIndicator field.
inline
const bool &LayeredImageMiniMapBase::getStationaryIndicator(void) const
{
    return _sfStationaryIndicator.getValue();
}

//! Set the value of the LayeredImageMiniMap::_sfStationaryIndicator field.
inline
void LayeredImageMiniMapBase::setStationaryIndicator(const bool &value)
{
    _sfStationaryIndicator.setValue(value);
}


//! Get the value of the \a index element the LayeredImageMiniMap::_mfOverlay field.
inline
MiniMapOverlayPtr &LayeredImageMiniMapBase::getOverlay(const UInt32 index)
{
    return _mfOverlay[index];
}

//! Get the LayeredImageMiniMap::_mfOverlay field.
inline
MFMiniMapOverlayPtr &LayeredImageMiniMapBase::getOverlay(void)
{
    return _mfOverlay;
}

//! Get the LayeredImageMiniMap::_mfOverlay field.
inline
const MFMiniMapOverlayPtr &LayeredImageMiniMapBase::getOverlay(void) const
{
    return _mfOverlay;
}

//! Get the value of the \a index element the LayeredImageMiniMap::_mfLayerTextures field.
inline
TextureChunkPtr &LayeredImageMiniMapBase::getLayerTextures(const UInt32 index)
{
    return _mfLayerTextures[index];
}

//! Get the LayeredImageMiniMap::_mfLayerTextures field.
inline
MFTextureChunkPtr &LayeredImageMiniMapBase::getLayerTextures(void)
{
    return _mfLayerTextures;
}

//! Get the LayeredImageMiniMap::_mfLayerTextures field.
inline
const MFTextureChunkPtr &LayeredImageMiniMapBase::getLayerTextures(void) const
{
    return _mfLayerTextures;
}

//! Get the value of the \a index element the LayeredImageMiniMap::_mfLayerDistances field.
inline
Real32 &LayeredImageMiniMapBase::getLayerDistances(const UInt32 index)
{
    return _mfLayerDistances[index];
}

//! Get the LayeredImageMiniMap::_mfLayerDistances field.
inline
MFReal32 &LayeredImageMiniMapBase::getLayerDistances(void)
{
    return _mfLayerDistances;
}

//! Get the LayeredImageMiniMap::_mfLayerDistances field.
inline
const MFReal32 &LayeredImageMiniMapBase::getLayerDistances(void) const
{
    return _mfLayerDistances;
}

OSG_END_NAMESPACE

#define OSGLAYEREDIMAGEMINIMAPBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

