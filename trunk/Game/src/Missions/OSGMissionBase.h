/*---------------------------------------------------------------------------*\
 *                        OpenSG ToolBox Game                                *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Mission
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGMISSIONBASE_H_
#define _OSGMISSIONBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGGameDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include <OpenSG/OSGAttachmentContainer.h> // Parent

#include "OSGMissionFields.h" // Missions type
#include <OpenSG/Toolbox/OSGStringToUInt32MapType.h> // Properties type
#include <OpenSG/OSGStringFields.h> // Description type

#include "OSGMissionFields.h"

OSG_BEGIN_NAMESPACE

class Mission;
class BinaryDataHandler;

//! \brief Mission Base Class.

class OSG_GAMELIB_DLLMAPPING MissionBase : public AttachmentContainer
{
  private:

    typedef AttachmentContainer    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef MissionPtr  Ptr;

    enum
    {
        MissionsFieldId    = Inherited::NextFieldId,
        PropertiesFieldId  = MissionsFieldId    + 1,
        DescriptionFieldId = PropertiesFieldId  + 1,
        NextFieldId        = DescriptionFieldId + 1
    };

    static const OSG::BitVector MissionsFieldMask;
    static const OSG::BitVector PropertiesFieldMask;
    static const OSG::BitVector DescriptionFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


           MFMissionPtr        *editMFMissions       (void);
     const MFMissionPtr        *getMFMissions       (void) const;
#ifndef OSG_2_PREP
           MFMissionPtr        *getMFMissions       (void);
#endif

           MFStringToUInt32Map *editMFProperties     (void);
     const MFStringToUInt32Map *getMFProperties     (void) const;
#ifndef OSG_2_PREP
           MFStringToUInt32Map *getMFProperties     (void);
#endif

           SFString            *editSFDescription    (void);
     const SFString            *getSFDescription    (void) const;
#ifndef OSG_2_PREP
           SFString            *getSFDescription    (void);
#endif


           std::string         &editDescription    (void);
     const std::string         &getDescription    (void) const;
#ifndef OSG_2_PREP
           std::string         &getDescription    (void);
#endif

           MissionPtr          &editMissions       (const UInt32 index);
     const MissionPtr          &getMissions       (const UInt32 index) const;
#ifndef OSG_2_PREP
           MissionPtr          &getMissions       (const UInt32 index);
           MFMissionPtr        &getMissions       (void);
     const MFMissionPtr        &getMissions       (void) const;
#endif

           StringToUInt32Map   &editProperties     (const UInt32 index);
     const StringToUInt32Map   &getProperties     (const UInt32 index) const;
#ifndef OSG_2_PREP
           StringToUInt32Map   &getProperties     (const UInt32 index);
           MFStringToUInt32Map &getProperties     (void);
     const MFStringToUInt32Map &getProperties     (void) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setDescription    ( const std::string &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFMissionPtr        _mfMissions;
    MFStringToUInt32Map   _mfProperties;
    SFString            _sfDescription;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    MissionBase(void);
    MissionBase(const MissionBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~MissionBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      MissionBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      MissionBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const MissionBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef MissionBase *MissionBaseP;

typedef osgIF<MissionBase::isNodeCore,
              CoredNodePtr<Mission>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet MissionNodePtr;

typedef RefPtr<MissionPtr> MissionRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGMISSIONBASE_H_ */
