/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FBOSourceTextureFilter!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FBOSourceTextureFilterBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 FBOSourceTextureFilterBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
FBOSourceTextureFilterPtr FBOSourceTextureFilterBase::create(void) 
{
    FBOSourceTextureFilterPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = FBOSourceTextureFilterPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
FBOSourceTextureFilterPtr FBOSourceTextureFilterBase::createEmpty(void) 
{ 
    FBOSourceTextureFilterPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the FBOSourceTextureFilter::_sfFBO field.
inline
const SFFBOViewportPtr *FBOSourceTextureFilterBase::getSFFBO(void) const
{
    return &_sfFBO;
}

//! Get the FBOSourceTextureFilter::_sfFBO field.
inline
SFFBOViewportPtr *FBOSourceTextureFilterBase::editSFFBO(void)
{
    return &_sfFBO;
}

//! Get the FBOSourceTextureFilter::_sfFBOSize field.
inline
const SFVec2f *FBOSourceTextureFilterBase::getSFFBOSize(void) const
{
    return &_sfFBOSize;
}

//! Get the FBOSourceTextureFilter::_sfFBOSize field.
inline
SFVec2f *FBOSourceTextureFilterBase::editSFFBOSize(void)
{
    return &_sfFBOSize;
}

//! Get the FBOSourceTextureFilter::_mfOutputSlots field.
inline
const MFTextureFilterOutputSlot *FBOSourceTextureFilterBase::getMFOutputSlots(void) const
{
    return &_mfOutputSlots;
}

//! Get the FBOSourceTextureFilter::_mfOutputSlots field.
inline
MFTextureFilterOutputSlot *FBOSourceTextureFilterBase::editMFOutputSlots(void)
{
    return &_mfOutputSlots;
}

//! Get the FBOSourceTextureFilter::_sfDynamic field.
inline
const SFBool *FBOSourceTextureFilterBase::getSFDynamic(void) const
{
    return &_sfDynamic;
}

//! Get the FBOSourceTextureFilter::_sfDynamic field.
inline
SFBool *FBOSourceTextureFilterBase::editSFDynamic(void)
{
    return &_sfDynamic;
}


//! Get the value of the FBOSourceTextureFilter::_sfFBO field.
inline
FBOViewportPtr &FBOSourceTextureFilterBase::editFBO(void)
{
    return _sfFBO.getValue();
}

//! Get the value of the FBOSourceTextureFilter::_sfFBO field.
inline
const FBOViewportPtr &FBOSourceTextureFilterBase::getFBO(void) const
{
    return _sfFBO.getValue();
}

//! Set the value of the FBOSourceTextureFilter::_sfFBO field.
inline
void FBOSourceTextureFilterBase::setFBO(const FBOViewportPtr &value)
{
    _sfFBO.setValue(value);
}

//! Get the value of the FBOSourceTextureFilter::_sfFBOSize field.
inline
Vec2f &FBOSourceTextureFilterBase::editFBOSize(void)
{
    return _sfFBOSize.getValue();
}

//! Get the value of the FBOSourceTextureFilter::_sfFBOSize field.
inline
const Vec2f &FBOSourceTextureFilterBase::getFBOSize(void) const
{
    return _sfFBOSize.getValue();
}

//! Set the value of the FBOSourceTextureFilter::_sfFBOSize field.
inline
void FBOSourceTextureFilterBase::setFBOSize(const Vec2f &value)
{
    _sfFBOSize.setValue(value);
}

//! Get the value of the FBOSourceTextureFilter::_sfDynamic field.
inline
bool &FBOSourceTextureFilterBase::editDynamic(void)
{
    return _sfDynamic.getValue();
}

//! Get the value of the FBOSourceTextureFilter::_sfDynamic field.
inline
const bool &FBOSourceTextureFilterBase::getDynamic(void) const
{
    return _sfDynamic.getValue();
}

//! Set the value of the FBOSourceTextureFilter::_sfDynamic field.
inline
void FBOSourceTextureFilterBase::setDynamic(const bool &value)
{
    _sfDynamic.setValue(value);
}


//! Get the value of the \a index element the FBOSourceTextureFilter::_mfOutputSlots field.
inline
TextureFilterOutputSlot &FBOSourceTextureFilterBase::editOutputSlots(const UInt32 index)
{
    return _mfOutputSlots[index];
}

//! Get the value of the \a index element the FBOSourceTextureFilter::_mfOutputSlots field.
inline
const TextureFilterOutputSlot &FBOSourceTextureFilterBase::getOutputSlots(const UInt32 index) const
{
    return _mfOutputSlots[index];
}

#ifndef OSG_2_PREP
//! Get the FBOSourceTextureFilter::_mfOutputSlots field.
inline
MFTextureFilterOutputSlot &FBOSourceTextureFilterBase::getOutputSlots(void)
{
    return _mfOutputSlots;
}

//! Get the FBOSourceTextureFilter::_mfOutputSlots field.
inline
const MFTextureFilterOutputSlot &FBOSourceTextureFilterBase::getOutputSlots(void) const
{
    return _mfOutputSlots;
}

#endif
OSG_END_NAMESPACE
