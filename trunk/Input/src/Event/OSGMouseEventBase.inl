/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MouseEvent!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &MouseEventBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 MouseEventBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
MouseEventPtr MouseEventBase::create(void) 
{
    MouseEventPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = MouseEventPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
MouseEventPtr MouseEventBase::createEmpty(void) 
{ 
    MouseEventPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the MouseEvent::_sfButton field.
inline
const SFUInt16 *MouseEventBase::getSFButton(void) const
{
    return &_sfButton;
}

//! Get the MouseEvent::_sfButton field.
inline
SFUInt16 *MouseEventBase::editSFButton(void)
{
    return &_sfButton;
}

//! Get the MouseEvent::_sfClickCount field.
inline
const SFUInt16 *MouseEventBase::getSFClickCount(void) const
{
    return &_sfClickCount;
}

//! Get the MouseEvent::_sfClickCount field.
inline
SFUInt16 *MouseEventBase::editSFClickCount(void)
{
    return &_sfClickCount;
}

//! Get the MouseEvent::_sfLocation field.
inline
const SFPnt2f *MouseEventBase::getSFLocation(void) const
{
    return &_sfLocation;
}

//! Get the MouseEvent::_sfLocation field.
inline
SFPnt2f *MouseEventBase::editSFLocation(void)
{
    return &_sfLocation;
}

//! Get the MouseEvent::_sfDelta field.
inline
const SFVec2f *MouseEventBase::getSFDelta(void) const
{
    return &_sfDelta;
}

//! Get the MouseEvent::_sfDelta field.
inline
SFVec2f *MouseEventBase::editSFDelta(void)
{
    return &_sfDelta;
}

//! Get the MouseEvent::_sfViewport field.
inline
const SFViewportPtr *MouseEventBase::getSFViewport(void) const
{
    return &_sfViewport;
}

//! Get the MouseEvent::_sfViewport field.
inline
SFViewportPtr *MouseEventBase::editSFViewport(void)
{
    return &_sfViewport;
}


//! Get the value of the MouseEvent::_sfButton field.
inline
UInt16 &MouseEventBase::editButton(void)
{
    return _sfButton.getValue();
}

//! Get the value of the MouseEvent::_sfButton field.
inline
const UInt16 &MouseEventBase::getButton(void) const
{
    return _sfButton.getValue();
}

//! Set the value of the MouseEvent::_sfButton field.
inline
void MouseEventBase::setButton(const UInt16 &value)
{
    _sfButton.setValue(value);
}

//! Get the value of the MouseEvent::_sfClickCount field.
inline
UInt16 &MouseEventBase::editClickCount(void)
{
    return _sfClickCount.getValue();
}

//! Get the value of the MouseEvent::_sfClickCount field.
inline
const UInt16 &MouseEventBase::getClickCount(void) const
{
    return _sfClickCount.getValue();
}

//! Set the value of the MouseEvent::_sfClickCount field.
inline
void MouseEventBase::setClickCount(const UInt16 &value)
{
    _sfClickCount.setValue(value);
}

//! Get the value of the MouseEvent::_sfLocation field.
inline
Pnt2f &MouseEventBase::editLocation(void)
{
    return _sfLocation.getValue();
}

//! Get the value of the MouseEvent::_sfLocation field.
inline
const Pnt2f &MouseEventBase::getLocation(void) const
{
    return _sfLocation.getValue();
}

//! Set the value of the MouseEvent::_sfLocation field.
inline
void MouseEventBase::setLocation(const Pnt2f &value)
{
    _sfLocation.setValue(value);
}

//! Get the value of the MouseEvent::_sfDelta field.
inline
Vec2f &MouseEventBase::editDelta(void)
{
    return _sfDelta.getValue();
}

//! Get the value of the MouseEvent::_sfDelta field.
inline
const Vec2f &MouseEventBase::getDelta(void) const
{
    return _sfDelta.getValue();
}

//! Set the value of the MouseEvent::_sfDelta field.
inline
void MouseEventBase::setDelta(const Vec2f &value)
{
    _sfDelta.setValue(value);
}

//! Get the value of the MouseEvent::_sfViewport field.
inline
ViewportPtr &MouseEventBase::editViewport(void)
{
    return _sfViewport.getValue();
}

//! Get the value of the MouseEvent::_sfViewport field.
inline
const ViewportPtr &MouseEventBase::getViewport(void) const
{
    return _sfViewport.getValue();
}

//! Set the value of the MouseEvent::_sfViewport field.
inline
void MouseEventBase::setViewport(const ViewportPtr &value)
{
    _sfViewport.setValue(value);
}


OSG_END_NAMESPACE

