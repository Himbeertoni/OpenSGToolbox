/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MouseWheelEvent!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &MouseWheelEventBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 MouseWheelEventBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
MouseWheelEventPtr MouseWheelEventBase::create(void) 
{
    MouseWheelEventPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = MouseWheelEventPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
MouseWheelEventPtr MouseWheelEventBase::createEmpty(void) 
{ 
    MouseWheelEventPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the MouseWheelEvent::_sfScrollType field.
inline
const SFUInt8 *MouseWheelEventBase::getSFScrollType(void) const
{
    return &_sfScrollType;
}

//! Get the MouseWheelEvent::_sfScrollType field.
inline
SFUInt8 *MouseWheelEventBase::editSFScrollType(void)
{
    return &_sfScrollType;
}

//! Get the MouseWheelEvent::_sfScrollOrientation field.
inline
const SFUInt8 *MouseWheelEventBase::getSFScrollOrientation(void) const
{
    return &_sfScrollOrientation;
}

//! Get the MouseWheelEvent::_sfScrollOrientation field.
inline
SFUInt8 *MouseWheelEventBase::editSFScrollOrientation(void)
{
    return &_sfScrollOrientation;
}

//! Get the MouseWheelEvent::_sfWheelRotation field.
inline
const SFInt32 *MouseWheelEventBase::getSFWheelRotation(void) const
{
    return &_sfWheelRotation;
}

//! Get the MouseWheelEvent::_sfWheelRotation field.
inline
SFInt32 *MouseWheelEventBase::editSFWheelRotation(void)
{
    return &_sfWheelRotation;
}

//! Get the MouseWheelEvent::_sfLocation field.
inline
const SFPnt2f *MouseWheelEventBase::getSFLocation(void) const
{
    return &_sfLocation;
}

//! Get the MouseWheelEvent::_sfLocation field.
inline
SFPnt2f *MouseWheelEventBase::editSFLocation(void)
{
    return &_sfLocation;
}

//! Get the MouseWheelEvent::_sfViewport field.
inline
const SFViewportPtr *MouseWheelEventBase::getSFViewport(void) const
{
    return &_sfViewport;
}

//! Get the MouseWheelEvent::_sfViewport field.
inline
SFViewportPtr *MouseWheelEventBase::editSFViewport(void)
{
    return &_sfViewport;
}


//! Get the value of the MouseWheelEvent::_sfScrollType field.
inline
UInt8 &MouseWheelEventBase::editScrollType(void)
{
    return _sfScrollType.getValue();
}

//! Get the value of the MouseWheelEvent::_sfScrollType field.
inline
const UInt8 &MouseWheelEventBase::getScrollType(void) const
{
    return _sfScrollType.getValue();
}

//! Set the value of the MouseWheelEvent::_sfScrollType field.
inline
void MouseWheelEventBase::setScrollType(const UInt8 &value)
{
    _sfScrollType.setValue(value);
}

//! Get the value of the MouseWheelEvent::_sfScrollOrientation field.
inline
UInt8 &MouseWheelEventBase::editScrollOrientation(void)
{
    return _sfScrollOrientation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfScrollOrientation field.
inline
const UInt8 &MouseWheelEventBase::getScrollOrientation(void) const
{
    return _sfScrollOrientation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfScrollOrientation field.
inline
void MouseWheelEventBase::setScrollOrientation(const UInt8 &value)
{
    _sfScrollOrientation.setValue(value);
}

//! Get the value of the MouseWheelEvent::_sfWheelRotation field.
inline
Int32 &MouseWheelEventBase::editWheelRotation(void)
{
    return _sfWheelRotation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfWheelRotation field.
inline
const Int32 &MouseWheelEventBase::getWheelRotation(void) const
{
    return _sfWheelRotation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfWheelRotation field.
inline
void MouseWheelEventBase::setWheelRotation(const Int32 &value)
{
    _sfWheelRotation.setValue(value);
}

//! Get the value of the MouseWheelEvent::_sfLocation field.
inline
Pnt2f &MouseWheelEventBase::editLocation(void)
{
    return _sfLocation.getValue();
}

//! Get the value of the MouseWheelEvent::_sfLocation field.
inline
const Pnt2f &MouseWheelEventBase::getLocation(void) const
{
    return _sfLocation.getValue();
}

//! Set the value of the MouseWheelEvent::_sfLocation field.
inline
void MouseWheelEventBase::setLocation(const Pnt2f &value)
{
    _sfLocation.setValue(value);
}

//! Get the value of the MouseWheelEvent::_sfViewport field.
inline
ViewportPtr &MouseWheelEventBase::editViewport(void)
{
    return _sfViewport.getValue();
}

//! Get the value of the MouseWheelEvent::_sfViewport field.
inline
const ViewportPtr &MouseWheelEventBase::getViewport(void) const
{
    return _sfViewport.getValue();
}

//! Set the value of the MouseWheelEvent::_sfViewport field.
inline
void MouseWheelEventBase::setViewport(const ViewportPtr &value)
{
    _sfViewport.setValue(value);
}


OSG_END_NAMESPACE

