/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox Particle System                        *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystem!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ParticleSystemBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 ParticleSystemBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! access the producer type of the class
inline
const EventProducerType &ParticleSystemBase::getProducerClassType(void)
{
    return _producerType;
}

//! access the producer type id of the class
inline
UInt32 ParticleSystemBase::getProducerClassTypeId(void)
{
    return _producerType.getId();
}

//! create a new instance of the class
inline
ParticleSystemPtr ParticleSystemBase::create(void) 
{
    ParticleSystemPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = ParticleSystemPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
ParticleSystemPtr ParticleSystemBase::createEmpty(void) 
{ 
    ParticleSystemPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the ParticleSystem::_mfInternalPositions field.
inline
const MFPnt3f *ParticleSystemBase::getMFInternalPositions(void) const
{
    return &_mfInternalPositions;
}

//! Get the ParticleSystem::_mfInternalPositions field.
inline
MFPnt3f *ParticleSystemBase::editMFInternalPositions(void)
{
    return &_mfInternalPositions;
}

//! Get the ParticleSystem::_mfInternalSecPositions field.
inline
const MFPnt3f *ParticleSystemBase::getMFInternalSecPositions(void) const
{
    return &_mfInternalSecPositions;
}

//! Get the ParticleSystem::_mfInternalSecPositions field.
inline
MFPnt3f *ParticleSystemBase::editMFInternalSecPositions(void)
{
    return &_mfInternalSecPositions;
}

//! Get the ParticleSystem::_mfInternalNormals field.
inline
const MFVec3f *ParticleSystemBase::getMFInternalNormals(void) const
{
    return &_mfInternalNormals;
}

//! Get the ParticleSystem::_mfInternalNormals field.
inline
MFVec3f *ParticleSystemBase::editMFInternalNormals(void)
{
    return &_mfInternalNormals;
}

//! Get the ParticleSystem::_mfInternalColors field.
inline
const MFColor4f *ParticleSystemBase::getMFInternalColors(void) const
{
    return &_mfInternalColors;
}

//! Get the ParticleSystem::_mfInternalColors field.
inline
MFColor4f *ParticleSystemBase::editMFInternalColors(void)
{
    return &_mfInternalColors;
}

//! Get the ParticleSystem::_mfInternalSizes field.
inline
const MFVec3f *ParticleSystemBase::getMFInternalSizes(void) const
{
    return &_mfInternalSizes;
}

//! Get the ParticleSystem::_mfInternalSizes field.
inline
MFVec3f *ParticleSystemBase::editMFInternalSizes(void)
{
    return &_mfInternalSizes;
}

//! Get the ParticleSystem::_mfInternalLifespans field.
inline
const MFTime *ParticleSystemBase::getMFInternalLifespans(void) const
{
    return &_mfInternalLifespans;
}

//! Get the ParticleSystem::_mfInternalLifespans field.
inline
MFTime *ParticleSystemBase::editMFInternalLifespans(void)
{
    return &_mfInternalLifespans;
}

//! Get the ParticleSystem::_mfInternalAges field.
inline
const MFTime *ParticleSystemBase::getMFInternalAges(void) const
{
    return &_mfInternalAges;
}

//! Get the ParticleSystem::_mfInternalAges field.
inline
MFTime *ParticleSystemBase::editMFInternalAges(void)
{
    return &_mfInternalAges;
}

//! Get the ParticleSystem::_mfInternalVelocities field.
inline
const MFVec3f *ParticleSystemBase::getMFInternalVelocities(void) const
{
    return &_mfInternalVelocities;
}

//! Get the ParticleSystem::_mfInternalVelocities field.
inline
MFVec3f *ParticleSystemBase::editMFInternalVelocities(void)
{
    return &_mfInternalVelocities;
}

//! Get the ParticleSystem::_mfInternalSecVelocities field.
inline
const MFVec3f *ParticleSystemBase::getMFInternalSecVelocities(void) const
{
    return &_mfInternalSecVelocities;
}

//! Get the ParticleSystem::_mfInternalSecVelocities field.
inline
MFVec3f *ParticleSystemBase::editMFInternalSecVelocities(void)
{
    return &_mfInternalSecVelocities;
}

//! Get the ParticleSystem::_mfInternalAccelerations field.
inline
const MFVec3f *ParticleSystemBase::getMFInternalAccelerations(void) const
{
    return &_mfInternalAccelerations;
}

//! Get the ParticleSystem::_mfInternalAccelerations field.
inline
MFVec3f *ParticleSystemBase::editMFInternalAccelerations(void)
{
    return &_mfInternalAccelerations;
}

//! Get the ParticleSystem::_mfInternalAttributes field.
inline
const MFStringToUInt32Map *ParticleSystemBase::getMFInternalAttributes(void) const
{
    return &_mfInternalAttributes;
}

//! Get the ParticleSystem::_mfInternalAttributes field.
inline
MFStringToUInt32Map *ParticleSystemBase::editMFInternalAttributes(void)
{
    return &_mfInternalAttributes;
}

//! Get the ParticleSystem::_sfMaxParticles field.
inline
const SFUInt32 *ParticleSystemBase::getSFMaxParticles(void) const
{
    return &_sfMaxParticles;
}

//! Get the ParticleSystem::_sfMaxParticles field.
inline
SFUInt32 *ParticleSystemBase::editSFMaxParticles(void)
{
    return &_sfMaxParticles;
}

//! Get the ParticleSystem::_sfDynamic field.
inline
const SFBool *ParticleSystemBase::getSFDynamic(void) const
{
    return &_sfDynamic;
}

//! Get the ParticleSystem::_sfDynamic field.
inline
SFBool *ParticleSystemBase::editSFDynamic(void)
{
    return &_sfDynamic;
}

//! Get the ParticleSystem::_sfUpdateSecAttribs field.
inline
const SFBool *ParticleSystemBase::getSFUpdateSecAttribs(void) const
{
    return &_sfUpdateSecAttribs;
}

//! Get the ParticleSystem::_sfUpdateSecAttribs field.
inline
SFBool *ParticleSystemBase::editSFUpdateSecAttribs(void)
{
    return &_sfUpdateSecAttribs;
}

//! Get the ParticleSystem::_sfLastElapsedTime field.
inline
const SFTime *ParticleSystemBase::getSFLastElapsedTime(void) const
{
    return &_sfLastElapsedTime;
}

//! Get the ParticleSystem::_sfLastElapsedTime field.
inline
SFTime *ParticleSystemBase::editSFLastElapsedTime(void)
{
    return &_sfLastElapsedTime;
}

//! Get the ParticleSystem::_mfGenerators field.
inline
const MFParticleGeneratorPtr *ParticleSystemBase::getMFGenerators(void) const
{
    return &_mfGenerators;
}

//! Get the ParticleSystem::_mfGenerators field.
inline
MFParticleGeneratorPtr *ParticleSystemBase::editMFGenerators(void)
{
    return &_mfGenerators;
}

//! Get the ParticleSystem::_mfAffectors field.
inline
const MFParticleAffectorPtr *ParticleSystemBase::getMFAffectors(void) const
{
    return &_mfAffectors;
}

//! Get the ParticleSystem::_mfAffectors field.
inline
MFParticleAffectorPtr *ParticleSystemBase::editMFAffectors(void)
{
    return &_mfAffectors;
}

//! Get the ParticleSystem::_mfSystemAffectors field.
inline
const MFParticleSystemAffectorPtr *ParticleSystemBase::getMFSystemAffectors(void) const
{
    return &_mfSystemAffectors;
}

//! Get the ParticleSystem::_mfSystemAffectors field.
inline
MFParticleSystemAffectorPtr *ParticleSystemBase::editMFSystemAffectors(void)
{
    return &_mfSystemAffectors;
}


//! Get the value of the ParticleSystem::_sfMaxParticles field.
inline
UInt32 &ParticleSystemBase::editMaxParticles(void)
{
    return _sfMaxParticles.getValue();
}

//! Get the value of the ParticleSystem::_sfMaxParticles field.
inline
const UInt32 &ParticleSystemBase::getMaxParticles(void) const
{
    return _sfMaxParticles.getValue();
}

//! Set the value of the ParticleSystem::_sfMaxParticles field.
inline
void ParticleSystemBase::setMaxParticles(const UInt32 &value)
{
    _sfMaxParticles.setValue(value);
}

//! Get the value of the ParticleSystem::_sfDynamic field.
inline
bool &ParticleSystemBase::editDynamic(void)
{
    return _sfDynamic.getValue();
}

//! Get the value of the ParticleSystem::_sfDynamic field.
inline
const bool &ParticleSystemBase::getDynamic(void) const
{
    return _sfDynamic.getValue();
}

//! Set the value of the ParticleSystem::_sfDynamic field.
inline
void ParticleSystemBase::setDynamic(const bool &value)
{
    _sfDynamic.setValue(value);
}

//! Get the value of the ParticleSystem::_sfUpdateSecAttribs field.
inline
bool &ParticleSystemBase::editUpdateSecAttribs(void)
{
    return _sfUpdateSecAttribs.getValue();
}

//! Get the value of the ParticleSystem::_sfUpdateSecAttribs field.
inline
const bool &ParticleSystemBase::getUpdateSecAttribs(void) const
{
    return _sfUpdateSecAttribs.getValue();
}

//! Set the value of the ParticleSystem::_sfUpdateSecAttribs field.
inline
void ParticleSystemBase::setUpdateSecAttribs(const bool &value)
{
    _sfUpdateSecAttribs.setValue(value);
}

//! Get the value of the ParticleSystem::_sfLastElapsedTime field.
inline
Time &ParticleSystemBase::editLastElapsedTime(void)
{
    return _sfLastElapsedTime.getValue();
}

//! Get the value of the ParticleSystem::_sfLastElapsedTime field.
inline
const Time &ParticleSystemBase::getLastElapsedTime(void) const
{
    return _sfLastElapsedTime.getValue();
}

//! Set the value of the ParticleSystem::_sfLastElapsedTime field.
inline
void ParticleSystemBase::setLastElapsedTime(const Time &value)
{
    _sfLastElapsedTime.setValue(value);
}


//! Get the value of the \a index element the ParticleSystem::_mfInternalPositions field.
inline
Pnt3f &ParticleSystemBase::editInternalPositions(const UInt32 index)
{
    return _mfInternalPositions[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalPositions field.
inline
const Pnt3f &ParticleSystemBase::getInternalPositions(const UInt32 index) const
{
    return _mfInternalPositions[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalPositions field.
inline
MFPnt3f &ParticleSystemBase::getInternalPositions(void)
{
    return _mfInternalPositions;
}

//! Get the ParticleSystem::_mfInternalPositions field.
inline
const MFPnt3f &ParticleSystemBase::getInternalPositions(void) const
{
    return _mfInternalPositions;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalSecPositions field.
inline
Pnt3f &ParticleSystemBase::editInternalSecPositions(const UInt32 index)
{
    return _mfInternalSecPositions[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalSecPositions field.
inline
const Pnt3f &ParticleSystemBase::getInternalSecPositions(const UInt32 index) const
{
    return _mfInternalSecPositions[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalSecPositions field.
inline
MFPnt3f &ParticleSystemBase::getInternalSecPositions(void)
{
    return _mfInternalSecPositions;
}

//! Get the ParticleSystem::_mfInternalSecPositions field.
inline
const MFPnt3f &ParticleSystemBase::getInternalSecPositions(void) const
{
    return _mfInternalSecPositions;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalNormals field.
inline
Vec3f &ParticleSystemBase::editInternalNormals(const UInt32 index)
{
    return _mfInternalNormals[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalNormals field.
inline
const Vec3f &ParticleSystemBase::getInternalNormals(const UInt32 index) const
{
    return _mfInternalNormals[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalNormals field.
inline
MFVec3f &ParticleSystemBase::getInternalNormals(void)
{
    return _mfInternalNormals;
}

//! Get the ParticleSystem::_mfInternalNormals field.
inline
const MFVec3f &ParticleSystemBase::getInternalNormals(void) const
{
    return _mfInternalNormals;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalColors field.
inline
Color4f &ParticleSystemBase::editInternalColors(const UInt32 index)
{
    return _mfInternalColors[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalColors field.
inline
const Color4f &ParticleSystemBase::getInternalColors(const UInt32 index) const
{
    return _mfInternalColors[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalColors field.
inline
MFColor4f &ParticleSystemBase::getInternalColors(void)
{
    return _mfInternalColors;
}

//! Get the ParticleSystem::_mfInternalColors field.
inline
const MFColor4f &ParticleSystemBase::getInternalColors(void) const
{
    return _mfInternalColors;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalSizes field.
inline
Vec3f &ParticleSystemBase::editInternalSizes(const UInt32 index)
{
    return _mfInternalSizes[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalSizes field.
inline
const Vec3f &ParticleSystemBase::getInternalSizes(const UInt32 index) const
{
    return _mfInternalSizes[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalSizes field.
inline
MFVec3f &ParticleSystemBase::getInternalSizes(void)
{
    return _mfInternalSizes;
}

//! Get the ParticleSystem::_mfInternalSizes field.
inline
const MFVec3f &ParticleSystemBase::getInternalSizes(void) const
{
    return _mfInternalSizes;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalLifespans field.
inline
Time &ParticleSystemBase::editInternalLifespans(const UInt32 index)
{
    return _mfInternalLifespans[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalLifespans field.
inline
const Time &ParticleSystemBase::getInternalLifespans(const UInt32 index) const
{
    return _mfInternalLifespans[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalLifespans field.
inline
MFTime &ParticleSystemBase::getInternalLifespans(void)
{
    return _mfInternalLifespans;
}

//! Get the ParticleSystem::_mfInternalLifespans field.
inline
const MFTime &ParticleSystemBase::getInternalLifespans(void) const
{
    return _mfInternalLifespans;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalAges field.
inline
Time &ParticleSystemBase::editInternalAges(const UInt32 index)
{
    return _mfInternalAges[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalAges field.
inline
const Time &ParticleSystemBase::getInternalAges(const UInt32 index) const
{
    return _mfInternalAges[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalAges field.
inline
MFTime &ParticleSystemBase::getInternalAges(void)
{
    return _mfInternalAges;
}

//! Get the ParticleSystem::_mfInternalAges field.
inline
const MFTime &ParticleSystemBase::getInternalAges(void) const
{
    return _mfInternalAges;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalVelocities field.
inline
Vec3f &ParticleSystemBase::editInternalVelocities(const UInt32 index)
{
    return _mfInternalVelocities[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalVelocities field.
inline
const Vec3f &ParticleSystemBase::getInternalVelocities(const UInt32 index) const
{
    return _mfInternalVelocities[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalVelocities field.
inline
MFVec3f &ParticleSystemBase::getInternalVelocities(void)
{
    return _mfInternalVelocities;
}

//! Get the ParticleSystem::_mfInternalVelocities field.
inline
const MFVec3f &ParticleSystemBase::getInternalVelocities(void) const
{
    return _mfInternalVelocities;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalSecVelocities field.
inline
Vec3f &ParticleSystemBase::editInternalSecVelocities(const UInt32 index)
{
    return _mfInternalSecVelocities[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalSecVelocities field.
inline
const Vec3f &ParticleSystemBase::getInternalSecVelocities(const UInt32 index) const
{
    return _mfInternalSecVelocities[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalSecVelocities field.
inline
MFVec3f &ParticleSystemBase::getInternalSecVelocities(void)
{
    return _mfInternalSecVelocities;
}

//! Get the ParticleSystem::_mfInternalSecVelocities field.
inline
const MFVec3f &ParticleSystemBase::getInternalSecVelocities(void) const
{
    return _mfInternalSecVelocities;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalAccelerations field.
inline
Vec3f &ParticleSystemBase::editInternalAccelerations(const UInt32 index)
{
    return _mfInternalAccelerations[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalAccelerations field.
inline
const Vec3f &ParticleSystemBase::getInternalAccelerations(const UInt32 index) const
{
    return _mfInternalAccelerations[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalAccelerations field.
inline
MFVec3f &ParticleSystemBase::getInternalAccelerations(void)
{
    return _mfInternalAccelerations;
}

//! Get the ParticleSystem::_mfInternalAccelerations field.
inline
const MFVec3f &ParticleSystemBase::getInternalAccelerations(void) const
{
    return _mfInternalAccelerations;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfInternalAttributes field.
inline
StringToUInt32Map &ParticleSystemBase::editInternalAttributes(const UInt32 index)
{
    return _mfInternalAttributes[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfInternalAttributes field.
inline
const StringToUInt32Map &ParticleSystemBase::getInternalAttributes(const UInt32 index) const
{
    return _mfInternalAttributes[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfInternalAttributes field.
inline
MFStringToUInt32Map &ParticleSystemBase::getInternalAttributes(void)
{
    return _mfInternalAttributes;
}

//! Get the ParticleSystem::_mfInternalAttributes field.
inline
const MFStringToUInt32Map &ParticleSystemBase::getInternalAttributes(void) const
{
    return _mfInternalAttributes;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfGenerators field.
inline
ParticleGeneratorPtr &ParticleSystemBase::editGenerators(const UInt32 index)
{
    return _mfGenerators[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfGenerators field.
inline
const ParticleGeneratorPtr &ParticleSystemBase::getGenerators(const UInt32 index) const
{
    return _mfGenerators[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfGenerators field.
inline
MFParticleGeneratorPtr &ParticleSystemBase::getGenerators(void)
{
    return _mfGenerators;
}

//! Get the ParticleSystem::_mfGenerators field.
inline
const MFParticleGeneratorPtr &ParticleSystemBase::getGenerators(void) const
{
    return _mfGenerators;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfAffectors field.
inline
ParticleAffectorPtr &ParticleSystemBase::editAffectors(const UInt32 index)
{
    return _mfAffectors[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfAffectors field.
inline
const ParticleAffectorPtr &ParticleSystemBase::getAffectors(const UInt32 index) const
{
    return _mfAffectors[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfAffectors field.
inline
MFParticleAffectorPtr &ParticleSystemBase::getAffectors(void)
{
    return _mfAffectors;
}

//! Get the ParticleSystem::_mfAffectors field.
inline
const MFParticleAffectorPtr &ParticleSystemBase::getAffectors(void) const
{
    return _mfAffectors;
}

#endif
//! Get the value of the \a index element the ParticleSystem::_mfSystemAffectors field.
inline
ParticleSystemAffectorPtr &ParticleSystemBase::editSystemAffectors(const UInt32 index)
{
    return _mfSystemAffectors[index];
}

//! Get the value of the \a index element the ParticleSystem::_mfSystemAffectors field.
inline
const ParticleSystemAffectorPtr &ParticleSystemBase::getSystemAffectors(const UInt32 index) const
{
    return _mfSystemAffectors[index];
}

#ifndef OSG_2_PREP
//! Get the ParticleSystem::_mfSystemAffectors field.
inline
MFParticleSystemAffectorPtr &ParticleSystemBase::getSystemAffectors(void)
{
    return _mfSystemAffectors;
}

//! Get the ParticleSystem::_mfSystemAffectors field.
inline
const MFParticleSystemAffectorPtr &ParticleSystemBase::getSystemAffectors(void) const
{
    return _mfSystemAffectors;
}

#endif

inline
EventConnection ParticleSystemBase::attachActivity(ActivityPtr TheActivity, UInt32 ProducedEventId)
{
    return _Producer.attachActivity(TheActivity, ProducedEventId);
}

inline
bool ParticleSystemBase::isActivityAttached(ActivityPtr TheActivity, UInt32 ProducedEventId) const
{
    return _Producer.isActivityAttached(TheActivity, ProducedEventId);
}

inline
UInt32 ParticleSystemBase::getNumActivitiesAttached(UInt32 ProducedEventId) const
{
    return _Producer.getNumActivitiesAttached(ProducedEventId);
}

inline
ActivityPtr ParticleSystemBase::getAttachedActivity(UInt32 ProducedEventId, UInt32 ActivityIndex) const
{
    return _Producer.getAttachedActivity(ProducedEventId,ActivityIndex);
}

inline
void ParticleSystemBase::detachActivity(ActivityPtr TheActivity, UInt32 ProducedEventId)
{
    _Producer.detachActivity(TheActivity, ProducedEventId);
}

inline
UInt32 ParticleSystemBase::getNumProducedEvents(void) const
{
    return _Producer.getNumProducedEvents();
}

inline
const MethodDescription *ParticleSystemBase::getProducedEventDescription(const Char8 *ProducedEventName) const
{
    return _Producer.getProducedEventDescription(ProducedEventName);
}

inline
const MethodDescription *ParticleSystemBase::getProducedEventDescription(UInt32 ProducedEventId) const
{
    return _Producer.getProducedEventDescription(ProducedEventId);
}

inline
UInt32 ParticleSystemBase::getProducedEventId(const Char8 *ProducedEventName) const
{
    return _Producer.getProducedEventId(ProducedEventName);
}
OSG_END_NAMESPACE

