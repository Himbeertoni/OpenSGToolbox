/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox Particle System                        *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DynamicsParticleGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDYNAMICSPARTICLEGENERATORBASE_H_
#define _OSGDYNAMICSPARTICLEGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGParticleSystemDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGParticleGenerator.h" // Parent

#include "Distributions/3D/OSGDistribution3DFields.h" // PositionDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // SecPositionDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // NormalDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // ColorDistribution type
#include "Distributions/1D/OSGDistribution1DFields.h" // TransparencyDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // SizeDistribution type
#include "Distributions/1D/OSGDistribution1DFields.h" // LifespanDistribution type
#include "Distributions/1D/OSGDistribution1DFields.h" // AgeDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // VelocityDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // SecVelocityDistribution type
#include "Distributions/3D/OSGDistribution3DFields.h" // AccelerationDistribution type

#include "OSGDynamicsParticleGeneratorFields.h"
OSG_BEGIN_NAMESPACE

class DynamicsParticleGenerator;
class BinaryDataHandler;

//! \brief DynamicsParticleGenerator Base Class.

class OSG_PARTICLESYSTEMLIB_DLLMAPPING DynamicsParticleGeneratorBase : public ParticleGenerator
{
  private:

    typedef ParticleGenerator    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef DynamicsParticleGeneratorPtr  Ptr;

    enum
    {
        PositionDistributionFieldId     = Inherited::NextFieldId,
        SecPositionDistributionFieldId  = PositionDistributionFieldId     + 1,
        NormalDistributionFieldId       = SecPositionDistributionFieldId  + 1,
        ColorDistributionFieldId        = NormalDistributionFieldId       + 1,
        TransparencyDistributionFieldId = ColorDistributionFieldId        + 1,
        SizeDistributionFieldId         = TransparencyDistributionFieldId + 1,
        LifespanDistributionFieldId     = SizeDistributionFieldId         + 1,
        AgeDistributionFieldId          = LifespanDistributionFieldId     + 1,
        VelocityDistributionFieldId     = AgeDistributionFieldId          + 1,
        SecVelocityDistributionFieldId  = VelocityDistributionFieldId     + 1,
        AccelerationDistributionFieldId = SecVelocityDistributionFieldId  + 1,
        NextFieldId                     = AccelerationDistributionFieldId + 1
    };

    static const OSG::BitVector PositionDistributionFieldMask;
    static const OSG::BitVector SecPositionDistributionFieldMask;
    static const OSG::BitVector NormalDistributionFieldMask;
    static const OSG::BitVector ColorDistributionFieldMask;
    static const OSG::BitVector TransparencyDistributionFieldMask;
    static const OSG::BitVector SizeDistributionFieldMask;
    static const OSG::BitVector LifespanDistributionFieldMask;
    static const OSG::BitVector AgeDistributionFieldMask;
    static const OSG::BitVector VelocityDistributionFieldMask;
    static const OSG::BitVector SecVelocityDistributionFieldMask;
    static const OSG::BitVector AccelerationDistributionFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


           SFDistribution3DPtr *editSFPositionDistribution(void);
     const SFDistribution3DPtr *getSFPositionDistribution(void) const;

           SFDistribution3DPtr *editSFSecPositionDistribution(void);
     const SFDistribution3DPtr *getSFSecPositionDistribution(void) const;

           SFDistribution3DPtr *editSFNormalDistribution(void);
     const SFDistribution3DPtr *getSFNormalDistribution(void) const;

           SFDistribution3DPtr *editSFColorDistribution(void);
     const SFDistribution3DPtr *getSFColorDistribution(void) const;

           SFDistribution1DPtr *editSFTransparencyDistribution(void);
     const SFDistribution1DPtr *getSFTransparencyDistribution(void) const;

           SFDistribution3DPtr *editSFSizeDistribution(void);
     const SFDistribution3DPtr *getSFSizeDistribution(void) const;

           SFDistribution1DPtr *editSFLifespanDistribution(void);
     const SFDistribution1DPtr *getSFLifespanDistribution(void) const;

           SFDistribution1DPtr *editSFAgeDistribution(void);
     const SFDistribution1DPtr *getSFAgeDistribution(void) const;

           SFDistribution3DPtr *editSFVelocityDistribution(void);
     const SFDistribution3DPtr *getSFVelocityDistribution(void) const;

           SFDistribution3DPtr *editSFSecVelocityDistribution(void);
     const SFDistribution3DPtr *getSFSecVelocityDistribution(void) const;

           SFDistribution3DPtr *editSFAccelerationDistribution(void);
     const SFDistribution3DPtr *getSFAccelerationDistribution(void) const;


           Distribution3DPtr   &editPositionDistribution(void);
     const Distribution3DPtr   &getPositionDistribution(void) const;

           Distribution3DPtr   &editSecPositionDistribution(void);
     const Distribution3DPtr   &getSecPositionDistribution(void) const;

           Distribution3DPtr   &editNormalDistribution(void);
     const Distribution3DPtr   &getNormalDistribution(void) const;

           Distribution3DPtr   &editColorDistribution(void);
     const Distribution3DPtr   &getColorDistribution(void) const;

           Distribution1DPtr   &editTransparencyDistribution(void);
     const Distribution1DPtr   &getTransparencyDistribution(void) const;

           Distribution3DPtr   &editSizeDistribution(void);
     const Distribution3DPtr   &getSizeDistribution(void) const;

           Distribution1DPtr   &editLifespanDistribution(void);
     const Distribution1DPtr   &getLifespanDistribution(void) const;

           Distribution1DPtr   &editAgeDistribution(void);
     const Distribution1DPtr   &getAgeDistribution(void) const;

           Distribution3DPtr   &editVelocityDistribution(void);
     const Distribution3DPtr   &getVelocityDistribution(void) const;

           Distribution3DPtr   &editSecVelocityDistribution(void);
     const Distribution3DPtr   &getSecVelocityDistribution(void) const;

           Distribution3DPtr   &editAccelerationDistribution(void);
     const Distribution3DPtr   &getAccelerationDistribution(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setPositionDistribution( const Distribution3DPtr &value );
     void setSecPositionDistribution( const Distribution3DPtr &value );
     void setNormalDistribution( const Distribution3DPtr &value );
     void setColorDistribution( const Distribution3DPtr &value );
     void setTransparencyDistribution( const Distribution1DPtr &value );
     void setSizeDistribution( const Distribution3DPtr &value );
     void setLifespanDistribution( const Distribution1DPtr &value );
     void setAgeDistribution( const Distribution1DPtr &value );
     void setVelocityDistribution( const Distribution3DPtr &value );
     void setSecVelocityDistribution( const Distribution3DPtr &value );
     void setAccelerationDistribution( const Distribution3DPtr &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFDistribution3DPtr   _sfPositionDistribution;
    SFDistribution3DPtr   _sfSecPositionDistribution;
    SFDistribution3DPtr   _sfNormalDistribution;
    SFDistribution3DPtr   _sfColorDistribution;
    SFDistribution1DPtr   _sfTransparencyDistribution;
    SFDistribution3DPtr   _sfSizeDistribution;
    SFDistribution1DPtr   _sfLifespanDistribution;
    SFDistribution1DPtr   _sfAgeDistribution;
    SFDistribution3DPtr   _sfVelocityDistribution;
    SFDistribution3DPtr   _sfSecVelocityDistribution;
    SFDistribution3DPtr   _sfAccelerationDistribution;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DynamicsParticleGeneratorBase(void);
    DynamicsParticleGeneratorBase(const DynamicsParticleGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DynamicsParticleGeneratorBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      DynamicsParticleGeneratorBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      DynamicsParticleGeneratorBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DynamicsParticleGeneratorBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef DynamicsParticleGeneratorBase *DynamicsParticleGeneratorBaseP;

typedef osgIF<DynamicsParticleGeneratorBase::isNodeCore,
              CoredNodePtr<DynamicsParticleGenerator>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet DynamicsParticleGeneratorNodePtr;

typedef RefPtr<DynamicsParticleGeneratorPtr> DynamicsParticleGeneratorRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGDYNAMICSPARTICLEGENERATORBASE_H_ */
