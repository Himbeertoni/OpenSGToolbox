/*---------------------------------------------------------------------------*\
 *                         OpenSG ToolBox Physics                            *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          www.vrac.iastate.edu                             *
 *                                                                           *
 *                Authors: Behboud Kalantary, David Kabala                   *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsCharacteristicsDrawable
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPHYSICSCHARACTERISTICSDRAWABLEBASE_H_
#define _OSGPHYSICSCHARACTERISTICSDRAWABLEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGPhysicsDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include <OpenSG/OSGDrawable.h> // Parent

#include <OpenSG/OSGNodeFields.h> // Root type
#include <OpenSG/OSGBoolFields.h> // DrawGeoms type
#include <OpenSG/OSGColor4fFields.h> // GeomColor type
#include <OpenSG/OSGBoolFields.h> // DrawJoints type
#include <OpenSG/OSGColor4fFields.h> // JointColor type
#include <OpenSG/OSGBoolFields.h> // DrawBodies type
#include <OpenSG/OSGColor4fFields.h> // BodyColor type
#include <OpenSG/OSGBoolFields.h> // DrawSpaces type
#include <OpenSG/OSGColor4fFields.h> // SpaceColor type
#include <OpenSG/OSGBoolFields.h> // DrawWorlds type
#include <OpenSG/OSGColor4fFields.h> // WorldColor type

#include "OSGPhysicsCharacteristicsDrawableFields.h"
OSG_BEGIN_NAMESPACE

class PhysicsCharacteristicsDrawable;
class BinaryDataHandler;

//! \brief PhysicsCharacteristicsDrawable Base Class.

class OSG_PHYSICSLIB_DLLMAPPING PhysicsCharacteristicsDrawableBase : public Drawable
{
  private:

    typedef Drawable    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef PhysicsCharacteristicsDrawablePtr  Ptr;

    enum
    {
        RootFieldId       = Inherited::NextFieldId,
        DrawGeomsFieldId  = RootFieldId       + 1,
        GeomColorFieldId  = DrawGeomsFieldId  + 1,
        DrawJointsFieldId = GeomColorFieldId  + 1,
        JointColorFieldId = DrawJointsFieldId + 1,
        DrawBodiesFieldId = JointColorFieldId + 1,
        BodyColorFieldId  = DrawBodiesFieldId + 1,
        DrawSpacesFieldId = BodyColorFieldId  + 1,
        SpaceColorFieldId = DrawSpacesFieldId + 1,
        DrawWorldsFieldId = SpaceColorFieldId + 1,
        WorldColorFieldId = DrawWorldsFieldId + 1,
        NextFieldId       = WorldColorFieldId + 1
    };

    static const OSG::BitVector RootFieldMask;
    static const OSG::BitVector DrawGeomsFieldMask;
    static const OSG::BitVector GeomColorFieldMask;
    static const OSG::BitVector DrawJointsFieldMask;
    static const OSG::BitVector JointColorFieldMask;
    static const OSG::BitVector DrawBodiesFieldMask;
    static const OSG::BitVector BodyColorFieldMask;
    static const OSG::BitVector DrawSpacesFieldMask;
    static const OSG::BitVector SpaceColorFieldMask;
    static const OSG::BitVector DrawWorldsFieldMask;
    static const OSG::BitVector WorldColorFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


           SFNodePtr           *editSFRoot           (void);
     const SFNodePtr           *getSFRoot           (void) const;

           SFBool              *editSFDrawGeoms      (void);
     const SFBool              *getSFDrawGeoms      (void) const;

           SFColor4f           *editSFGeomColor      (void);
     const SFColor4f           *getSFGeomColor      (void) const;

           SFBool              *editSFDrawJoints     (void);
     const SFBool              *getSFDrawJoints     (void) const;

           SFColor4f           *editSFJointColor     (void);
     const SFColor4f           *getSFJointColor     (void) const;

           SFBool              *editSFDrawBodies     (void);
     const SFBool              *getSFDrawBodies     (void) const;

           SFColor4f           *editSFBodyColor      (void);
     const SFColor4f           *getSFBodyColor      (void) const;

           SFBool              *editSFDrawSpaces     (void);
     const SFBool              *getSFDrawSpaces     (void) const;

           SFColor4f           *editSFSpaceColor     (void);
     const SFColor4f           *getSFSpaceColor     (void) const;

           SFBool              *editSFDrawWorlds     (void);
     const SFBool              *getSFDrawWorlds     (void) const;

           SFColor4f           *editSFWorldColor     (void);
     const SFColor4f           *getSFWorldColor     (void) const;


           NodePtr             &editRoot           (void);
     const NodePtr             &getRoot           (void) const;

           bool                &editDrawGeoms      (void);
     const bool                &getDrawGeoms      (void) const;

           Color4f             &editGeomColor      (void);
     const Color4f             &getGeomColor      (void) const;

           bool                &editDrawJoints     (void);
     const bool                &getDrawJoints     (void) const;

           Color4f             &editJointColor     (void);
     const Color4f             &getJointColor     (void) const;

           bool                &editDrawBodies     (void);
     const bool                &getDrawBodies     (void) const;

           Color4f             &editBodyColor      (void);
     const Color4f             &getBodyColor      (void) const;

           bool                &editDrawSpaces     (void);
     const bool                &getDrawSpaces     (void) const;

           Color4f             &editSpaceColor     (void);
     const Color4f             &getSpaceColor     (void) const;

           bool                &editDrawWorlds     (void);
     const bool                &getDrawWorlds     (void) const;

           Color4f             &editWorldColor     (void);
     const Color4f             &getWorldColor     (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setRoot           ( const NodePtr &value );
     void setDrawGeoms      ( const bool &value );
     void setGeomColor      ( const Color4f &value );
     void setDrawJoints     ( const bool &value );
     void setJointColor     ( const Color4f &value );
     void setDrawBodies     ( const bool &value );
     void setBodyColor      ( const Color4f &value );
     void setDrawSpaces     ( const bool &value );
     void setSpaceColor     ( const Color4f &value );
     void setDrawWorlds     ( const bool &value );
     void setWorldColor     ( const Color4f &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  PhysicsCharacteristicsDrawablePtr      create          (void); 
    static  PhysicsCharacteristicsDrawablePtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFNodePtr           _sfRoot;
    SFBool              _sfDrawGeoms;
    SFColor4f           _sfGeomColor;
    SFBool              _sfDrawJoints;
    SFColor4f           _sfJointColor;
    SFBool              _sfDrawBodies;
    SFColor4f           _sfBodyColor;
    SFBool              _sfDrawSpaces;
    SFColor4f           _sfSpaceColor;
    SFBool              _sfDrawWorlds;
    SFColor4f           _sfWorldColor;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    PhysicsCharacteristicsDrawableBase(void);
    PhysicsCharacteristicsDrawableBase(const PhysicsCharacteristicsDrawableBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~PhysicsCharacteristicsDrawableBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      PhysicsCharacteristicsDrawableBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      PhysicsCharacteristicsDrawableBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const PhysicsCharacteristicsDrawableBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef PhysicsCharacteristicsDrawableBase *PhysicsCharacteristicsDrawableBaseP;

typedef osgIF<PhysicsCharacteristicsDrawableBase::isNodeCore,
              CoredNodePtr<PhysicsCharacteristicsDrawable>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet PhysicsCharacteristicsDrawableNodePtr;

typedef RefPtr<PhysicsCharacteristicsDrawablePtr> PhysicsCharacteristicsDrawableRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGPHYSICSCHARACTERISTICSDRAWABLEBASE_H_ */
