/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsRayGeom
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPHYSICSRAYGEOMBASE_H_
#define _OSGPHYSICSRAYGEOMBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGPhysicsDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGPhysicsGeom.h" // Parent

#include <OpenSG/OSGReal32Fields.h> // Length type
#include <OpenSG/OSGPnt3fFields.h> // RayPosition type
#include <OpenSG/OSGVec3fFields.h> // Direction type
#include <OpenSG/OSGBoolFields.h> // ClosestHit type

#include "OSGPhysicsRayGeomFields.h"
OSG_BEGIN_NAMESPACE

class PhysicsRayGeom;
class BinaryDataHandler;

//! \brief PhysicsRayGeom Base Class.

class OSG_PHYSICSLIB_DLLMAPPING PhysicsRayGeomBase : public PhysicsGeom
{
  private:

    typedef PhysicsGeom    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef PhysicsRayGeomPtr  Ptr;

    enum
    {
        LengthFieldId      = Inherited::NextFieldId,
        RayPositionFieldId = LengthFieldId      + 1,
        DirectionFieldId   = RayPositionFieldId + 1,
        ClosestHitFieldId  = DirectionFieldId   + 1,
        NextFieldId        = ClosestHitFieldId  + 1
    };

    static const OSG::BitVector LengthFieldMask;
    static const OSG::BitVector RayPositionFieldMask;
    static const OSG::BitVector DirectionFieldMask;
    static const OSG::BitVector ClosestHitFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


           SFReal32            *editSFLength         (void);
     const SFReal32            *getSFLength         (void) const;

           SFPnt3f             *editSFRayPosition    (void);
     const SFPnt3f             *getSFRayPosition    (void) const;

           SFVec3f             *editSFDirection      (void);
     const SFVec3f             *getSFDirection      (void) const;

           SFBool              *editSFClosestHit     (void);
     const SFBool              *getSFClosestHit     (void) const;


           Real32              &editLength         (void);
     const Real32              &getLength         (void) const;

           Pnt3f               &editRayPosition    (void);
     const Pnt3f               &getRayPosition    (void) const;

           Vec3f               &editDirection      (void);
     const Vec3f               &getDirection      (void) const;

           bool                &editClosestHit     (void);
     const bool                &getClosestHit     (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setLength         ( const Real32 &value );
     void setRayPosition    ( const Pnt3f &value );
     void setDirection      ( const Vec3f &value );
     void setClosestHit     ( const bool &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  PhysicsRayGeomPtr      create          (void); 
    static  PhysicsRayGeomPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFReal32            _sfLength;
    SFPnt3f             _sfRayPosition;
    SFVec3f             _sfDirection;
    SFBool              _sfClosestHit;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    PhysicsRayGeomBase(void);
    PhysicsRayGeomBase(const PhysicsRayGeomBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~PhysicsRayGeomBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      PhysicsRayGeomBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      PhysicsRayGeomBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const PhysicsRayGeomBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef PhysicsRayGeomBase *PhysicsRayGeomBaseP;

typedef osgIF<PhysicsRayGeomBase::isNodeCore,
              CoredNodePtr<PhysicsRayGeom>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet PhysicsRayGeomNodePtr;

typedef RefPtr<PhysicsRayGeomPtr> PhysicsRayGeomRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGPHYSICSRAYGEOMBASE_H_ */
