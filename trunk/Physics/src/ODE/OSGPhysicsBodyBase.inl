/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PhysicsBody!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &PhysicsBodyBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 PhysicsBodyBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
PhysicsBodyPtr PhysicsBodyBase::create(void) 
{
    PhysicsBodyPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = PhysicsBodyPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
PhysicsBodyPtr PhysicsBodyBase::createEmpty(void) 
{ 
    PhysicsBodyPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the PhysicsBody::_sfPosition field.
inline
const SFVec3f *PhysicsBodyBase::getSFPosition(void) const
{
    return &_sfPosition;
}

//! Get the PhysicsBody::_sfPosition field.
inline
SFVec3f *PhysicsBodyBase::editSFPosition(void)
{
    return &_sfPosition;
}

//! Get the PhysicsBody::_sfRotation field.
inline
const SFMatrix *PhysicsBodyBase::getSFRotation(void) const
{
    return &_sfRotation;
}

//! Get the PhysicsBody::_sfRotation field.
inline
SFMatrix *PhysicsBodyBase::editSFRotation(void)
{
    return &_sfRotation;
}

//! Get the PhysicsBody::_sfQuaternion field.
inline
const SFQuaternion *PhysicsBodyBase::getSFQuaternion(void) const
{
    return &_sfQuaternion;
}

//! Get the PhysicsBody::_sfQuaternion field.
inline
SFQuaternion *PhysicsBodyBase::editSFQuaternion(void)
{
    return &_sfQuaternion;
}

//! Get the PhysicsBody::_sfLinearVel field.
inline
const SFVec3f *PhysicsBodyBase::getSFLinearVel(void) const
{
    return &_sfLinearVel;
}

//! Get the PhysicsBody::_sfLinearVel field.
inline
SFVec3f *PhysicsBodyBase::editSFLinearVel(void)
{
    return &_sfLinearVel;
}

//! Get the PhysicsBody::_sfAngularVel field.
inline
const SFVec3f *PhysicsBodyBase::getSFAngularVel(void) const
{
    return &_sfAngularVel;
}

//! Get the PhysicsBody::_sfAngularVel field.
inline
SFVec3f *PhysicsBodyBase::editSFAngularVel(void)
{
    return &_sfAngularVel;
}

//! Get the PhysicsBody::_sfForce field.
inline
const SFVec3f *PhysicsBodyBase::getSFForce(void) const
{
    return &_sfForce;
}

//! Get the PhysicsBody::_sfForce field.
inline
SFVec3f *PhysicsBodyBase::editSFForce(void)
{
    return &_sfForce;
}

//! Get the PhysicsBody::_sfTorque field.
inline
const SFVec3f *PhysicsBodyBase::getSFTorque(void) const
{
    return &_sfTorque;
}

//! Get the PhysicsBody::_sfTorque field.
inline
SFVec3f *PhysicsBodyBase::editSFTorque(void)
{
    return &_sfTorque;
}

//! Get the PhysicsBody::_sfMass field.
inline
const SFReal32 *PhysicsBodyBase::getSFMass(void) const
{
    return &_sfMass;
}

//! Get the PhysicsBody::_sfMass field.
inline
SFReal32 *PhysicsBodyBase::editSFMass(void)
{
    return &_sfMass;
}

//! Get the PhysicsBody::_sfMassCenterOfGravity field.
inline
const SFVec3f *PhysicsBodyBase::getSFMassCenterOfGravity(void) const
{
    return &_sfMassCenterOfGravity;
}

//! Get the PhysicsBody::_sfMassCenterOfGravity field.
inline
SFVec3f *PhysicsBodyBase::editSFMassCenterOfGravity(void)
{
    return &_sfMassCenterOfGravity;
}

//! Get the PhysicsBody::_sfMassInertiaTensor field.
inline
const SFMatrix *PhysicsBodyBase::getSFMassInertiaTensor(void) const
{
    return &_sfMassInertiaTensor;
}

//! Get the PhysicsBody::_sfMassInertiaTensor field.
inline
SFMatrix *PhysicsBodyBase::editSFMassInertiaTensor(void)
{
    return &_sfMassInertiaTensor;
}

//! Get the PhysicsBody::_sfAutoDisableFlag field.
inline
const SFInt32 *PhysicsBodyBase::getSFAutoDisableFlag(void) const
{
    return &_sfAutoDisableFlag;
}

//! Get the PhysicsBody::_sfAutoDisableFlag field.
inline
SFInt32 *PhysicsBodyBase::editSFAutoDisableFlag(void)
{
    return &_sfAutoDisableFlag;
}

//! Get the PhysicsBody::_sfAutoDisableLinearThreshold field.
inline
const SFReal32 *PhysicsBodyBase::getSFAutoDisableLinearThreshold(void) const
{
    return &_sfAutoDisableLinearThreshold;
}

//! Get the PhysicsBody::_sfAutoDisableLinearThreshold field.
inline
SFReal32 *PhysicsBodyBase::editSFAutoDisableLinearThreshold(void)
{
    return &_sfAutoDisableLinearThreshold;
}

//! Get the PhysicsBody::_sfAutoDisableAngularThreshold field.
inline
const SFReal32 *PhysicsBodyBase::getSFAutoDisableAngularThreshold(void) const
{
    return &_sfAutoDisableAngularThreshold;
}

//! Get the PhysicsBody::_sfAutoDisableAngularThreshold field.
inline
SFReal32 *PhysicsBodyBase::editSFAutoDisableAngularThreshold(void)
{
    return &_sfAutoDisableAngularThreshold;
}

//! Get the PhysicsBody::_sfAutoDisableSteps field.
inline
const SFInt32 *PhysicsBodyBase::getSFAutoDisableSteps(void) const
{
    return &_sfAutoDisableSteps;
}

//! Get the PhysicsBody::_sfAutoDisableSteps field.
inline
SFInt32 *PhysicsBodyBase::editSFAutoDisableSteps(void)
{
    return &_sfAutoDisableSteps;
}

//! Get the PhysicsBody::_sfAutoDisableTime field.
inline
const SFReal32 *PhysicsBodyBase::getSFAutoDisableTime(void) const
{
    return &_sfAutoDisableTime;
}

//! Get the PhysicsBody::_sfAutoDisableTime field.
inline
SFReal32 *PhysicsBodyBase::editSFAutoDisableTime(void)
{
    return &_sfAutoDisableTime;
}

//! Get the PhysicsBody::_sfFiniteRotationMode field.
inline
const SFInt32 *PhysicsBodyBase::getSFFiniteRotationMode(void) const
{
    return &_sfFiniteRotationMode;
}

//! Get the PhysicsBody::_sfFiniteRotationMode field.
inline
SFInt32 *PhysicsBodyBase::editSFFiniteRotationMode(void)
{
    return &_sfFiniteRotationMode;
}

//! Get the PhysicsBody::_sfFiniteRotationAxis field.
inline
const SFVec3f *PhysicsBodyBase::getSFFiniteRotationAxis(void) const
{
    return &_sfFiniteRotationAxis;
}

//! Get the PhysicsBody::_sfFiniteRotationAxis field.
inline
SFVec3f *PhysicsBodyBase::editSFFiniteRotationAxis(void)
{
    return &_sfFiniteRotationAxis;
}

//! Get the PhysicsBody::_sfGravityMode field.
inline
const SFBool *PhysicsBodyBase::getSFGravityMode(void) const
{
    return &_sfGravityMode;
}

//! Get the PhysicsBody::_sfGravityMode field.
inline
SFBool *PhysicsBodyBase::editSFGravityMode(void)
{
    return &_sfGravityMode;
}

//! Get the PhysicsBody::_sfLinearDamping field.
inline
const SFReal32 *PhysicsBodyBase::getSFLinearDamping(void) const
{
    return &_sfLinearDamping;
}

//! Get the PhysicsBody::_sfLinearDamping field.
inline
SFReal32 *PhysicsBodyBase::editSFLinearDamping(void)
{
    return &_sfLinearDamping;
}

//! Get the PhysicsBody::_sfAngularDamping field.
inline
const SFReal32 *PhysicsBodyBase::getSFAngularDamping(void) const
{
    return &_sfAngularDamping;
}

//! Get the PhysicsBody::_sfAngularDamping field.
inline
SFReal32 *PhysicsBodyBase::editSFAngularDamping(void)
{
    return &_sfAngularDamping;
}

//! Get the PhysicsBody::_sfLinearDampingThreshold field.
inline
const SFReal32 *PhysicsBodyBase::getSFLinearDampingThreshold(void) const
{
    return &_sfLinearDampingThreshold;
}

//! Get the PhysicsBody::_sfLinearDampingThreshold field.
inline
SFReal32 *PhysicsBodyBase::editSFLinearDampingThreshold(void)
{
    return &_sfLinearDampingThreshold;
}

//! Get the PhysicsBody::_sfAngularDampingThreshold field.
inline
const SFReal32 *PhysicsBodyBase::getSFAngularDampingThreshold(void) const
{
    return &_sfAngularDampingThreshold;
}

//! Get the PhysicsBody::_sfAngularDampingThreshold field.
inline
SFReal32 *PhysicsBodyBase::editSFAngularDampingThreshold(void)
{
    return &_sfAngularDampingThreshold;
}

//! Get the PhysicsBody::_sfMaxAngularSpeed field.
inline
const SFReal32 *PhysicsBodyBase::getSFMaxAngularSpeed(void) const
{
    return &_sfMaxAngularSpeed;
}

//! Get the PhysicsBody::_sfMaxAngularSpeed field.
inline
SFReal32 *PhysicsBodyBase::editSFMaxAngularSpeed(void)
{
    return &_sfMaxAngularSpeed;
}

//! Get the PhysicsBody::_sfKinematic field.
inline
const SFBool *PhysicsBodyBase::getSFKinematic(void) const
{
    return &_sfKinematic;
}

//! Get the PhysicsBody::_sfKinematic field.
inline
SFBool *PhysicsBodyBase::editSFKinematic(void)
{
    return &_sfKinematic;
}

//! Get the PhysicsBody::_sfWorld field.
inline
const SFPhysicsWorldPtr *PhysicsBodyBase::getSFWorld(void) const
{
    return &_sfWorld;
}

//! Get the PhysicsBody::_sfWorld field.
inline
SFPhysicsWorldPtr *PhysicsBodyBase::editSFWorld(void)
{
    return &_sfWorld;
}


//! Get the value of the PhysicsBody::_sfPosition field.
inline
Vec3f &PhysicsBodyBase::editPosition(void)
{
    return _sfPosition.getValue();
}

//! Get the value of the PhysicsBody::_sfPosition field.
inline
const Vec3f &PhysicsBodyBase::getPosition(void) const
{
    return _sfPosition.getValue();
}

//! Set the value of the PhysicsBody::_sfPosition field.
inline
void PhysicsBodyBase::setPosition(const Vec3f &value)
{
    _sfPosition.setValue(value);
}

//! Get the value of the PhysicsBody::_sfRotation field.
inline
Matrix &PhysicsBodyBase::editRotation(void)
{
    return _sfRotation.getValue();
}

//! Get the value of the PhysicsBody::_sfRotation field.
inline
const Matrix &PhysicsBodyBase::getRotation(void) const
{
    return _sfRotation.getValue();
}

//! Set the value of the PhysicsBody::_sfRotation field.
inline
void PhysicsBodyBase::setRotation(const Matrix &value)
{
    _sfRotation.setValue(value);
}

//! Get the value of the PhysicsBody::_sfQuaternion field.
inline
Quaternion &PhysicsBodyBase::editQuaternion(void)
{
    return _sfQuaternion.getValue();
}

//! Get the value of the PhysicsBody::_sfQuaternion field.
inline
const Quaternion &PhysicsBodyBase::getQuaternion(void) const
{
    return _sfQuaternion.getValue();
}

//! Set the value of the PhysicsBody::_sfQuaternion field.
inline
void PhysicsBodyBase::setQuaternion(const Quaternion &value)
{
    _sfQuaternion.setValue(value);
}

//! Get the value of the PhysicsBody::_sfLinearVel field.
inline
Vec3f &PhysicsBodyBase::editLinearVel(void)
{
    return _sfLinearVel.getValue();
}

//! Get the value of the PhysicsBody::_sfLinearVel field.
inline
const Vec3f &PhysicsBodyBase::getLinearVel(void) const
{
    return _sfLinearVel.getValue();
}

//! Set the value of the PhysicsBody::_sfLinearVel field.
inline
void PhysicsBodyBase::setLinearVel(const Vec3f &value)
{
    _sfLinearVel.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAngularVel field.
inline
Vec3f &PhysicsBodyBase::editAngularVel(void)
{
    return _sfAngularVel.getValue();
}

//! Get the value of the PhysicsBody::_sfAngularVel field.
inline
const Vec3f &PhysicsBodyBase::getAngularVel(void) const
{
    return _sfAngularVel.getValue();
}

//! Set the value of the PhysicsBody::_sfAngularVel field.
inline
void PhysicsBodyBase::setAngularVel(const Vec3f &value)
{
    _sfAngularVel.setValue(value);
}

//! Get the value of the PhysicsBody::_sfForce field.
inline
Vec3f &PhysicsBodyBase::editForce(void)
{
    return _sfForce.getValue();
}

//! Get the value of the PhysicsBody::_sfForce field.
inline
const Vec3f &PhysicsBodyBase::getForce(void) const
{
    return _sfForce.getValue();
}

//! Set the value of the PhysicsBody::_sfForce field.
inline
void PhysicsBodyBase::setForce(const Vec3f &value)
{
    _sfForce.setValue(value);
}

//! Get the value of the PhysicsBody::_sfTorque field.
inline
Vec3f &PhysicsBodyBase::editTorque(void)
{
    return _sfTorque.getValue();
}

//! Get the value of the PhysicsBody::_sfTorque field.
inline
const Vec3f &PhysicsBodyBase::getTorque(void) const
{
    return _sfTorque.getValue();
}

//! Set the value of the PhysicsBody::_sfTorque field.
inline
void PhysicsBodyBase::setTorque(const Vec3f &value)
{
    _sfTorque.setValue(value);
}

//! Get the value of the PhysicsBody::_sfMass field.
inline
Real32 &PhysicsBodyBase::editMass(void)
{
    return _sfMass.getValue();
}

//! Get the value of the PhysicsBody::_sfMass field.
inline
const Real32 &PhysicsBodyBase::getMass(void) const
{
    return _sfMass.getValue();
}

//! Set the value of the PhysicsBody::_sfMass field.
inline
void PhysicsBodyBase::setMass(const Real32 &value)
{
    _sfMass.setValue(value);
}

//! Get the value of the PhysicsBody::_sfMassCenterOfGravity field.
inline
Vec3f &PhysicsBodyBase::editMassCenterOfGravity(void)
{
    return _sfMassCenterOfGravity.getValue();
}

//! Get the value of the PhysicsBody::_sfMassCenterOfGravity field.
inline
const Vec3f &PhysicsBodyBase::getMassCenterOfGravity(void) const
{
    return _sfMassCenterOfGravity.getValue();
}

//! Set the value of the PhysicsBody::_sfMassCenterOfGravity field.
inline
void PhysicsBodyBase::setMassCenterOfGravity(const Vec3f &value)
{
    _sfMassCenterOfGravity.setValue(value);
}

//! Get the value of the PhysicsBody::_sfMassInertiaTensor field.
inline
Matrix &PhysicsBodyBase::editMassInertiaTensor(void)
{
    return _sfMassInertiaTensor.getValue();
}

//! Get the value of the PhysicsBody::_sfMassInertiaTensor field.
inline
const Matrix &PhysicsBodyBase::getMassInertiaTensor(void) const
{
    return _sfMassInertiaTensor.getValue();
}

//! Set the value of the PhysicsBody::_sfMassInertiaTensor field.
inline
void PhysicsBodyBase::setMassInertiaTensor(const Matrix &value)
{
    _sfMassInertiaTensor.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAutoDisableFlag field.
inline
Int32 &PhysicsBodyBase::editAutoDisableFlag(void)
{
    return _sfAutoDisableFlag.getValue();
}

//! Get the value of the PhysicsBody::_sfAutoDisableFlag field.
inline
const Int32 &PhysicsBodyBase::getAutoDisableFlag(void) const
{
    return _sfAutoDisableFlag.getValue();
}

//! Set the value of the PhysicsBody::_sfAutoDisableFlag field.
inline
void PhysicsBodyBase::setAutoDisableFlag(const Int32 &value)
{
    _sfAutoDisableFlag.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAutoDisableLinearThreshold field.
inline
Real32 &PhysicsBodyBase::editAutoDisableLinearThreshold(void)
{
    return _sfAutoDisableLinearThreshold.getValue();
}

//! Get the value of the PhysicsBody::_sfAutoDisableLinearThreshold field.
inline
const Real32 &PhysicsBodyBase::getAutoDisableLinearThreshold(void) const
{
    return _sfAutoDisableLinearThreshold.getValue();
}

//! Set the value of the PhysicsBody::_sfAutoDisableLinearThreshold field.
inline
void PhysicsBodyBase::setAutoDisableLinearThreshold(const Real32 &value)
{
    _sfAutoDisableLinearThreshold.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAutoDisableAngularThreshold field.
inline
Real32 &PhysicsBodyBase::editAutoDisableAngularThreshold(void)
{
    return _sfAutoDisableAngularThreshold.getValue();
}

//! Get the value of the PhysicsBody::_sfAutoDisableAngularThreshold field.
inline
const Real32 &PhysicsBodyBase::getAutoDisableAngularThreshold(void) const
{
    return _sfAutoDisableAngularThreshold.getValue();
}

//! Set the value of the PhysicsBody::_sfAutoDisableAngularThreshold field.
inline
void PhysicsBodyBase::setAutoDisableAngularThreshold(const Real32 &value)
{
    _sfAutoDisableAngularThreshold.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAutoDisableSteps field.
inline
Int32 &PhysicsBodyBase::editAutoDisableSteps(void)
{
    return _sfAutoDisableSteps.getValue();
}

//! Get the value of the PhysicsBody::_sfAutoDisableSteps field.
inline
const Int32 &PhysicsBodyBase::getAutoDisableSteps(void) const
{
    return _sfAutoDisableSteps.getValue();
}

//! Set the value of the PhysicsBody::_sfAutoDisableSteps field.
inline
void PhysicsBodyBase::setAutoDisableSteps(const Int32 &value)
{
    _sfAutoDisableSteps.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAutoDisableTime field.
inline
Real32 &PhysicsBodyBase::editAutoDisableTime(void)
{
    return _sfAutoDisableTime.getValue();
}

//! Get the value of the PhysicsBody::_sfAutoDisableTime field.
inline
const Real32 &PhysicsBodyBase::getAutoDisableTime(void) const
{
    return _sfAutoDisableTime.getValue();
}

//! Set the value of the PhysicsBody::_sfAutoDisableTime field.
inline
void PhysicsBodyBase::setAutoDisableTime(const Real32 &value)
{
    _sfAutoDisableTime.setValue(value);
}

//! Get the value of the PhysicsBody::_sfFiniteRotationMode field.
inline
Int32 &PhysicsBodyBase::editFiniteRotationMode(void)
{
    return _sfFiniteRotationMode.getValue();
}

//! Get the value of the PhysicsBody::_sfFiniteRotationMode field.
inline
const Int32 &PhysicsBodyBase::getFiniteRotationMode(void) const
{
    return _sfFiniteRotationMode.getValue();
}

//! Set the value of the PhysicsBody::_sfFiniteRotationMode field.
inline
void PhysicsBodyBase::setFiniteRotationMode(const Int32 &value)
{
    _sfFiniteRotationMode.setValue(value);
}

//! Get the value of the PhysicsBody::_sfFiniteRotationAxis field.
inline
Vec3f &PhysicsBodyBase::editFiniteRotationAxis(void)
{
    return _sfFiniteRotationAxis.getValue();
}

//! Get the value of the PhysicsBody::_sfFiniteRotationAxis field.
inline
const Vec3f &PhysicsBodyBase::getFiniteRotationAxis(void) const
{
    return _sfFiniteRotationAxis.getValue();
}

//! Set the value of the PhysicsBody::_sfFiniteRotationAxis field.
inline
void PhysicsBodyBase::setFiniteRotationAxis(const Vec3f &value)
{
    _sfFiniteRotationAxis.setValue(value);
}

//! Get the value of the PhysicsBody::_sfGravityMode field.
inline
bool &PhysicsBodyBase::editGravityMode(void)
{
    return _sfGravityMode.getValue();
}

//! Get the value of the PhysicsBody::_sfGravityMode field.
inline
const bool &PhysicsBodyBase::getGravityMode(void) const
{
    return _sfGravityMode.getValue();
}

//! Set the value of the PhysicsBody::_sfGravityMode field.
inline
void PhysicsBodyBase::setGravityMode(const bool &value)
{
    _sfGravityMode.setValue(value);
}

//! Get the value of the PhysicsBody::_sfLinearDamping field.
inline
Real32 &PhysicsBodyBase::editLinearDamping(void)
{
    return _sfLinearDamping.getValue();
}

//! Get the value of the PhysicsBody::_sfLinearDamping field.
inline
const Real32 &PhysicsBodyBase::getLinearDamping(void) const
{
    return _sfLinearDamping.getValue();
}

//! Set the value of the PhysicsBody::_sfLinearDamping field.
inline
void PhysicsBodyBase::setLinearDamping(const Real32 &value)
{
    _sfLinearDamping.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAngularDamping field.
inline
Real32 &PhysicsBodyBase::editAngularDamping(void)
{
    return _sfAngularDamping.getValue();
}

//! Get the value of the PhysicsBody::_sfAngularDamping field.
inline
const Real32 &PhysicsBodyBase::getAngularDamping(void) const
{
    return _sfAngularDamping.getValue();
}

//! Set the value of the PhysicsBody::_sfAngularDamping field.
inline
void PhysicsBodyBase::setAngularDamping(const Real32 &value)
{
    _sfAngularDamping.setValue(value);
}

//! Get the value of the PhysicsBody::_sfLinearDampingThreshold field.
inline
Real32 &PhysicsBodyBase::editLinearDampingThreshold(void)
{
    return _sfLinearDampingThreshold.getValue();
}

//! Get the value of the PhysicsBody::_sfLinearDampingThreshold field.
inline
const Real32 &PhysicsBodyBase::getLinearDampingThreshold(void) const
{
    return _sfLinearDampingThreshold.getValue();
}

//! Set the value of the PhysicsBody::_sfLinearDampingThreshold field.
inline
void PhysicsBodyBase::setLinearDampingThreshold(const Real32 &value)
{
    _sfLinearDampingThreshold.setValue(value);
}

//! Get the value of the PhysicsBody::_sfAngularDampingThreshold field.
inline
Real32 &PhysicsBodyBase::editAngularDampingThreshold(void)
{
    return _sfAngularDampingThreshold.getValue();
}

//! Get the value of the PhysicsBody::_sfAngularDampingThreshold field.
inline
const Real32 &PhysicsBodyBase::getAngularDampingThreshold(void) const
{
    return _sfAngularDampingThreshold.getValue();
}

//! Set the value of the PhysicsBody::_sfAngularDampingThreshold field.
inline
void PhysicsBodyBase::setAngularDampingThreshold(const Real32 &value)
{
    _sfAngularDampingThreshold.setValue(value);
}

//! Get the value of the PhysicsBody::_sfMaxAngularSpeed field.
inline
Real32 &PhysicsBodyBase::editMaxAngularSpeed(void)
{
    return _sfMaxAngularSpeed.getValue();
}

//! Get the value of the PhysicsBody::_sfMaxAngularSpeed field.
inline
const Real32 &PhysicsBodyBase::getMaxAngularSpeed(void) const
{
    return _sfMaxAngularSpeed.getValue();
}

//! Set the value of the PhysicsBody::_sfMaxAngularSpeed field.
inline
void PhysicsBodyBase::setMaxAngularSpeed(const Real32 &value)
{
    _sfMaxAngularSpeed.setValue(value);
}

//! Get the value of the PhysicsBody::_sfKinematic field.
inline
bool &PhysicsBodyBase::editKinematic(void)
{
    return _sfKinematic.getValue();
}

//! Get the value of the PhysicsBody::_sfKinematic field.
inline
const bool &PhysicsBodyBase::getKinematic(void) const
{
    return _sfKinematic.getValue();
}

//! Set the value of the PhysicsBody::_sfKinematic field.
inline
void PhysicsBodyBase::setKinematic(const bool &value)
{
    _sfKinematic.setValue(value);
}

//! Get the value of the PhysicsBody::_sfWorld field.
inline
PhysicsWorldPtr &PhysicsBodyBase::editWorld(void)
{
    return _sfWorld.getValue();
}

//! Get the value of the PhysicsBody::_sfWorld field.
inline
const PhysicsWorldPtr &PhysicsBodyBase::getWorld(void) const
{
    return _sfWorld.getValue();
}

//! Set the value of the PhysicsBody::_sfWorld field.
inline
void PhysicsBodyBase::setWorld(const PhysicsWorldPtr &value)
{
    _sfWorld.setValue(value);
}


OSG_END_NAMESPACE
