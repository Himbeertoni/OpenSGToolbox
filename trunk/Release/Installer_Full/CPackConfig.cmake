# Set directory paths
SET(TOOLBOX_BASE_DIR "/Users/dtnaylor/Documents/Work/opensgtoolbox")
SET(TOOLBOX_INSTALL_DIR "/Users/dtnaylor/Documents/Work/opensgtoolbox/trunk/Builds/Apple")
SET(OPENSG_BASE_DIR "/Users/dtnaylor/Documents/Work/OpenSGInstall")
SET(BOOST_BASE_DIR "/Users/dtnaylor/Documents/Work/Boost")
SET(ODE_BASE_DIR "/Users/dtnaylor/Documents/Work/ode-0.11.1/Apple_INSTALL")
SET(INSTALLER_BASE_DIR "/Users/dtnaylor/Documents/Work/opensgtoolbox/trunk/Release/Installer_Full")

# Check directory paths
IF(NOT EXISTS ${TOOLBOX_BASE_DIR})
   MESSAGE("ERROR (TOOLBOX_BASE_DIR):  \"${TOOLBOX_BASE_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${TOOLBOX_BASE_DIR})

IF(NOT EXISTS ${TOOLBOX_INSTALL_DIR})
   MESSAGE("ERROR (TOOLBOX_INSTALL_DIR):  \"${TOOLBOX_INSTALL_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${TOOLBOX_INSTALL_DIR})

IF(NOT EXISTS ${OPENSG_BASE_DIR})
   MESSAGE("ERROR (OPENSG_BASE_DIR):  \"${OPENSG_BASE_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${OPENSG_BASE_DIR})

IF(NOT EXISTS ${BOOST_BASE_DIR})
   MESSAGE("ERROR (BOOST_BASE_DIR):  \"${BOOST_BASE_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${BOOST_BASE_DIR})

IF(NOT EXISTS ${ODE_BASE_DIR})
   MESSAGE("ERROR (ODE_BASE_DIR):  \"${ODE_BASE_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${ODE_BASE_DIR})

IF(NOT EXISTS ${INSTALLER_BASE_DIR})
   MESSAGE("ERROR (INSTALLER_BASE_DIR):  \"${INSTALLER_BASE_DIR}\"  is not a valid directory.")
ENDIF(NOT EXISTS ${INSTALLER_BASE_DIR})


# Get revision number
FIND_PACKAGE(Subversion)
IF(Subversion_FOUND)
   Subversion_WC_INFO(${TOOLBOX_BASE_DIR}/trunk Project)
   MESSAGE("Current revision is ${Project_WC_REVISION}")
ENDIF(Subversion_FOUND)

# Save revision number
file(WRITE ${INSTALLER_BASE_DIR}/temp/Revision "${Project_WC_REVISION}")
SET(INSTALL_DIRS ${INSTALLER_BASE_DIR}/temp;/share/OpenSGToolbox)

# Get Apple architecture
EXEC_PROGRAM(uname ARGS -m OUTPUT_VARIABLE _CMAKE_OSX_MACHINE)
IF("${_CMAKE_OSX_MACHINE}" MATCHES "Power")
  SET(_CMAKE_OSX_MACHINE ppc)
ELSE("${_CMAKE_OSX_MACHINE}" MATCHES "Power")
  SET(_CMAKE_OSX_MACHINE intel)
ENDIF("${_CMAKE_OSX_MACHINE}" MATCHES "Power")
MESSAGE("Apple Architecture: ${_CMAKE_OSX_MACHINE}")

# Name and version
FILE(STRINGS ${TOOLBOX_BASE_DIR}/trunk/VERSION VersionFile)
STRING(REGEX MATCH "([0-9]+)\\.([0-9]+)\\.([0-9]+)" VersionMatch ${VersionFile})
SET(CPACK_PACKAGE_VERSION ${CMAKE_MATCH_0})
SET(CPACK_PACKAGE_VERSION_MAJOR ${CMAKE_MATCH_1})
SET(CPACK_PACKAGE_VERSION_MINOR ${CMAKE_MATCH_2})
SET(CPACK_PACKAGE_VERSION_PATCH ${CMAKE_MATCH_3})
MESSAGE("Version: ${CMAKE_MATCH_0}")
SET(CPACK_PACKAGE_FILE_NAME "OpenSGToolbox-${CPACK_PACKAGE_VERSION}-${Project_WC_REVISION}-OSX-${_CMAKE_OSX_MACHINE}")
SET(CPACK_PACKAGE_NAME "OpenSGToolbox")
SET(CPACK_PACKAGE_VENDOR "VRAC")


# Resource files
SET(CPACK_RESOURCE_FILE_LICENSE "${INSTALLER_BASE_DIR}/../../LICENSE.txt")
SET(CPACK_RESOURCE_FILE_README "${INSTALLER_BASE_DIR}/../../README.txt")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${INSTALLER_BASE_DIR}/DESCRIPTION.txt")
SET(CPACK_RESOURCE_FILE_WELCOME "${INSTALLER_BASE_DIR}/WELCOME.txt")


MACRO(PROCESS_LIBRARY LIBRARY_DIR)

	MESSAGE("Processing files for: ${LIBRARY_DIR}")

	SET(INSTALL_DIRS ${INSTALL_DIRS};${LIBRARY_DIR}/include;/include;${LIBRARY_DIR}/lib;/lib)

ENDMACRO(PROCESS_LIBRARY)



MACRO(PROCESS_TUTORIAL TUTORIAL_LIBRARY_NAME)

	MESSAGE("Processing files for: ${TUTORIAL_LIBRARY_NAME}")

	SET(INSTALL_DIRS ${INSTALL_DIRS};${TOOLBOX_BASE_DIR}/trunk/${TUTORIAL_LIBRARY_NAME}/Tutorials;/share/OpenSGToolbox/${TUTORIAL_LIBRARY_NAME})

ENDMACRO(PROCESS_TUTORIAL)


# Tell CPack where to look for library files
PROCESS_LIBRARY(${OPENSG_BASE_DIR})
PROCESS_LIBRARY(${BOOST_BASE_DIR})
PROCESS_LIBRARY(${ODE_BASE_DIR})
PROCESS_LIBRARY(${TOOLBOX_INSTALL_DIR})


# Tell CPack where to look for tutorial files
PROCESS_TUTORIAL("Animation")
PROCESS_TUTORIAL("Dynamics")
PROCESS_TUTORIAL("Game")
PROCESS_TUTORIAL("Input")
PROCESS_TUTORIAL("Metabolic")
PROCESS_TUTORIAL("ParticleSystem")
PROCESS_TUTORIAL("Physics")
PROCESS_TUTORIAL("Sound")
PROCESS_TUTORIAL("Toolbox")
PROCESS_TUTORIAL("UserInterface")
PROCESS_TUTORIAL("Video")



# Configure installer
SET(CPACK_GENERATOR "PackageMaker")
SET(CPACK_IGNORE_FILES "/\\.svn/;\\.vcproj$;\\.sln$;/Makefile;/CMakeFiles/;/CMakeCache.txt;/cmake_install.cmake")
SET(CPACK_PACKAGING_INSTALL_PREFIX "/")
SET(CPACK_PACKAGE_DEFAULT_LOCATION "/usr/local")
SET(CPACK_INSTALLED_DIRECTORIES ${INSTALL_DIRS})
SET(CPACK_PACKAGE_RELOCATABLE "true")
#SET(CPACK_INSTALL_DIRECTORY "/usr/local")
