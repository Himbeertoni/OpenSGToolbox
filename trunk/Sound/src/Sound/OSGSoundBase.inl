/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Sound!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SoundBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 SoundBase::getClassTypeId(void) 
{
    return _type.getId(); 
}


/*------------------------------ get -----------------------------------*/

//! Get the Sound::_sfPosition field.
inline
SFPnt3f *SoundBase::getSFPosition(void)
{
    return &_sfPosition;
}

//! Get the Sound::_sfVelocity field.
inline
SFVec3f *SoundBase::getSFVelocity(void)
{
    return &_sfVelocity;
}

//! Get the Sound::_sfVolume field.
inline
SFReal32 *SoundBase::getSFVolume(void)
{
    return &_sfVolume;
}

//! Get the Sound::_sfPan field.
inline
SFReal32 *SoundBase::getSFPan(void)
{
    return &_sfPan;
}

//! Get the Sound::_sfFrequency field.
inline
SFReal32 *SoundBase::getSFFrequency(void)
{
    return &_sfFrequency;
}

//! Get the Sound::_sfLooping field.
inline
SFInt32 *SoundBase::getSFLooping(void)
{
    return &_sfLooping;
}

//! Get the Sound::_sfStreaming field.
inline
SFBool *SoundBase::getSFStreaming(void)
{
    return &_sfStreaming;
}

//! Get the Sound::_sfFile field.
inline
SFPath *SoundBase::getSFFile(void)
{
    return &_sfFile;
}

//! Get the Sound::_sfEnable3D field.
inline
SFBool *SoundBase::getSFEnable3D(void)
{
    return &_sfEnable3D;
}


//! Get the value of the Sound::_sfPosition field.
inline
Pnt3f &SoundBase::getPosition(void)
{
    return _sfPosition.getValue();
}

//! Get the value of the Sound::_sfPosition field.
inline
const Pnt3f &SoundBase::getPosition(void) const
{
    return _sfPosition.getValue();
}

//! Set the value of the Sound::_sfPosition field.
inline
void SoundBase::setPosition(const Pnt3f &value)
{
    _sfPosition.setValue(value);
}

//! Get the value of the Sound::_sfVelocity field.
inline
Vec3f &SoundBase::getVelocity(void)
{
    return _sfVelocity.getValue();
}

//! Get the value of the Sound::_sfVelocity field.
inline
const Vec3f &SoundBase::getVelocity(void) const
{
    return _sfVelocity.getValue();
}

//! Set the value of the Sound::_sfVelocity field.
inline
void SoundBase::setVelocity(const Vec3f &value)
{
    _sfVelocity.setValue(value);
}

//! Get the value of the Sound::_sfVolume field.
inline
Real32 &SoundBase::getVolume(void)
{
    return _sfVolume.getValue();
}

//! Get the value of the Sound::_sfVolume field.
inline
const Real32 &SoundBase::getVolume(void) const
{
    return _sfVolume.getValue();
}

//! Set the value of the Sound::_sfVolume field.
inline
void SoundBase::setVolume(const Real32 &value)
{
    _sfVolume.setValue(value);
}

//! Get the value of the Sound::_sfPan field.
inline
Real32 &SoundBase::getPan(void)
{
    return _sfPan.getValue();
}

//! Get the value of the Sound::_sfPan field.
inline
const Real32 &SoundBase::getPan(void) const
{
    return _sfPan.getValue();
}

//! Set the value of the Sound::_sfPan field.
inline
void SoundBase::setPan(const Real32 &value)
{
    _sfPan.setValue(value);
}

//! Get the value of the Sound::_sfFrequency field.
inline
Real32 &SoundBase::getFrequency(void)
{
    return _sfFrequency.getValue();
}

//! Get the value of the Sound::_sfFrequency field.
inline
const Real32 &SoundBase::getFrequency(void) const
{
    return _sfFrequency.getValue();
}

//! Set the value of the Sound::_sfFrequency field.
inline
void SoundBase::setFrequency(const Real32 &value)
{
    _sfFrequency.setValue(value);
}

//! Get the value of the Sound::_sfLooping field.
inline
Int32 &SoundBase::getLooping(void)
{
    return _sfLooping.getValue();
}

//! Get the value of the Sound::_sfLooping field.
inline
const Int32 &SoundBase::getLooping(void) const
{
    return _sfLooping.getValue();
}

//! Set the value of the Sound::_sfLooping field.
inline
void SoundBase::setLooping(const Int32 &value)
{
    _sfLooping.setValue(value);
}

//! Get the value of the Sound::_sfStreaming field.
inline
bool &SoundBase::getStreaming(void)
{
    return _sfStreaming.getValue();
}

//! Get the value of the Sound::_sfStreaming field.
inline
const bool &SoundBase::getStreaming(void) const
{
    return _sfStreaming.getValue();
}

//! Set the value of the Sound::_sfStreaming field.
inline
void SoundBase::setStreaming(const bool &value)
{
    _sfStreaming.setValue(value);
}

//! Get the value of the Sound::_sfFile field.
inline
Path &SoundBase::getFile(void)
{
    return _sfFile.getValue();
}

//! Get the value of the Sound::_sfFile field.
inline
const Path &SoundBase::getFile(void) const
{
    return _sfFile.getValue();
}

//! Set the value of the Sound::_sfFile field.
inline
void SoundBase::setFile(const Path &value)
{
    _sfFile.setValue(value);
}

//! Get the value of the Sound::_sfEnable3D field.
inline
bool &SoundBase::getEnable3D(void)
{
    return _sfEnable3D.getValue();
}

//! Get the value of the Sound::_sfEnable3D field.
inline
const bool &SoundBase::getEnable3D(void) const
{
    return _sfEnable3D.getValue();
}

//! Set the value of the Sound::_sfEnable3D field.
inline
void SoundBase::setEnable3D(const bool &value)
{
    _sfEnable3D.setValue(value);
}


OSG_END_NAMESPACE

#define OSGSOUNDBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

