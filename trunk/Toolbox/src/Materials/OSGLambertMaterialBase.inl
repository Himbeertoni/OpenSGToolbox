/*---------------------------------------------------------------------------*\
 *                        OpenSG ToolBox Toolbox                             *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LambertMaterial!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LambertMaterialBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LambertMaterialBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
LambertMaterialPtr LambertMaterialBase::create(void) 
{
    LambertMaterialPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = LambertMaterialPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
LambertMaterialPtr LambertMaterialBase::createEmpty(void) 
{ 
    LambertMaterialPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the LambertMaterial::_sfColor field.
inline
const SFColor3f *LambertMaterialBase::getSFColor(void) const
{
    return &_sfColor;
}

//! Get the LambertMaterial::_sfColor field.
inline
SFColor3f *LambertMaterialBase::editSFColor(void)
{
    return &_sfColor;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfColor field.
inline
SFColor3f *LambertMaterialBase::getSFColor(void)
{
    return &_sfColor;
}
#endif

//! Get the LambertMaterial::_sfColorImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFColorImage(void) const
{
    return &_sfColorImage;
}

//! Get the LambertMaterial::_sfColorImage field.
inline
SFImagePtr *LambertMaterialBase::editSFColorImage(void)
{
    return &_sfColorImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfColorImage field.
inline
SFImagePtr *LambertMaterialBase::getSFColorImage(void)
{
    return &_sfColorImage;
}
#endif

//! Get the LambertMaterial::_sfTransparency field.
inline
const SFColor3f *LambertMaterialBase::getSFTransparency(void) const
{
    return &_sfTransparency;
}

//! Get the LambertMaterial::_sfTransparency field.
inline
SFColor3f *LambertMaterialBase::editSFTransparency(void)
{
    return &_sfTransparency;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransparency field.
inline
SFColor3f *LambertMaterialBase::getSFTransparency(void)
{
    return &_sfTransparency;
}
#endif

//! Get the LambertMaterial::_sfTransparencyImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFTransparencyImage(void) const
{
    return &_sfTransparencyImage;
}

//! Get the LambertMaterial::_sfTransparencyImage field.
inline
SFImagePtr *LambertMaterialBase::editSFTransparencyImage(void)
{
    return &_sfTransparencyImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransparencyImage field.
inline
SFImagePtr *LambertMaterialBase::getSFTransparencyImage(void)
{
    return &_sfTransparencyImage;
}
#endif

//! Get the LambertMaterial::_sfAmbientColor field.
inline
const SFColor3f *LambertMaterialBase::getSFAmbientColor(void) const
{
    return &_sfAmbientColor;
}

//! Get the LambertMaterial::_sfAmbientColor field.
inline
SFColor3f *LambertMaterialBase::editSFAmbientColor(void)
{
    return &_sfAmbientColor;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfAmbientColor field.
inline
SFColor3f *LambertMaterialBase::getSFAmbientColor(void)
{
    return &_sfAmbientColor;
}
#endif

//! Get the LambertMaterial::_sfAmbientColorImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFAmbientColorImage(void) const
{
    return &_sfAmbientColorImage;
}

//! Get the LambertMaterial::_sfAmbientColorImage field.
inline
SFImagePtr *LambertMaterialBase::editSFAmbientColorImage(void)
{
    return &_sfAmbientColorImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfAmbientColorImage field.
inline
SFImagePtr *LambertMaterialBase::getSFAmbientColorImage(void)
{
    return &_sfAmbientColorImage;
}
#endif

//! Get the LambertMaterial::_sfIncandescence field.
inline
const SFColor3f *LambertMaterialBase::getSFIncandescence(void) const
{
    return &_sfIncandescence;
}

//! Get the LambertMaterial::_sfIncandescence field.
inline
SFColor3f *LambertMaterialBase::editSFIncandescence(void)
{
    return &_sfIncandescence;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfIncandescence field.
inline
SFColor3f *LambertMaterialBase::getSFIncandescence(void)
{
    return &_sfIncandescence;
}
#endif

//! Get the LambertMaterial::_sfIncandescenceImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFIncandescenceImage(void) const
{
    return &_sfIncandescenceImage;
}

//! Get the LambertMaterial::_sfIncandescenceImage field.
inline
SFImagePtr *LambertMaterialBase::editSFIncandescenceImage(void)
{
    return &_sfIncandescenceImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfIncandescenceImage field.
inline
SFImagePtr *LambertMaterialBase::getSFIncandescenceImage(void)
{
    return &_sfIncandescenceImage;
}
#endif

//! Get the LambertMaterial::_sfNormalMapImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFNormalMapImage(void) const
{
    return &_sfNormalMapImage;
}

//! Get the LambertMaterial::_sfNormalMapImage field.
inline
SFImagePtr *LambertMaterialBase::editSFNormalMapImage(void)
{
    return &_sfNormalMapImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfNormalMapImage field.
inline
SFImagePtr *LambertMaterialBase::getSFNormalMapImage(void)
{
    return &_sfNormalMapImage;
}
#endif

//! Get the LambertMaterial::_sfBumpDepth field.
inline
const SFReal32 *LambertMaterialBase::getSFBumpDepth(void) const
{
    return &_sfBumpDepth;
}

//! Get the LambertMaterial::_sfBumpDepth field.
inline
SFReal32 *LambertMaterialBase::editSFBumpDepth(void)
{
    return &_sfBumpDepth;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfBumpDepth field.
inline
SFReal32 *LambertMaterialBase::getSFBumpDepth(void)
{
    return &_sfBumpDepth;
}
#endif

//! Get the LambertMaterial::_sfBumpDepthImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFBumpDepthImage(void) const
{
    return &_sfBumpDepthImage;
}

//! Get the LambertMaterial::_sfBumpDepthImage field.
inline
SFImagePtr *LambertMaterialBase::editSFBumpDepthImage(void)
{
    return &_sfBumpDepthImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfBumpDepthImage field.
inline
SFImagePtr *LambertMaterialBase::getSFBumpDepthImage(void)
{
    return &_sfBumpDepthImage;
}
#endif

//! Get the LambertMaterial::_sfDiffuse field.
inline
const SFReal32 *LambertMaterialBase::getSFDiffuse(void) const
{
    return &_sfDiffuse;
}

//! Get the LambertMaterial::_sfDiffuse field.
inline
SFReal32 *LambertMaterialBase::editSFDiffuse(void)
{
    return &_sfDiffuse;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfDiffuse field.
inline
SFReal32 *LambertMaterialBase::getSFDiffuse(void)
{
    return &_sfDiffuse;
}
#endif

//! Get the LambertMaterial::_sfDiffuseImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFDiffuseImage(void) const
{
    return &_sfDiffuseImage;
}

//! Get the LambertMaterial::_sfDiffuseImage field.
inline
SFImagePtr *LambertMaterialBase::editSFDiffuseImage(void)
{
    return &_sfDiffuseImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfDiffuseImage field.
inline
SFImagePtr *LambertMaterialBase::getSFDiffuseImage(void)
{
    return &_sfDiffuseImage;
}
#endif

//! Get the LambertMaterial::_sfTransleucence field.
inline
const SFReal32 *LambertMaterialBase::getSFTransleucence(void) const
{
    return &_sfTransleucence;
}

//! Get the LambertMaterial::_sfTransleucence field.
inline
SFReal32 *LambertMaterialBase::editSFTransleucence(void)
{
    return &_sfTransleucence;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucence field.
inline
SFReal32 *LambertMaterialBase::getSFTransleucence(void)
{
    return &_sfTransleucence;
}
#endif

//! Get the LambertMaterial::_sfTransleucenceImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFTransleucenceImage(void) const
{
    return &_sfTransleucenceImage;
}

//! Get the LambertMaterial::_sfTransleucenceImage field.
inline
SFImagePtr *LambertMaterialBase::editSFTransleucenceImage(void)
{
    return &_sfTransleucenceImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucenceImage field.
inline
SFImagePtr *LambertMaterialBase::getSFTransleucenceImage(void)
{
    return &_sfTransleucenceImage;
}
#endif

//! Get the LambertMaterial::_sfTransleucenceDepth field.
inline
const SFReal32 *LambertMaterialBase::getSFTransleucenceDepth(void) const
{
    return &_sfTransleucenceDepth;
}

//! Get the LambertMaterial::_sfTransleucenceDepth field.
inline
SFReal32 *LambertMaterialBase::editSFTransleucenceDepth(void)
{
    return &_sfTransleucenceDepth;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucenceDepth field.
inline
SFReal32 *LambertMaterialBase::getSFTransleucenceDepth(void)
{
    return &_sfTransleucenceDepth;
}
#endif

//! Get the LambertMaterial::_sfTransleucenceDepthImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFTransleucenceDepthImage(void) const
{
    return &_sfTransleucenceDepthImage;
}

//! Get the LambertMaterial::_sfTransleucenceDepthImage field.
inline
SFImagePtr *LambertMaterialBase::editSFTransleucenceDepthImage(void)
{
    return &_sfTransleucenceDepthImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucenceDepthImage field.
inline
SFImagePtr *LambertMaterialBase::getSFTransleucenceDepthImage(void)
{
    return &_sfTransleucenceDepthImage;
}
#endif

//! Get the LambertMaterial::_sfTransleucenceFocus field.
inline
const SFReal32 *LambertMaterialBase::getSFTransleucenceFocus(void) const
{
    return &_sfTransleucenceFocus;
}

//! Get the LambertMaterial::_sfTransleucenceFocus field.
inline
SFReal32 *LambertMaterialBase::editSFTransleucenceFocus(void)
{
    return &_sfTransleucenceFocus;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucenceFocus field.
inline
SFReal32 *LambertMaterialBase::getSFTransleucenceFocus(void)
{
    return &_sfTransleucenceFocus;
}
#endif

//! Get the LambertMaterial::_sfTransleucenceFocusImage field.
inline
const SFImagePtr *LambertMaterialBase::getSFTransleucenceFocusImage(void) const
{
    return &_sfTransleucenceFocusImage;
}

//! Get the LambertMaterial::_sfTransleucenceFocusImage field.
inline
SFImagePtr *LambertMaterialBase::editSFTransleucenceFocusImage(void)
{
    return &_sfTransleucenceFocusImage;
}

#ifndef OSG_2_PREP
//! Get the LambertMaterial::_sfTransleucenceFocusImage field.
inline
SFImagePtr *LambertMaterialBase::getSFTransleucenceFocusImage(void)
{
    return &_sfTransleucenceFocusImage;
}
#endif


//! Get the value of the LambertMaterial::_sfColor field.
inline
Color3f &LambertMaterialBase::editColor(void)
{
    return _sfColor.getValue();
}

//! Get the value of the LambertMaterial::_sfColor field.
inline
const Color3f &LambertMaterialBase::getColor(void) const
{
    return _sfColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfColor field.
inline
Color3f &LambertMaterialBase::getColor(void)
{
    return _sfColor.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfColor field.
inline
void LambertMaterialBase::setColor(const Color3f &value)
{
    _sfColor.setValue(value);
}

//! Get the value of the LambertMaterial::_sfColorImage field.
inline
ImagePtr &LambertMaterialBase::editColorImage(void)
{
    return _sfColorImage.getValue();
}

//! Get the value of the LambertMaterial::_sfColorImage field.
inline
const ImagePtr &LambertMaterialBase::getColorImage(void) const
{
    return _sfColorImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfColorImage field.
inline
ImagePtr &LambertMaterialBase::getColorImage(void)
{
    return _sfColorImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfColorImage field.
inline
void LambertMaterialBase::setColorImage(const ImagePtr &value)
{
    _sfColorImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransparency field.
inline
Color3f &LambertMaterialBase::editTransparency(void)
{
    return _sfTransparency.getValue();
}

//! Get the value of the LambertMaterial::_sfTransparency field.
inline
const Color3f &LambertMaterialBase::getTransparency(void) const
{
    return _sfTransparency.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransparency field.
inline
Color3f &LambertMaterialBase::getTransparency(void)
{
    return _sfTransparency.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransparency field.
inline
void LambertMaterialBase::setTransparency(const Color3f &value)
{
    _sfTransparency.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransparencyImage field.
inline
ImagePtr &LambertMaterialBase::editTransparencyImage(void)
{
    return _sfTransparencyImage.getValue();
}

//! Get the value of the LambertMaterial::_sfTransparencyImage field.
inline
const ImagePtr &LambertMaterialBase::getTransparencyImage(void) const
{
    return _sfTransparencyImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransparencyImage field.
inline
ImagePtr &LambertMaterialBase::getTransparencyImage(void)
{
    return _sfTransparencyImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransparencyImage field.
inline
void LambertMaterialBase::setTransparencyImage(const ImagePtr &value)
{
    _sfTransparencyImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfAmbientColor field.
inline
Color3f &LambertMaterialBase::editAmbientColor(void)
{
    return _sfAmbientColor.getValue();
}

//! Get the value of the LambertMaterial::_sfAmbientColor field.
inline
const Color3f &LambertMaterialBase::getAmbientColor(void) const
{
    return _sfAmbientColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfAmbientColor field.
inline
Color3f &LambertMaterialBase::getAmbientColor(void)
{
    return _sfAmbientColor.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfAmbientColor field.
inline
void LambertMaterialBase::setAmbientColor(const Color3f &value)
{
    _sfAmbientColor.setValue(value);
}

//! Get the value of the LambertMaterial::_sfAmbientColorImage field.
inline
ImagePtr &LambertMaterialBase::editAmbientColorImage(void)
{
    return _sfAmbientColorImage.getValue();
}

//! Get the value of the LambertMaterial::_sfAmbientColorImage field.
inline
const ImagePtr &LambertMaterialBase::getAmbientColorImage(void) const
{
    return _sfAmbientColorImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfAmbientColorImage field.
inline
ImagePtr &LambertMaterialBase::getAmbientColorImage(void)
{
    return _sfAmbientColorImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfAmbientColorImage field.
inline
void LambertMaterialBase::setAmbientColorImage(const ImagePtr &value)
{
    _sfAmbientColorImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfIncandescence field.
inline
Color3f &LambertMaterialBase::editIncandescence(void)
{
    return _sfIncandescence.getValue();
}

//! Get the value of the LambertMaterial::_sfIncandescence field.
inline
const Color3f &LambertMaterialBase::getIncandescence(void) const
{
    return _sfIncandescence.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfIncandescence field.
inline
Color3f &LambertMaterialBase::getIncandescence(void)
{
    return _sfIncandescence.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfIncandescence field.
inline
void LambertMaterialBase::setIncandescence(const Color3f &value)
{
    _sfIncandescence.setValue(value);
}

//! Get the value of the LambertMaterial::_sfIncandescenceImage field.
inline
ImagePtr &LambertMaterialBase::editIncandescenceImage(void)
{
    return _sfIncandescenceImage.getValue();
}

//! Get the value of the LambertMaterial::_sfIncandescenceImage field.
inline
const ImagePtr &LambertMaterialBase::getIncandescenceImage(void) const
{
    return _sfIncandescenceImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfIncandescenceImage field.
inline
ImagePtr &LambertMaterialBase::getIncandescenceImage(void)
{
    return _sfIncandescenceImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfIncandescenceImage field.
inline
void LambertMaterialBase::setIncandescenceImage(const ImagePtr &value)
{
    _sfIncandescenceImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfNormalMapImage field.
inline
ImagePtr &LambertMaterialBase::editNormalMapImage(void)
{
    return _sfNormalMapImage.getValue();
}

//! Get the value of the LambertMaterial::_sfNormalMapImage field.
inline
const ImagePtr &LambertMaterialBase::getNormalMapImage(void) const
{
    return _sfNormalMapImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfNormalMapImage field.
inline
ImagePtr &LambertMaterialBase::getNormalMapImage(void)
{
    return _sfNormalMapImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfNormalMapImage field.
inline
void LambertMaterialBase::setNormalMapImage(const ImagePtr &value)
{
    _sfNormalMapImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfBumpDepth field.
inline
Real32 &LambertMaterialBase::editBumpDepth(void)
{
    return _sfBumpDepth.getValue();
}

//! Get the value of the LambertMaterial::_sfBumpDepth field.
inline
const Real32 &LambertMaterialBase::getBumpDepth(void) const
{
    return _sfBumpDepth.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfBumpDepth field.
inline
Real32 &LambertMaterialBase::getBumpDepth(void)
{
    return _sfBumpDepth.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfBumpDepth field.
inline
void LambertMaterialBase::setBumpDepth(const Real32 &value)
{
    _sfBumpDepth.setValue(value);
}

//! Get the value of the LambertMaterial::_sfBumpDepthImage field.
inline
ImagePtr &LambertMaterialBase::editBumpDepthImage(void)
{
    return _sfBumpDepthImage.getValue();
}

//! Get the value of the LambertMaterial::_sfBumpDepthImage field.
inline
const ImagePtr &LambertMaterialBase::getBumpDepthImage(void) const
{
    return _sfBumpDepthImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfBumpDepthImage field.
inline
ImagePtr &LambertMaterialBase::getBumpDepthImage(void)
{
    return _sfBumpDepthImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfBumpDepthImage field.
inline
void LambertMaterialBase::setBumpDepthImage(const ImagePtr &value)
{
    _sfBumpDepthImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfDiffuse field.
inline
Real32 &LambertMaterialBase::editDiffuse(void)
{
    return _sfDiffuse.getValue();
}

//! Get the value of the LambertMaterial::_sfDiffuse field.
inline
const Real32 &LambertMaterialBase::getDiffuse(void) const
{
    return _sfDiffuse.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfDiffuse field.
inline
Real32 &LambertMaterialBase::getDiffuse(void)
{
    return _sfDiffuse.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfDiffuse field.
inline
void LambertMaterialBase::setDiffuse(const Real32 &value)
{
    _sfDiffuse.setValue(value);
}

//! Get the value of the LambertMaterial::_sfDiffuseImage field.
inline
ImagePtr &LambertMaterialBase::editDiffuseImage(void)
{
    return _sfDiffuseImage.getValue();
}

//! Get the value of the LambertMaterial::_sfDiffuseImage field.
inline
const ImagePtr &LambertMaterialBase::getDiffuseImage(void) const
{
    return _sfDiffuseImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfDiffuseImage field.
inline
ImagePtr &LambertMaterialBase::getDiffuseImage(void)
{
    return _sfDiffuseImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfDiffuseImage field.
inline
void LambertMaterialBase::setDiffuseImage(const ImagePtr &value)
{
    _sfDiffuseImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucence field.
inline
Real32 &LambertMaterialBase::editTransleucence(void)
{
    return _sfTransleucence.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucence field.
inline
const Real32 &LambertMaterialBase::getTransleucence(void) const
{
    return _sfTransleucence.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucence field.
inline
Real32 &LambertMaterialBase::getTransleucence(void)
{
    return _sfTransleucence.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucence field.
inline
void LambertMaterialBase::setTransleucence(const Real32 &value)
{
    _sfTransleucence.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucenceImage field.
inline
ImagePtr &LambertMaterialBase::editTransleucenceImage(void)
{
    return _sfTransleucenceImage.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucenceImage field.
inline
const ImagePtr &LambertMaterialBase::getTransleucenceImage(void) const
{
    return _sfTransleucenceImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucenceImage field.
inline
ImagePtr &LambertMaterialBase::getTransleucenceImage(void)
{
    return _sfTransleucenceImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucenceImage field.
inline
void LambertMaterialBase::setTransleucenceImage(const ImagePtr &value)
{
    _sfTransleucenceImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucenceDepth field.
inline
Real32 &LambertMaterialBase::editTransleucenceDepth(void)
{
    return _sfTransleucenceDepth.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucenceDepth field.
inline
const Real32 &LambertMaterialBase::getTransleucenceDepth(void) const
{
    return _sfTransleucenceDepth.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucenceDepth field.
inline
Real32 &LambertMaterialBase::getTransleucenceDepth(void)
{
    return _sfTransleucenceDepth.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucenceDepth field.
inline
void LambertMaterialBase::setTransleucenceDepth(const Real32 &value)
{
    _sfTransleucenceDepth.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucenceDepthImage field.
inline
ImagePtr &LambertMaterialBase::editTransleucenceDepthImage(void)
{
    return _sfTransleucenceDepthImage.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucenceDepthImage field.
inline
const ImagePtr &LambertMaterialBase::getTransleucenceDepthImage(void) const
{
    return _sfTransleucenceDepthImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucenceDepthImage field.
inline
ImagePtr &LambertMaterialBase::getTransleucenceDepthImage(void)
{
    return _sfTransleucenceDepthImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucenceDepthImage field.
inline
void LambertMaterialBase::setTransleucenceDepthImage(const ImagePtr &value)
{
    _sfTransleucenceDepthImage.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucenceFocus field.
inline
Real32 &LambertMaterialBase::editTransleucenceFocus(void)
{
    return _sfTransleucenceFocus.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucenceFocus field.
inline
const Real32 &LambertMaterialBase::getTransleucenceFocus(void) const
{
    return _sfTransleucenceFocus.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucenceFocus field.
inline
Real32 &LambertMaterialBase::getTransleucenceFocus(void)
{
    return _sfTransleucenceFocus.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucenceFocus field.
inline
void LambertMaterialBase::setTransleucenceFocus(const Real32 &value)
{
    _sfTransleucenceFocus.setValue(value);
}

//! Get the value of the LambertMaterial::_sfTransleucenceFocusImage field.
inline
ImagePtr &LambertMaterialBase::editTransleucenceFocusImage(void)
{
    return _sfTransleucenceFocusImage.getValue();
}

//! Get the value of the LambertMaterial::_sfTransleucenceFocusImage field.
inline
const ImagePtr &LambertMaterialBase::getTransleucenceFocusImage(void) const
{
    return _sfTransleucenceFocusImage.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the LambertMaterial::_sfTransleucenceFocusImage field.
inline
ImagePtr &LambertMaterialBase::getTransleucenceFocusImage(void)
{
    return _sfTransleucenceFocusImage.getValue();
}
#endif

//! Set the value of the LambertMaterial::_sfTransleucenceFocusImage field.
inline
void LambertMaterialBase::setTransleucenceFocusImage(const ImagePtr &value)
{
    _sfTransleucenceFocusImage.setValue(value);
}


OSG_END_NAMESPACE

