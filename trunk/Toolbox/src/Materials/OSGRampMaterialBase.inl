/*---------------------------------------------------------------------------*\
 *                        OpenSG ToolBox Toolbox                             *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RampMaterial!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &RampMaterialBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 RampMaterialBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
RampMaterialPtr RampMaterialBase::create(void) 
{
    RampMaterialPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = RampMaterialPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
RampMaterialPtr RampMaterialBase::createEmpty(void) 
{ 
    RampMaterialPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the RampMaterial::_sfParameters field.
inline
const SFSHLParameterChunkPtr *RampMaterialBase::getSFParameters(void) const
{
    return &_sfParameters;
}

//! Get the RampMaterial::_sfParameters field.
inline
SFSHLParameterChunkPtr *RampMaterialBase::editSFParameters(void)
{
    return &_sfParameters;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfParameters field.
inline
SFSHLParameterChunkPtr *RampMaterialBase::getSFParameters(void)
{
    return &_sfParameters;
}
#endif

//! Get the RampMaterial::_sfShader field.
inline
const SFSHLChunkPtr *RampMaterialBase::getSFShader(void) const
{
    return &_sfShader;
}

//! Get the RampMaterial::_sfShader field.
inline
SFSHLChunkPtr *RampMaterialBase::editSFShader(void)
{
    return &_sfShader;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfShader field.
inline
SFSHLChunkPtr *RampMaterialBase::getSFShader(void)
{
    return &_sfShader;
}
#endif

//! Get the RampMaterial::_sfNumLights field.
inline
const SFUInt8 *RampMaterialBase::getSFNumLights(void) const
{
    return &_sfNumLights;
}

//! Get the RampMaterial::_sfNumLights field.
inline
SFUInt8 *RampMaterialBase::editSFNumLights(void)
{
    return &_sfNumLights;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfNumLights field.
inline
SFUInt8 *RampMaterialBase::getSFNumLights(void)
{
    return &_sfNumLights;
}
#endif

//! Get the RampMaterial::_sfRampSource field.
inline
const SFUInt8 *RampMaterialBase::getSFRampSource(void) const
{
    return &_sfRampSource;
}

//! Get the RampMaterial::_sfRampSource field.
inline
SFUInt8 *RampMaterialBase::editSFRampSource(void)
{
    return &_sfRampSource;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfRampSource field.
inline
SFUInt8 *RampMaterialBase::getSFRampSource(void)
{
    return &_sfRampSource;
}
#endif

//! Get the RampMaterial::_mfColors field.
inline
const MFColor3f *RampMaterialBase::getMFColors(void) const
{
    return &_mfColors;
}

//! Get the RampMaterial::_mfColors field.
inline
MFColor3f *RampMaterialBase::editMFColors(void)
{
    return &_mfColors;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfColors field.
inline
MFColor3f *RampMaterialBase::getMFColors(void)
{
    return &_mfColors;
}
#endif

//! Get the RampMaterial::_mfColorPositions field.
inline
const MFReal32 *RampMaterialBase::getMFColorPositions(void) const
{
    return &_mfColorPositions;
}

//! Get the RampMaterial::_mfColorPositions field.
inline
MFReal32 *RampMaterialBase::editMFColorPositions(void)
{
    return &_mfColorPositions;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfColorPositions field.
inline
MFReal32 *RampMaterialBase::getMFColorPositions(void)
{
    return &_mfColorPositions;
}
#endif

//! Get the RampMaterial::_mfColorInterpolations field.
inline
const MFUInt8 *RampMaterialBase::getMFColorInterpolations(void) const
{
    return &_mfColorInterpolations;
}

//! Get the RampMaterial::_mfColorInterpolations field.
inline
MFUInt8 *RampMaterialBase::editMFColorInterpolations(void)
{
    return &_mfColorInterpolations;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfColorInterpolations field.
inline
MFUInt8 *RampMaterialBase::getMFColorInterpolations(void)
{
    return &_mfColorInterpolations;
}
#endif

//! Get the RampMaterial::_sfColorTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFColorTexture(void) const
{
    return &_sfColorTexture;
}

//! Get the RampMaterial::_sfColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFColorTexture(void)
{
    return &_sfColorTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFColorTexture(void)
{
    return &_sfColorTexture;
}
#endif

//! Get the RampMaterial::_mfTransparencies field.
inline
const MFColor3f *RampMaterialBase::getMFTransparencies(void) const
{
    return &_mfTransparencies;
}

//! Get the RampMaterial::_mfTransparencies field.
inline
MFColor3f *RampMaterialBase::editMFTransparencies(void)
{
    return &_mfTransparencies;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfTransparencies field.
inline
MFColor3f *RampMaterialBase::getMFTransparencies(void)
{
    return &_mfTransparencies;
}
#endif

//! Get the RampMaterial::_mfTransparencyPositions field.
inline
const MFReal32 *RampMaterialBase::getMFTransparencyPositions(void) const
{
    return &_mfTransparencyPositions;
}

//! Get the RampMaterial::_mfTransparencyPositions field.
inline
MFReal32 *RampMaterialBase::editMFTransparencyPositions(void)
{
    return &_mfTransparencyPositions;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfTransparencyPositions field.
inline
MFReal32 *RampMaterialBase::getMFTransparencyPositions(void)
{
    return &_mfTransparencyPositions;
}
#endif

//! Get the RampMaterial::_mfTransparencyInterpolations field.
inline
const MFUInt8 *RampMaterialBase::getMFTransparencyInterpolations(void) const
{
    return &_mfTransparencyInterpolations;
}

//! Get the RampMaterial::_mfTransparencyInterpolations field.
inline
MFUInt8 *RampMaterialBase::editMFTransparencyInterpolations(void)
{
    return &_mfTransparencyInterpolations;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfTransparencyInterpolations field.
inline
MFUInt8 *RampMaterialBase::getMFTransparencyInterpolations(void)
{
    return &_mfTransparencyInterpolations;
}
#endif

//! Get the RampMaterial::_sfTransparencyTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFTransparencyTexture(void) const
{
    return &_sfTransparencyTexture;
}

//! Get the RampMaterial::_sfTransparencyTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFTransparencyTexture(void)
{
    return &_sfTransparencyTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfTransparencyTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFTransparencyTexture(void)
{
    return &_sfTransparencyTexture;
}
#endif

//! Get the RampMaterial::_sfAmbientColor field.
inline
const SFColor3f *RampMaterialBase::getSFAmbientColor(void) const
{
    return &_sfAmbientColor;
}

//! Get the RampMaterial::_sfAmbientColor field.
inline
SFColor3f *RampMaterialBase::editSFAmbientColor(void)
{
    return &_sfAmbientColor;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfAmbientColor field.
inline
SFColor3f *RampMaterialBase::getSFAmbientColor(void)
{
    return &_sfAmbientColor;
}
#endif

//! Get the RampMaterial::_sfAmbientColorTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFAmbientColorTexture(void) const
{
    return &_sfAmbientColorTexture;
}

//! Get the RampMaterial::_sfAmbientColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFAmbientColorTexture(void)
{
    return &_sfAmbientColorTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfAmbientColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFAmbientColorTexture(void)
{
    return &_sfAmbientColorTexture;
}
#endif

//! Get the RampMaterial::_mfIncandescences field.
inline
const MFColor3f *RampMaterialBase::getMFIncandescences(void) const
{
    return &_mfIncandescences;
}

//! Get the RampMaterial::_mfIncandescences field.
inline
MFColor3f *RampMaterialBase::editMFIncandescences(void)
{
    return &_mfIncandescences;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfIncandescences field.
inline
MFColor3f *RampMaterialBase::getMFIncandescences(void)
{
    return &_mfIncandescences;
}
#endif

//! Get the RampMaterial::_mfIncandescencePositions field.
inline
const MFReal32 *RampMaterialBase::getMFIncandescencePositions(void) const
{
    return &_mfIncandescencePositions;
}

//! Get the RampMaterial::_mfIncandescencePositions field.
inline
MFReal32 *RampMaterialBase::editMFIncandescencePositions(void)
{
    return &_mfIncandescencePositions;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfIncandescencePositions field.
inline
MFReal32 *RampMaterialBase::getMFIncandescencePositions(void)
{
    return &_mfIncandescencePositions;
}
#endif

//! Get the RampMaterial::_mfIncandescenceInterpolations field.
inline
const MFUInt8 *RampMaterialBase::getMFIncandescenceInterpolations(void) const
{
    return &_mfIncandescenceInterpolations;
}

//! Get the RampMaterial::_mfIncandescenceInterpolations field.
inline
MFUInt8 *RampMaterialBase::editMFIncandescenceInterpolations(void)
{
    return &_mfIncandescenceInterpolations;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfIncandescenceInterpolations field.
inline
MFUInt8 *RampMaterialBase::getMFIncandescenceInterpolations(void)
{
    return &_mfIncandescenceInterpolations;
}
#endif

//! Get the RampMaterial::_sfIncandescenceTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFIncandescenceTexture(void) const
{
    return &_sfIncandescenceTexture;
}

//! Get the RampMaterial::_sfIncandescenceTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFIncandescenceTexture(void)
{
    return &_sfIncandescenceTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfIncandescenceTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFIncandescenceTexture(void)
{
    return &_sfIncandescenceTexture;
}
#endif

//! Get the RampMaterial::_sfNormalMapTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFNormalMapTexture(void) const
{
    return &_sfNormalMapTexture;
}

//! Get the RampMaterial::_sfNormalMapTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFNormalMapTexture(void)
{
    return &_sfNormalMapTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfNormalMapTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFNormalMapTexture(void)
{
    return &_sfNormalMapTexture;
}
#endif

//! Get the RampMaterial::_sfBumpDepth field.
inline
const SFReal32 *RampMaterialBase::getSFBumpDepth(void) const
{
    return &_sfBumpDepth;
}

//! Get the RampMaterial::_sfBumpDepth field.
inline
SFReal32 *RampMaterialBase::editSFBumpDepth(void)
{
    return &_sfBumpDepth;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfBumpDepth field.
inline
SFReal32 *RampMaterialBase::getSFBumpDepth(void)
{
    return &_sfBumpDepth;
}
#endif

//! Get the RampMaterial::_sfBumpDepthTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFBumpDepthTexture(void) const
{
    return &_sfBumpDepthTexture;
}

//! Get the RampMaterial::_sfBumpDepthTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFBumpDepthTexture(void)
{
    return &_sfBumpDepthTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfBumpDepthTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFBumpDepthTexture(void)
{
    return &_sfBumpDepthTexture;
}
#endif

//! Get the RampMaterial::_sfDiffuse field.
inline
const SFReal32 *RampMaterialBase::getSFDiffuse(void) const
{
    return &_sfDiffuse;
}

//! Get the RampMaterial::_sfDiffuse field.
inline
SFReal32 *RampMaterialBase::editSFDiffuse(void)
{
    return &_sfDiffuse;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfDiffuse field.
inline
SFReal32 *RampMaterialBase::getSFDiffuse(void)
{
    return &_sfDiffuse;
}
#endif

//! Get the RampMaterial::_sfDiffuseTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFDiffuseTexture(void) const
{
    return &_sfDiffuseTexture;
}

//! Get the RampMaterial::_sfDiffuseTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFDiffuseTexture(void)
{
    return &_sfDiffuseTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfDiffuseTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFDiffuseTexture(void)
{
    return &_sfDiffuseTexture;
}
#endif

//! Get the RampMaterial::_sfSpecularity field.
inline
const SFReal32 *RampMaterialBase::getSFSpecularity(void) const
{
    return &_sfSpecularity;
}

//! Get the RampMaterial::_sfSpecularity field.
inline
SFReal32 *RampMaterialBase::editSFSpecularity(void)
{
    return &_sfSpecularity;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularity field.
inline
SFReal32 *RampMaterialBase::getSFSpecularity(void)
{
    return &_sfSpecularity;
}
#endif

//! Get the RampMaterial::_sfSpecularityTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFSpecularityTexture(void) const
{
    return &_sfSpecularityTexture;
}

//! Get the RampMaterial::_sfSpecularityTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFSpecularityTexture(void)
{
    return &_sfSpecularityTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularityTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFSpecularityTexture(void)
{
    return &_sfSpecularityTexture;
}
#endif

//! Get the RampMaterial::_sfSpecularEccentricity field.
inline
const SFReal32 *RampMaterialBase::getSFSpecularEccentricity(void) const
{
    return &_sfSpecularEccentricity;
}

//! Get the RampMaterial::_sfSpecularEccentricity field.
inline
SFReal32 *RampMaterialBase::editSFSpecularEccentricity(void)
{
    return &_sfSpecularEccentricity;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularEccentricity field.
inline
SFReal32 *RampMaterialBase::getSFSpecularEccentricity(void)
{
    return &_sfSpecularEccentricity;
}
#endif

//! Get the RampMaterial::_sfSpecularEccentricityTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFSpecularEccentricityTexture(void) const
{
    return &_sfSpecularEccentricityTexture;
}

//! Get the RampMaterial::_sfSpecularEccentricityTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFSpecularEccentricityTexture(void)
{
    return &_sfSpecularEccentricityTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularEccentricityTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFSpecularEccentricityTexture(void)
{
    return &_sfSpecularEccentricityTexture;
}
#endif

//! Get the RampMaterial::_mfSpecularColors field.
inline
const MFColor3f *RampMaterialBase::getMFSpecularColors(void) const
{
    return &_mfSpecularColors;
}

//! Get the RampMaterial::_mfSpecularColors field.
inline
MFColor3f *RampMaterialBase::editMFSpecularColors(void)
{
    return &_mfSpecularColors;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularColors field.
inline
MFColor3f *RampMaterialBase::getMFSpecularColors(void)
{
    return &_mfSpecularColors;
}
#endif

//! Get the RampMaterial::_mfSpecularColorPositions field.
inline
const MFReal32 *RampMaterialBase::getMFSpecularColorPositions(void) const
{
    return &_mfSpecularColorPositions;
}

//! Get the RampMaterial::_mfSpecularColorPositions field.
inline
MFReal32 *RampMaterialBase::editMFSpecularColorPositions(void)
{
    return &_mfSpecularColorPositions;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularColorPositions field.
inline
MFReal32 *RampMaterialBase::getMFSpecularColorPositions(void)
{
    return &_mfSpecularColorPositions;
}
#endif

//! Get the RampMaterial::_mfSpecularColorInterpolations field.
inline
const MFUInt8 *RampMaterialBase::getMFSpecularColorInterpolations(void) const
{
    return &_mfSpecularColorInterpolations;
}

//! Get the RampMaterial::_mfSpecularColorInterpolations field.
inline
MFUInt8 *RampMaterialBase::editMFSpecularColorInterpolations(void)
{
    return &_mfSpecularColorInterpolations;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularColorInterpolations field.
inline
MFUInt8 *RampMaterialBase::getMFSpecularColorInterpolations(void)
{
    return &_mfSpecularColorInterpolations;
}
#endif

//! Get the RampMaterial::_sfSpecularColorTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFSpecularColorTexture(void) const
{
    return &_sfSpecularColorTexture;
}

//! Get the RampMaterial::_sfSpecularColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFSpecularColorTexture(void)
{
    return &_sfSpecularColorTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularColorTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFSpecularColorTexture(void)
{
    return &_sfSpecularColorTexture;
}
#endif

//! Get the RampMaterial::_mfSpecularRolloffs field.
inline
const MFReal32 *RampMaterialBase::getMFSpecularRolloffs(void) const
{
    return &_mfSpecularRolloffs;
}

//! Get the RampMaterial::_mfSpecularRolloffs field.
inline
MFReal32 *RampMaterialBase::editMFSpecularRolloffs(void)
{
    return &_mfSpecularRolloffs;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularRolloffs field.
inline
MFReal32 *RampMaterialBase::getMFSpecularRolloffs(void)
{
    return &_mfSpecularRolloffs;
}
#endif

//! Get the RampMaterial::_mfSpecularRolloffPositions field.
inline
const MFReal32 *RampMaterialBase::getMFSpecularRolloffPositions(void) const
{
    return &_mfSpecularRolloffPositions;
}

//! Get the RampMaterial::_mfSpecularRolloffPositions field.
inline
MFReal32 *RampMaterialBase::editMFSpecularRolloffPositions(void)
{
    return &_mfSpecularRolloffPositions;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularRolloffPositions field.
inline
MFReal32 *RampMaterialBase::getMFSpecularRolloffPositions(void)
{
    return &_mfSpecularRolloffPositions;
}
#endif

//! Get the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
const MFUInt8 *RampMaterialBase::getMFSpecularRolloffInterpolations(void) const
{
    return &_mfSpecularRolloffInterpolations;
}

//! Get the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
MFUInt8 *RampMaterialBase::editMFSpecularRolloffInterpolations(void)
{
    return &_mfSpecularRolloffInterpolations;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
MFUInt8 *RampMaterialBase::getMFSpecularRolloffInterpolations(void)
{
    return &_mfSpecularRolloffInterpolations;
}
#endif

//! Get the RampMaterial::_sfSpecularRolloffTexture field.
inline
const SFTextureChunkPtr *RampMaterialBase::getSFSpecularRolloffTexture(void) const
{
    return &_sfSpecularRolloffTexture;
}

//! Get the RampMaterial::_sfSpecularRolloffTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::editSFSpecularRolloffTexture(void)
{
    return &_sfSpecularRolloffTexture;
}

#ifndef OSG_2_PREP
//! Get the RampMaterial::_sfSpecularRolloffTexture field.
inline
SFTextureChunkPtr *RampMaterialBase::getSFSpecularRolloffTexture(void)
{
    return &_sfSpecularRolloffTexture;
}
#endif


//! Get the value of the RampMaterial::_sfParameters field.
inline
SHLParameterChunkPtr &RampMaterialBase::editParameters(void)
{
    return _sfParameters.getValue();
}

//! Get the value of the RampMaterial::_sfParameters field.
inline
const SHLParameterChunkPtr &RampMaterialBase::getParameters(void) const
{
    return _sfParameters.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfParameters field.
inline
SHLParameterChunkPtr &RampMaterialBase::getParameters(void)
{
    return _sfParameters.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfParameters field.
inline
void RampMaterialBase::setParameters(const SHLParameterChunkPtr &value)
{
    _sfParameters.setValue(value);
}

//! Get the value of the RampMaterial::_sfShader field.
inline
SHLChunkPtr &RampMaterialBase::editShader(void)
{
    return _sfShader.getValue();
}

//! Get the value of the RampMaterial::_sfShader field.
inline
const SHLChunkPtr &RampMaterialBase::getShader(void) const
{
    return _sfShader.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfShader field.
inline
SHLChunkPtr &RampMaterialBase::getShader(void)
{
    return _sfShader.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfShader field.
inline
void RampMaterialBase::setShader(const SHLChunkPtr &value)
{
    _sfShader.setValue(value);
}

//! Get the value of the RampMaterial::_sfNumLights field.
inline
UInt8 &RampMaterialBase::editNumLights(void)
{
    return _sfNumLights.getValue();
}

//! Get the value of the RampMaterial::_sfNumLights field.
inline
const UInt8 &RampMaterialBase::getNumLights(void) const
{
    return _sfNumLights.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfNumLights field.
inline
UInt8 &RampMaterialBase::getNumLights(void)
{
    return _sfNumLights.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfNumLights field.
inline
void RampMaterialBase::setNumLights(const UInt8 &value)
{
    _sfNumLights.setValue(value);
}

//! Get the value of the RampMaterial::_sfRampSource field.
inline
UInt8 &RampMaterialBase::editRampSource(void)
{
    return _sfRampSource.getValue();
}

//! Get the value of the RampMaterial::_sfRampSource field.
inline
const UInt8 &RampMaterialBase::getRampSource(void) const
{
    return _sfRampSource.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfRampSource field.
inline
UInt8 &RampMaterialBase::getRampSource(void)
{
    return _sfRampSource.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfRampSource field.
inline
void RampMaterialBase::setRampSource(const UInt8 &value)
{
    _sfRampSource.setValue(value);
}

//! Get the value of the RampMaterial::_sfColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::editColorTexture(void)
{
    return _sfColorTexture.getValue();
}

//! Get the value of the RampMaterial::_sfColorTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getColorTexture(void) const
{
    return _sfColorTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::getColorTexture(void)
{
    return _sfColorTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfColorTexture field.
inline
void RampMaterialBase::setColorTexture(const TextureChunkPtr &value)
{
    _sfColorTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfTransparencyTexture field.
inline
TextureChunkPtr &RampMaterialBase::editTransparencyTexture(void)
{
    return _sfTransparencyTexture.getValue();
}

//! Get the value of the RampMaterial::_sfTransparencyTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getTransparencyTexture(void) const
{
    return _sfTransparencyTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfTransparencyTexture field.
inline
TextureChunkPtr &RampMaterialBase::getTransparencyTexture(void)
{
    return _sfTransparencyTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfTransparencyTexture field.
inline
void RampMaterialBase::setTransparencyTexture(const TextureChunkPtr &value)
{
    _sfTransparencyTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfAmbientColor field.
inline
Color3f &RampMaterialBase::editAmbientColor(void)
{
    return _sfAmbientColor.getValue();
}

//! Get the value of the RampMaterial::_sfAmbientColor field.
inline
const Color3f &RampMaterialBase::getAmbientColor(void) const
{
    return _sfAmbientColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfAmbientColor field.
inline
Color3f &RampMaterialBase::getAmbientColor(void)
{
    return _sfAmbientColor.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfAmbientColor field.
inline
void RampMaterialBase::setAmbientColor(const Color3f &value)
{
    _sfAmbientColor.setValue(value);
}

//! Get the value of the RampMaterial::_sfAmbientColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::editAmbientColorTexture(void)
{
    return _sfAmbientColorTexture.getValue();
}

//! Get the value of the RampMaterial::_sfAmbientColorTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getAmbientColorTexture(void) const
{
    return _sfAmbientColorTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfAmbientColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::getAmbientColorTexture(void)
{
    return _sfAmbientColorTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfAmbientColorTexture field.
inline
void RampMaterialBase::setAmbientColorTexture(const TextureChunkPtr &value)
{
    _sfAmbientColorTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfIncandescenceTexture field.
inline
TextureChunkPtr &RampMaterialBase::editIncandescenceTexture(void)
{
    return _sfIncandescenceTexture.getValue();
}

//! Get the value of the RampMaterial::_sfIncandescenceTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getIncandescenceTexture(void) const
{
    return _sfIncandescenceTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfIncandescenceTexture field.
inline
TextureChunkPtr &RampMaterialBase::getIncandescenceTexture(void)
{
    return _sfIncandescenceTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfIncandescenceTexture field.
inline
void RampMaterialBase::setIncandescenceTexture(const TextureChunkPtr &value)
{
    _sfIncandescenceTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfNormalMapTexture field.
inline
TextureChunkPtr &RampMaterialBase::editNormalMapTexture(void)
{
    return _sfNormalMapTexture.getValue();
}

//! Get the value of the RampMaterial::_sfNormalMapTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getNormalMapTexture(void) const
{
    return _sfNormalMapTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfNormalMapTexture field.
inline
TextureChunkPtr &RampMaterialBase::getNormalMapTexture(void)
{
    return _sfNormalMapTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfNormalMapTexture field.
inline
void RampMaterialBase::setNormalMapTexture(const TextureChunkPtr &value)
{
    _sfNormalMapTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfBumpDepth field.
inline
Real32 &RampMaterialBase::editBumpDepth(void)
{
    return _sfBumpDepth.getValue();
}

//! Get the value of the RampMaterial::_sfBumpDepth field.
inline
const Real32 &RampMaterialBase::getBumpDepth(void) const
{
    return _sfBumpDepth.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfBumpDepth field.
inline
Real32 &RampMaterialBase::getBumpDepth(void)
{
    return _sfBumpDepth.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfBumpDepth field.
inline
void RampMaterialBase::setBumpDepth(const Real32 &value)
{
    _sfBumpDepth.setValue(value);
}

//! Get the value of the RampMaterial::_sfBumpDepthTexture field.
inline
TextureChunkPtr &RampMaterialBase::editBumpDepthTexture(void)
{
    return _sfBumpDepthTexture.getValue();
}

//! Get the value of the RampMaterial::_sfBumpDepthTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getBumpDepthTexture(void) const
{
    return _sfBumpDepthTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfBumpDepthTexture field.
inline
TextureChunkPtr &RampMaterialBase::getBumpDepthTexture(void)
{
    return _sfBumpDepthTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfBumpDepthTexture field.
inline
void RampMaterialBase::setBumpDepthTexture(const TextureChunkPtr &value)
{
    _sfBumpDepthTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfDiffuse field.
inline
Real32 &RampMaterialBase::editDiffuse(void)
{
    return _sfDiffuse.getValue();
}

//! Get the value of the RampMaterial::_sfDiffuse field.
inline
const Real32 &RampMaterialBase::getDiffuse(void) const
{
    return _sfDiffuse.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfDiffuse field.
inline
Real32 &RampMaterialBase::getDiffuse(void)
{
    return _sfDiffuse.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfDiffuse field.
inline
void RampMaterialBase::setDiffuse(const Real32 &value)
{
    _sfDiffuse.setValue(value);
}

//! Get the value of the RampMaterial::_sfDiffuseTexture field.
inline
TextureChunkPtr &RampMaterialBase::editDiffuseTexture(void)
{
    return _sfDiffuseTexture.getValue();
}

//! Get the value of the RampMaterial::_sfDiffuseTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getDiffuseTexture(void) const
{
    return _sfDiffuseTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfDiffuseTexture field.
inline
TextureChunkPtr &RampMaterialBase::getDiffuseTexture(void)
{
    return _sfDiffuseTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfDiffuseTexture field.
inline
void RampMaterialBase::setDiffuseTexture(const TextureChunkPtr &value)
{
    _sfDiffuseTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularity field.
inline
Real32 &RampMaterialBase::editSpecularity(void)
{
    return _sfSpecularity.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularity field.
inline
const Real32 &RampMaterialBase::getSpecularity(void) const
{
    return _sfSpecularity.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularity field.
inline
Real32 &RampMaterialBase::getSpecularity(void)
{
    return _sfSpecularity.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularity field.
inline
void RampMaterialBase::setSpecularity(const Real32 &value)
{
    _sfSpecularity.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularityTexture field.
inline
TextureChunkPtr &RampMaterialBase::editSpecularityTexture(void)
{
    return _sfSpecularityTexture.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularityTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getSpecularityTexture(void) const
{
    return _sfSpecularityTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularityTexture field.
inline
TextureChunkPtr &RampMaterialBase::getSpecularityTexture(void)
{
    return _sfSpecularityTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularityTexture field.
inline
void RampMaterialBase::setSpecularityTexture(const TextureChunkPtr &value)
{
    _sfSpecularityTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularEccentricity field.
inline
Real32 &RampMaterialBase::editSpecularEccentricity(void)
{
    return _sfSpecularEccentricity.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularEccentricity field.
inline
const Real32 &RampMaterialBase::getSpecularEccentricity(void) const
{
    return _sfSpecularEccentricity.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularEccentricity field.
inline
Real32 &RampMaterialBase::getSpecularEccentricity(void)
{
    return _sfSpecularEccentricity.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularEccentricity field.
inline
void RampMaterialBase::setSpecularEccentricity(const Real32 &value)
{
    _sfSpecularEccentricity.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularEccentricityTexture field.
inline
TextureChunkPtr &RampMaterialBase::editSpecularEccentricityTexture(void)
{
    return _sfSpecularEccentricityTexture.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularEccentricityTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getSpecularEccentricityTexture(void) const
{
    return _sfSpecularEccentricityTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularEccentricityTexture field.
inline
TextureChunkPtr &RampMaterialBase::getSpecularEccentricityTexture(void)
{
    return _sfSpecularEccentricityTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularEccentricityTexture field.
inline
void RampMaterialBase::setSpecularEccentricityTexture(const TextureChunkPtr &value)
{
    _sfSpecularEccentricityTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::editSpecularColorTexture(void)
{
    return _sfSpecularColorTexture.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularColorTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getSpecularColorTexture(void) const
{
    return _sfSpecularColorTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularColorTexture field.
inline
TextureChunkPtr &RampMaterialBase::getSpecularColorTexture(void)
{
    return _sfSpecularColorTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularColorTexture field.
inline
void RampMaterialBase::setSpecularColorTexture(const TextureChunkPtr &value)
{
    _sfSpecularColorTexture.setValue(value);
}

//! Get the value of the RampMaterial::_sfSpecularRolloffTexture field.
inline
TextureChunkPtr &RampMaterialBase::editSpecularRolloffTexture(void)
{
    return _sfSpecularRolloffTexture.getValue();
}

//! Get the value of the RampMaterial::_sfSpecularRolloffTexture field.
inline
const TextureChunkPtr &RampMaterialBase::getSpecularRolloffTexture(void) const
{
    return _sfSpecularRolloffTexture.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RampMaterial::_sfSpecularRolloffTexture field.
inline
TextureChunkPtr &RampMaterialBase::getSpecularRolloffTexture(void)
{
    return _sfSpecularRolloffTexture.getValue();
}
#endif

//! Set the value of the RampMaterial::_sfSpecularRolloffTexture field.
inline
void RampMaterialBase::setSpecularRolloffTexture(const TextureChunkPtr &value)
{
    _sfSpecularRolloffTexture.setValue(value);
}


//! Get the value of the \a index element the RampMaterial::_mfColors field.
inline
Color3f &RampMaterialBase::editColors(const UInt32 index)
{
    return _mfColors[index];
}

//! Get the value of the \a index element the RampMaterial::_mfColors field.
inline
const Color3f &RampMaterialBase::getColors(const UInt32 index) const
{
    return _mfColors[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfColors field.
inline
Color3f &RampMaterialBase::getColors(const UInt32 index)
{
    return _mfColors[index];
}

//! Get the RampMaterial::_mfColors field.
inline
MFColor3f &RampMaterialBase::getColors(void)
{
    return _mfColors;
}

//! Get the RampMaterial::_mfColors field.
inline
const MFColor3f &RampMaterialBase::getColors(void) const
{
    return _mfColors;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfColorPositions field.
inline
Real32 &RampMaterialBase::editColorPositions(const UInt32 index)
{
    return _mfColorPositions[index];
}

//! Get the value of the \a index element the RampMaterial::_mfColorPositions field.
inline
const Real32 &RampMaterialBase::getColorPositions(const UInt32 index) const
{
    return _mfColorPositions[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfColorPositions field.
inline
Real32 &RampMaterialBase::getColorPositions(const UInt32 index)
{
    return _mfColorPositions[index];
}

//! Get the RampMaterial::_mfColorPositions field.
inline
MFReal32 &RampMaterialBase::getColorPositions(void)
{
    return _mfColorPositions;
}

//! Get the RampMaterial::_mfColorPositions field.
inline
const MFReal32 &RampMaterialBase::getColorPositions(void) const
{
    return _mfColorPositions;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfColorInterpolations field.
inline
UInt8 &RampMaterialBase::editColorInterpolations(const UInt32 index)
{
    return _mfColorInterpolations[index];
}

//! Get the value of the \a index element the RampMaterial::_mfColorInterpolations field.
inline
const UInt8 &RampMaterialBase::getColorInterpolations(const UInt32 index) const
{
    return _mfColorInterpolations[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfColorInterpolations field.
inline
UInt8 &RampMaterialBase::getColorInterpolations(const UInt32 index)
{
    return _mfColorInterpolations[index];
}

//! Get the RampMaterial::_mfColorInterpolations field.
inline
MFUInt8 &RampMaterialBase::getColorInterpolations(void)
{
    return _mfColorInterpolations;
}

//! Get the RampMaterial::_mfColorInterpolations field.
inline
const MFUInt8 &RampMaterialBase::getColorInterpolations(void) const
{
    return _mfColorInterpolations;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfTransparencies field.
inline
Color3f &RampMaterialBase::editTransparencies(const UInt32 index)
{
    return _mfTransparencies[index];
}

//! Get the value of the \a index element the RampMaterial::_mfTransparencies field.
inline
const Color3f &RampMaterialBase::getTransparencies(const UInt32 index) const
{
    return _mfTransparencies[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfTransparencies field.
inline
Color3f &RampMaterialBase::getTransparencies(const UInt32 index)
{
    return _mfTransparencies[index];
}

//! Get the RampMaterial::_mfTransparencies field.
inline
MFColor3f &RampMaterialBase::getTransparencies(void)
{
    return _mfTransparencies;
}

//! Get the RampMaterial::_mfTransparencies field.
inline
const MFColor3f &RampMaterialBase::getTransparencies(void) const
{
    return _mfTransparencies;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfTransparencyPositions field.
inline
Real32 &RampMaterialBase::editTransparencyPositions(const UInt32 index)
{
    return _mfTransparencyPositions[index];
}

//! Get the value of the \a index element the RampMaterial::_mfTransparencyPositions field.
inline
const Real32 &RampMaterialBase::getTransparencyPositions(const UInt32 index) const
{
    return _mfTransparencyPositions[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfTransparencyPositions field.
inline
Real32 &RampMaterialBase::getTransparencyPositions(const UInt32 index)
{
    return _mfTransparencyPositions[index];
}

//! Get the RampMaterial::_mfTransparencyPositions field.
inline
MFReal32 &RampMaterialBase::getTransparencyPositions(void)
{
    return _mfTransparencyPositions;
}

//! Get the RampMaterial::_mfTransparencyPositions field.
inline
const MFReal32 &RampMaterialBase::getTransparencyPositions(void) const
{
    return _mfTransparencyPositions;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfTransparencyInterpolations field.
inline
UInt8 &RampMaterialBase::editTransparencyInterpolations(const UInt32 index)
{
    return _mfTransparencyInterpolations[index];
}

//! Get the value of the \a index element the RampMaterial::_mfTransparencyInterpolations field.
inline
const UInt8 &RampMaterialBase::getTransparencyInterpolations(const UInt32 index) const
{
    return _mfTransparencyInterpolations[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfTransparencyInterpolations field.
inline
UInt8 &RampMaterialBase::getTransparencyInterpolations(const UInt32 index)
{
    return _mfTransparencyInterpolations[index];
}

//! Get the RampMaterial::_mfTransparencyInterpolations field.
inline
MFUInt8 &RampMaterialBase::getTransparencyInterpolations(void)
{
    return _mfTransparencyInterpolations;
}

//! Get the RampMaterial::_mfTransparencyInterpolations field.
inline
const MFUInt8 &RampMaterialBase::getTransparencyInterpolations(void) const
{
    return _mfTransparencyInterpolations;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfIncandescences field.
inline
Color3f &RampMaterialBase::editIncandescences(const UInt32 index)
{
    return _mfIncandescences[index];
}

//! Get the value of the \a index element the RampMaterial::_mfIncandescences field.
inline
const Color3f &RampMaterialBase::getIncandescences(const UInt32 index) const
{
    return _mfIncandescences[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfIncandescences field.
inline
Color3f &RampMaterialBase::getIncandescences(const UInt32 index)
{
    return _mfIncandescences[index];
}

//! Get the RampMaterial::_mfIncandescences field.
inline
MFColor3f &RampMaterialBase::getIncandescences(void)
{
    return _mfIncandescences;
}

//! Get the RampMaterial::_mfIncandescences field.
inline
const MFColor3f &RampMaterialBase::getIncandescences(void) const
{
    return _mfIncandescences;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfIncandescencePositions field.
inline
Real32 &RampMaterialBase::editIncandescencePositions(const UInt32 index)
{
    return _mfIncandescencePositions[index];
}

//! Get the value of the \a index element the RampMaterial::_mfIncandescencePositions field.
inline
const Real32 &RampMaterialBase::getIncandescencePositions(const UInt32 index) const
{
    return _mfIncandescencePositions[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfIncandescencePositions field.
inline
Real32 &RampMaterialBase::getIncandescencePositions(const UInt32 index)
{
    return _mfIncandescencePositions[index];
}

//! Get the RampMaterial::_mfIncandescencePositions field.
inline
MFReal32 &RampMaterialBase::getIncandescencePositions(void)
{
    return _mfIncandescencePositions;
}

//! Get the RampMaterial::_mfIncandescencePositions field.
inline
const MFReal32 &RampMaterialBase::getIncandescencePositions(void) const
{
    return _mfIncandescencePositions;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfIncandescenceInterpolations field.
inline
UInt8 &RampMaterialBase::editIncandescenceInterpolations(const UInt32 index)
{
    return _mfIncandescenceInterpolations[index];
}

//! Get the value of the \a index element the RampMaterial::_mfIncandescenceInterpolations field.
inline
const UInt8 &RampMaterialBase::getIncandescenceInterpolations(const UInt32 index) const
{
    return _mfIncandescenceInterpolations[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfIncandescenceInterpolations field.
inline
UInt8 &RampMaterialBase::getIncandescenceInterpolations(const UInt32 index)
{
    return _mfIncandescenceInterpolations[index];
}

//! Get the RampMaterial::_mfIncandescenceInterpolations field.
inline
MFUInt8 &RampMaterialBase::getIncandescenceInterpolations(void)
{
    return _mfIncandescenceInterpolations;
}

//! Get the RampMaterial::_mfIncandescenceInterpolations field.
inline
const MFUInt8 &RampMaterialBase::getIncandescenceInterpolations(void) const
{
    return _mfIncandescenceInterpolations;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularColors field.
inline
Color3f &RampMaterialBase::editSpecularColors(const UInt32 index)
{
    return _mfSpecularColors[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularColors field.
inline
const Color3f &RampMaterialBase::getSpecularColors(const UInt32 index) const
{
    return _mfSpecularColors[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularColors field.
inline
Color3f &RampMaterialBase::getSpecularColors(const UInt32 index)
{
    return _mfSpecularColors[index];
}

//! Get the RampMaterial::_mfSpecularColors field.
inline
MFColor3f &RampMaterialBase::getSpecularColors(void)
{
    return _mfSpecularColors;
}

//! Get the RampMaterial::_mfSpecularColors field.
inline
const MFColor3f &RampMaterialBase::getSpecularColors(void) const
{
    return _mfSpecularColors;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularColorPositions field.
inline
Real32 &RampMaterialBase::editSpecularColorPositions(const UInt32 index)
{
    return _mfSpecularColorPositions[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularColorPositions field.
inline
const Real32 &RampMaterialBase::getSpecularColorPositions(const UInt32 index) const
{
    return _mfSpecularColorPositions[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularColorPositions field.
inline
Real32 &RampMaterialBase::getSpecularColorPositions(const UInt32 index)
{
    return _mfSpecularColorPositions[index];
}

//! Get the RampMaterial::_mfSpecularColorPositions field.
inline
MFReal32 &RampMaterialBase::getSpecularColorPositions(void)
{
    return _mfSpecularColorPositions;
}

//! Get the RampMaterial::_mfSpecularColorPositions field.
inline
const MFReal32 &RampMaterialBase::getSpecularColorPositions(void) const
{
    return _mfSpecularColorPositions;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularColorInterpolations field.
inline
UInt8 &RampMaterialBase::editSpecularColorInterpolations(const UInt32 index)
{
    return _mfSpecularColorInterpolations[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularColorInterpolations field.
inline
const UInt8 &RampMaterialBase::getSpecularColorInterpolations(const UInt32 index) const
{
    return _mfSpecularColorInterpolations[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularColorInterpolations field.
inline
UInt8 &RampMaterialBase::getSpecularColorInterpolations(const UInt32 index)
{
    return _mfSpecularColorInterpolations[index];
}

//! Get the RampMaterial::_mfSpecularColorInterpolations field.
inline
MFUInt8 &RampMaterialBase::getSpecularColorInterpolations(void)
{
    return _mfSpecularColorInterpolations;
}

//! Get the RampMaterial::_mfSpecularColorInterpolations field.
inline
const MFUInt8 &RampMaterialBase::getSpecularColorInterpolations(void) const
{
    return _mfSpecularColorInterpolations;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffs field.
inline
Real32 &RampMaterialBase::editSpecularRolloffs(const UInt32 index)
{
    return _mfSpecularRolloffs[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffs field.
inline
const Real32 &RampMaterialBase::getSpecularRolloffs(const UInt32 index) const
{
    return _mfSpecularRolloffs[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffs field.
inline
Real32 &RampMaterialBase::getSpecularRolloffs(const UInt32 index)
{
    return _mfSpecularRolloffs[index];
}

//! Get the RampMaterial::_mfSpecularRolloffs field.
inline
MFReal32 &RampMaterialBase::getSpecularRolloffs(void)
{
    return _mfSpecularRolloffs;
}

//! Get the RampMaterial::_mfSpecularRolloffs field.
inline
const MFReal32 &RampMaterialBase::getSpecularRolloffs(void) const
{
    return _mfSpecularRolloffs;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffPositions field.
inline
Real32 &RampMaterialBase::editSpecularRolloffPositions(const UInt32 index)
{
    return _mfSpecularRolloffPositions[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffPositions field.
inline
const Real32 &RampMaterialBase::getSpecularRolloffPositions(const UInt32 index) const
{
    return _mfSpecularRolloffPositions[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffPositions field.
inline
Real32 &RampMaterialBase::getSpecularRolloffPositions(const UInt32 index)
{
    return _mfSpecularRolloffPositions[index];
}

//! Get the RampMaterial::_mfSpecularRolloffPositions field.
inline
MFReal32 &RampMaterialBase::getSpecularRolloffPositions(void)
{
    return _mfSpecularRolloffPositions;
}

//! Get the RampMaterial::_mfSpecularRolloffPositions field.
inline
const MFReal32 &RampMaterialBase::getSpecularRolloffPositions(void) const
{
    return _mfSpecularRolloffPositions;
}

#endif

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
UInt8 &RampMaterialBase::editSpecularRolloffInterpolations(const UInt32 index)
{
    return _mfSpecularRolloffInterpolations[index];
}

//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
const UInt8 &RampMaterialBase::getSpecularRolloffInterpolations(const UInt32 index) const
{
    return _mfSpecularRolloffInterpolations[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
UInt8 &RampMaterialBase::getSpecularRolloffInterpolations(const UInt32 index)
{
    return _mfSpecularRolloffInterpolations[index];
}

//! Get the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
MFUInt8 &RampMaterialBase::getSpecularRolloffInterpolations(void)
{
    return _mfSpecularRolloffInterpolations;
}

//! Get the RampMaterial::_mfSpecularRolloffInterpolations field.
inline
const MFUInt8 &RampMaterialBase::getSpecularRolloffInterpolations(void) const
{
    return _mfSpecularRolloffInterpolations;
}

#endif

OSG_END_NAMESPACE

