/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FieldContainerComboBoxModel!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#define OSG_COMPILEFIELDCONTAINERCOMBOBOXMODELINST

#include <stdlib.h>
#include <stdio.h>

#include <OpenSG/OSGConfig.h>

#include "OSGFieldContainerComboBoxModelBase.h"
#include "OSGFieldContainerComboBoxModel.h"


OSG_BEGIN_NAMESPACE

const OSG::BitVector  FieldContainerComboBoxModelBase::FieldContainerTypesFieldMask = 
    (TypeTraits<BitVector>::One << FieldContainerComboBoxModelBase::FieldContainerTypesFieldId);

const OSG::BitVector  FieldContainerComboBoxModelBase::InternalFieldContainerTypesFieldMask = 
    (TypeTraits<BitVector>::One << FieldContainerComboBoxModelBase::InternalFieldContainerTypesFieldId);

const OSG::BitVector  FieldContainerComboBoxModelBase::IncludeAbstractFieldMask = 
    (TypeTraits<BitVector>::One << FieldContainerComboBoxModelBase::IncludeAbstractFieldId);

const OSG::BitVector FieldContainerComboBoxModelBase::MTInfluenceMask = 
    (Inherited::MTInfluenceMask) | 
    (static_cast<BitVector>(0x0) << Inherited::NextFieldId); 


// Field descriptions

/*! \var std::string     FieldContainerComboBoxModelBase::_mfFieldContainerTypes
    
*/
/*! \var UInt32          FieldContainerComboBoxModelBase::_mfInternalFieldContainerTypes
    
*/
/*! \var bool            FieldContainerComboBoxModelBase::_sfIncludeAbstract
    
*/

//! FieldContainerComboBoxModel description

FieldDescription *FieldContainerComboBoxModelBase::_desc[] = 
{
    new FieldDescription(MFString::getClassType(), 
                     "FieldContainerTypes", 
                     FieldContainerTypesFieldId, FieldContainerTypesFieldMask,
                     false,
                     (FieldAccessMethod) &FieldContainerComboBoxModelBase::getMFFieldContainerTypes),
    new FieldDescription(MFUInt32::getClassType(), 
                     "InternalFieldContainerTypes", 
                     InternalFieldContainerTypesFieldId, InternalFieldContainerTypesFieldMask,
                     true,
                     (FieldAccessMethod) &FieldContainerComboBoxModelBase::getMFInternalFieldContainerTypes),
    new FieldDescription(SFBool::getClassType(), 
                     "IncludeAbstract", 
                     IncludeAbstractFieldId, IncludeAbstractFieldMask,
                     true,
                     (FieldAccessMethod) &FieldContainerComboBoxModelBase::getSFIncludeAbstract)
};


FieldContainerType FieldContainerComboBoxModelBase::_type(
    "FieldContainerComboBoxModel",
    "AbstractComboBoxModel",
    NULL,
    (PrototypeCreateF) &FieldContainerComboBoxModelBase::createEmpty,
    FieldContainerComboBoxModel::initMethod,
    _desc,
    sizeof(_desc));

//OSG_FIELD_CONTAINER_DEF(FieldContainerComboBoxModelBase, FieldContainerComboBoxModelPtr)

/*------------------------------ get -----------------------------------*/

FieldContainerType &FieldContainerComboBoxModelBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &FieldContainerComboBoxModelBase::getType(void) const 
{
    return _type;
} 


FieldContainerPtr FieldContainerComboBoxModelBase::shallowCopy(void) const 
{ 
    FieldContainerComboBoxModelPtr returnValue; 

    newPtr(returnValue, dynamic_cast<const FieldContainerComboBoxModel *>(this)); 

    return returnValue; 
}

UInt32 FieldContainerComboBoxModelBase::getContainerSize(void) const 
{ 
    return sizeof(FieldContainerComboBoxModel); 
}


#if !defined(OSG_FIXED_MFIELDSYNC)
void FieldContainerComboBoxModelBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField)
{
    this->executeSyncImpl((FieldContainerComboBoxModelBase *) &other, whichField);
}
#else
void FieldContainerComboBoxModelBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField,                                    const SyncInfo       &sInfo     )
{
    this->executeSyncImpl((FieldContainerComboBoxModelBase *) &other, whichField, sInfo);
}
void FieldContainerComboBoxModelBase::execBeginEdit(const BitVector &whichField, 
                                            UInt32     uiAspect,
                                            UInt32     uiContainerSize) 
{
    this->execBeginEditImpl(whichField, uiAspect, uiContainerSize);
}

void FieldContainerComboBoxModelBase::onDestroyAspect(UInt32 uiId, UInt32 uiAspect)
{
    Inherited::onDestroyAspect(uiId, uiAspect);

    _mfFieldContainerTypes.terminateShare(uiAspect, this->getContainerSize());
    _mfInternalFieldContainerTypes.terminateShare(uiAspect, this->getContainerSize());
}
#endif

/*------------------------- constructors ----------------------------------*/

#ifdef OSG_WIN32_ICL
#pragma warning (disable : 383)
#endif

FieldContainerComboBoxModelBase::FieldContainerComboBoxModelBase(void) :
    _mfFieldContainerTypes    (), 
    _mfInternalFieldContainerTypes(), 
    _sfIncludeAbstract        (bool(true)), 
    Inherited() 
{
}

#ifdef OSG_WIN32_ICL
#pragma warning (default : 383)
#endif

FieldContainerComboBoxModelBase::FieldContainerComboBoxModelBase(const FieldContainerComboBoxModelBase &source) :
    _mfFieldContainerTypes    (source._mfFieldContainerTypes    ), 
    _mfInternalFieldContainerTypes(source._mfInternalFieldContainerTypes), 
    _sfIncludeAbstract        (source._sfIncludeAbstract        ), 
    Inherited                 (source)
{
}

/*-------------------------- destructors ----------------------------------*/

FieldContainerComboBoxModelBase::~FieldContainerComboBoxModelBase(void)
{
}

/*------------------------------ access -----------------------------------*/

UInt32 FieldContainerComboBoxModelBase::getBinSize(const BitVector &whichField)
{
    UInt32 returnValue = Inherited::getBinSize(whichField);

    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
    {
        returnValue += _mfFieldContainerTypes.getBinSize();
    }

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
    {
        returnValue += _mfInternalFieldContainerTypes.getBinSize();
    }

    if(FieldBits::NoField != (IncludeAbstractFieldMask & whichField))
    {
        returnValue += _sfIncludeAbstract.getBinSize();
    }


    return returnValue;
}

void FieldContainerComboBoxModelBase::copyToBin(      BinaryDataHandler &pMem,
                                  const BitVector         &whichField)
{
    Inherited::copyToBin(pMem, whichField);

    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
    {
        _mfFieldContainerTypes.copyToBin(pMem);
    }

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
    {
        _mfInternalFieldContainerTypes.copyToBin(pMem);
    }

    if(FieldBits::NoField != (IncludeAbstractFieldMask & whichField))
    {
        _sfIncludeAbstract.copyToBin(pMem);
    }


}

void FieldContainerComboBoxModelBase::copyFromBin(      BinaryDataHandler &pMem,
                                    const BitVector    &whichField)
{
    Inherited::copyFromBin(pMem, whichField);

    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
    {
        _mfFieldContainerTypes.copyFromBin(pMem);
    }

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
    {
        _mfInternalFieldContainerTypes.copyFromBin(pMem);
    }

    if(FieldBits::NoField != (IncludeAbstractFieldMask & whichField))
    {
        _sfIncludeAbstract.copyFromBin(pMem);
    }


}

#if !defined(OSG_FIXED_MFIELDSYNC)
void FieldContainerComboBoxModelBase::executeSyncImpl(      FieldContainerComboBoxModelBase *pOther,
                                        const BitVector         &whichField)
{

    Inherited::executeSyncImpl(pOther, whichField);

    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
        _mfFieldContainerTypes.syncWith(pOther->_mfFieldContainerTypes);

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
        _mfInternalFieldContainerTypes.syncWith(pOther->_mfInternalFieldContainerTypes);

    if(FieldBits::NoField != (IncludeAbstractFieldMask & whichField))
        _sfIncludeAbstract.syncWith(pOther->_sfIncludeAbstract);


}
#else
void FieldContainerComboBoxModelBase::executeSyncImpl(      FieldContainerComboBoxModelBase *pOther,
                                        const BitVector         &whichField,
                                        const SyncInfo          &sInfo      )
{

    Inherited::executeSyncImpl(pOther, whichField, sInfo);

    if(FieldBits::NoField != (IncludeAbstractFieldMask & whichField))
        _sfIncludeAbstract.syncWith(pOther->_sfIncludeAbstract);


    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
        _mfFieldContainerTypes.syncWith(pOther->_mfFieldContainerTypes, sInfo);

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
        _mfInternalFieldContainerTypes.syncWith(pOther->_mfInternalFieldContainerTypes, sInfo);


}

void FieldContainerComboBoxModelBase::execBeginEditImpl (const BitVector &whichField, 
                                                 UInt32     uiAspect,
                                                 UInt32     uiContainerSize)
{
    Inherited::execBeginEditImpl(whichField, uiAspect, uiContainerSize);

    if(FieldBits::NoField != (FieldContainerTypesFieldMask & whichField))
        _mfFieldContainerTypes.beginEdit(uiAspect, uiContainerSize);

    if(FieldBits::NoField != (InternalFieldContainerTypesFieldMask & whichField))
        _mfInternalFieldContainerTypes.beginEdit(uiAspect, uiContainerSize);

}
#endif



OSG_END_NAMESPACE

#include <OpenSG/OSGSFieldTypeDef.inl>
#include <OpenSG/OSGMFieldTypeDef.inl>

OSG_BEGIN_NAMESPACE

#if !defined(OSG_DO_DOC) || defined(OSG_DOC_DEV)
DataType FieldDataTraits<FieldContainerComboBoxModelPtr>::_type("FieldContainerComboBoxModelPtr", "AbstractComboBoxModelPtr");
#endif

OSG_DLLEXPORT_SFIELD_DEF1(FieldContainerComboBoxModelPtr, OSG_USERINTERFACELIB_DLLTMPLMAPPING);
OSG_DLLEXPORT_MFIELD_DEF1(FieldContainerComboBoxModelPtr, OSG_USERINTERFACELIB_DLLTMPLMAPPING);


/*------------------------------------------------------------------------*/
/*                              cvs id's                                  */

#ifdef OSG_SGI_CC
#pragma set woff 1174
#endif

#ifdef OSG_LINUX_ICC
#pragma warning( disable : 177 )
#endif

namespace
{
    static Char8 cvsid_cpp       [] = "@(#)$Id: FCBaseTemplate_cpp.h,v 1.47 2006/03/17 17:03:19 pdaehne Exp $";
    static Char8 cvsid_hpp       [] = OSGFIELDCONTAINERCOMBOBOXMODELBASE_HEADER_CVSID;
    static Char8 cvsid_inl       [] = OSGFIELDCONTAINERCOMBOBOXMODELBASE_INLINE_CVSID;

    static Char8 cvsid_fields_hpp[] = OSGFIELDCONTAINERCOMBOBOXMODELFIELDS_HEADER_CVSID;
}

OSG_END_NAMESPACE

