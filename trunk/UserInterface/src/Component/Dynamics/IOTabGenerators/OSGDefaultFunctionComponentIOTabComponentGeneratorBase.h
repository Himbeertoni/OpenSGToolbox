/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DefaultFunctionComponentIOTabComponentGenerator
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDEFAULTFUNCTIONCOMPONENTIOTABCOMPONENTGENERATORBASE_H_
#define _OSGDEFAULTFUNCTIONCOMPONENTIOTABCOMPONENTGENERATORBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGUserInterfaceDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGFunctionComponentIOTabComponentGenerator.h" // Parent

#include <OpenSG/OSGVec2fFields.h> // TabTextSource type
#include <OpenSG/OSGBoolFields.h> // EnableTooltip type
#include <OpenSG/OSGTimeFields.h> // TooltipTime type
#include <OpenSG/OSGTimeFields.h> // TooltipTextSource type
#include "Component/OSGComponentFields.h" // DefaultTab type
#include <OpenSG/OSGColor4fFields.h> // FocusedTextColor type
#include <OpenSG/OSGColor4fFields.h> // RolloverTextColor type
#include <OpenSG/OSGColor4fFields.h> // DisabledTextColor type
#include <OpenSG/OSGColor4fFields.h> // TextColor type
#include <OpenSG/OSGColor4fFields.h> // DragToTextColor type
#include <OpenSG/OSGColor4fFields.h> // DragFromTextColor type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // FocusedDrawObject type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // RolloverDrawObject type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // DisabledDrawObject type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // DrawObject type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // DragToDrawObject type
#include "Component/Misc/OSGUIDrawObjectCanvas.h" // DragFromDrawObject type

#include "OSGDefaultFunctionComponentIOTabComponentGeneratorFields.h"

OSG_BEGIN_NAMESPACE

class DefaultFunctionComponentIOTabComponentGenerator;
class BinaryDataHandler;

//! \brief DefaultFunctionComponentIOTabComponentGenerator Base Class.

class OSG_USERINTERFACELIB_DLLMAPPING DefaultFunctionComponentIOTabComponentGeneratorBase : public FunctionComponentIOTabComponentGenerator
{
  private:

    typedef FunctionComponentIOTabComponentGenerator    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef DefaultFunctionComponentIOTabComponentGeneratorPtr  Ptr;

    enum
    {
        TabTextSourceFieldId      = Inherited::NextFieldId,
        EnableTooltipFieldId      = TabTextSourceFieldId      + 1,
        TooltipTimeFieldId        = EnableTooltipFieldId      + 1,
        TooltipTextSourceFieldId  = TooltipTimeFieldId        + 1,
        DefaultTabFieldId         = TooltipTextSourceFieldId  + 1,
        FocusedTextColorFieldId   = DefaultTabFieldId         + 1,
        RolloverTextColorFieldId  = FocusedTextColorFieldId   + 1,
        DisabledTextColorFieldId  = RolloverTextColorFieldId  + 1,
        TextColorFieldId          = DisabledTextColorFieldId  + 1,
        DragToTextColorFieldId    = TextColorFieldId          + 1,
        DragFromTextColorFieldId  = DragToTextColorFieldId    + 1,
        FocusedDrawObjectFieldId  = DragFromTextColorFieldId  + 1,
        RolloverDrawObjectFieldId = FocusedDrawObjectFieldId  + 1,
        DisabledDrawObjectFieldId = RolloverDrawObjectFieldId + 1,
        DrawObjectFieldId         = DisabledDrawObjectFieldId + 1,
        DragToDrawObjectFieldId   = DrawObjectFieldId         + 1,
        DragFromDrawObjectFieldId = DragToDrawObjectFieldId   + 1,
        NextFieldId               = DragFromDrawObjectFieldId + 1
    };

    static const OSG::BitVector TabTextSourceFieldMask;
    static const OSG::BitVector EnableTooltipFieldMask;
    static const OSG::BitVector TooltipTimeFieldMask;
    static const OSG::BitVector TooltipTextSourceFieldMask;
    static const OSG::BitVector DefaultTabFieldMask;
    static const OSG::BitVector FocusedTextColorFieldMask;
    static const OSG::BitVector RolloverTextColorFieldMask;
    static const OSG::BitVector DisabledTextColorFieldMask;
    static const OSG::BitVector TextColorFieldMask;
    static const OSG::BitVector DragToTextColorFieldMask;
    static const OSG::BitVector DragFromTextColorFieldMask;
    static const OSG::BitVector FocusedDrawObjectFieldMask;
    static const OSG::BitVector RolloverDrawObjectFieldMask;
    static const OSG::BitVector DisabledDrawObjectFieldMask;
    static const OSG::BitVector DrawObjectFieldMask;
    static const OSG::BitVector DragToDrawObjectFieldMask;
    static const OSG::BitVector DragFromDrawObjectFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFVec2f             *getSFTabTextSource  (void);
           SFBool              *getSFEnableTooltip  (void);
           SFTime              *getSFTooltipTime    (void);
           SFTime              *getSFTooltipTextSource(void);
           SFComponentPtr      *getSFDefaultTab     (void);
           SFColor4f           *getSFFocusedTextColor(void);
           SFColor4f           *getSFRolloverTextColor(void);
           SFColor4f           *getSFDisabledTextColor(void);
           SFColor4f           *getSFTextColor      (void);
           SFColor4f           *getSFDragToTextColor(void);
           SFColor4f           *getSFDragFromTextColor(void);
           SFUIDrawObjectCanvasPtr *getSFFocusedDrawObject(void);
           SFUIDrawObjectCanvasPtr *getSFRolloverDrawObject(void);
           SFUIDrawObjectCanvasPtr *getSFDisabledDrawObject(void);
           SFUIDrawObjectCanvasPtr *getSFDrawObject     (void);
           SFUIDrawObjectCanvasPtr *getSFDragToDrawObject(void);
           SFUIDrawObjectCanvasPtr *getSFDragFromDrawObject(void);

           Vec2f               &getTabTextSource  (void);
     const Vec2f               &getTabTextSource  (void) const;
           bool                &getEnableTooltip  (void);
     const bool                &getEnableTooltip  (void) const;
           Time                &getTooltipTime    (void);
     const Time                &getTooltipTime    (void) const;
           Time                &getTooltipTextSource(void);
     const Time                &getTooltipTextSource(void) const;
           ComponentPtr        &getDefaultTab     (void);
     const ComponentPtr        &getDefaultTab     (void) const;
           Color4f             &getFocusedTextColor(void);
     const Color4f             &getFocusedTextColor(void) const;
           Color4f             &getRolloverTextColor(void);
     const Color4f             &getRolloverTextColor(void) const;
           Color4f             &getDisabledTextColor(void);
     const Color4f             &getDisabledTextColor(void) const;
           Color4f             &getTextColor      (void);
     const Color4f             &getTextColor      (void) const;
           Color4f             &getDragToTextColor(void);
     const Color4f             &getDragToTextColor(void) const;
           Color4f             &getDragFromTextColor(void);
     const Color4f             &getDragFromTextColor(void) const;
           UIDrawObjectCanvasPtr &getFocusedDrawObject(void);
     const UIDrawObjectCanvasPtr &getFocusedDrawObject(void) const;
           UIDrawObjectCanvasPtr &getRolloverDrawObject(void);
     const UIDrawObjectCanvasPtr &getRolloverDrawObject(void) const;
           UIDrawObjectCanvasPtr &getDisabledDrawObject(void);
     const UIDrawObjectCanvasPtr &getDisabledDrawObject(void) const;
           UIDrawObjectCanvasPtr &getDrawObject     (void);
     const UIDrawObjectCanvasPtr &getDrawObject     (void) const;
           UIDrawObjectCanvasPtr &getDragToDrawObject(void);
     const UIDrawObjectCanvasPtr &getDragToDrawObject(void) const;
           UIDrawObjectCanvasPtr &getDragFromDrawObject(void);
     const UIDrawObjectCanvasPtr &getDragFromDrawObject(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setTabTextSource  ( const Vec2f &value );
     void setEnableTooltip  ( const bool &value );
     void setTooltipTime    ( const Time &value );
     void setTooltipTextSource( const Time &value );
     void setDefaultTab     ( const ComponentPtr &value );
     void setFocusedTextColor( const Color4f &value );
     void setRolloverTextColor( const Color4f &value );
     void setDisabledTextColor( const Color4f &value );
     void setTextColor      ( const Color4f &value );
     void setDragToTextColor( const Color4f &value );
     void setDragFromTextColor( const Color4f &value );
     void setFocusedDrawObject( const UIDrawObjectCanvasPtr &value );
     void setRolloverDrawObject( const UIDrawObjectCanvasPtr &value );
     void setDisabledDrawObject( const UIDrawObjectCanvasPtr &value );
     void setDrawObject     ( const UIDrawObjectCanvasPtr &value );
     void setDragToDrawObject( const UIDrawObjectCanvasPtr &value );
     void setDragFromDrawObject( const UIDrawObjectCanvasPtr &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  DefaultFunctionComponentIOTabComponentGeneratorPtr      create          (void); 
    static  DefaultFunctionComponentIOTabComponentGeneratorPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFVec2f             _sfTabTextSource;
    SFBool              _sfEnableTooltip;
    SFTime              _sfTooltipTime;
    SFTime              _sfTooltipTextSource;
    SFComponentPtr      _sfDefaultTab;
    SFColor4f           _sfFocusedTextColor;
    SFColor4f           _sfRolloverTextColor;
    SFColor4f           _sfDisabledTextColor;
    SFColor4f           _sfTextColor;
    SFColor4f           _sfDragToTextColor;
    SFColor4f           _sfDragFromTextColor;
    SFUIDrawObjectCanvasPtr   _sfFocusedDrawObject;
    SFUIDrawObjectCanvasPtr   _sfRolloverDrawObject;
    SFUIDrawObjectCanvasPtr   _sfDisabledDrawObject;
    SFUIDrawObjectCanvasPtr   _sfDrawObject;
    SFUIDrawObjectCanvasPtr   _sfDragToDrawObject;
    SFUIDrawObjectCanvasPtr   _sfDragFromDrawObject;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DefaultFunctionComponentIOTabComponentGeneratorBase(void);
    DefaultFunctionComponentIOTabComponentGeneratorBase(const DefaultFunctionComponentIOTabComponentGeneratorBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DefaultFunctionComponentIOTabComponentGeneratorBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      DefaultFunctionComponentIOTabComponentGeneratorBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      DefaultFunctionComponentIOTabComponentGeneratorBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DefaultFunctionComponentIOTabComponentGeneratorBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef DefaultFunctionComponentIOTabComponentGeneratorBase *DefaultFunctionComponentIOTabComponentGeneratorBaseP;

typedef osgIF<DefaultFunctionComponentIOTabComponentGeneratorBase::isNodeCore,
              CoredNodePtr<DefaultFunctionComponentIOTabComponentGenerator>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet DefaultFunctionComponentIOTabComponentGeneratorNodePtr;

typedef RefPtr<DefaultFunctionComponentIOTabComponentGeneratorPtr> DefaultFunctionComponentIOTabComponentGeneratorRefPtr;

OSG_END_NAMESPACE

#define OSGDEFAULTFUNCTIONCOMPONENTIOTABCOMPONENTGENERATORBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.40 2005/07/20 00:10:14 vossg Exp $"

#endif /* _OSGDEFAULTFUNCTIONCOMPONENTIOTABCOMPONENTGENERATORBASE_H_ */
