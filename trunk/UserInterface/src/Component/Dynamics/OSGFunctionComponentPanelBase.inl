/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *   Authors: David Kabala, Alden Peterson, Lee Zaniewski, Jonathan Flory    *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FunctionComponentPanel!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FunctionComponentPanelBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 FunctionComponentPanelBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
FunctionComponentPanelPtr FunctionComponentPanelBase::create(void) 
{
    FunctionComponentPanelPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = FunctionComponentPanelPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
FunctionComponentPanelPtr FunctionComponentPanelBase::createEmpty(void) 
{ 
    FunctionComponentPanelPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the FunctionComponentPanel::_sfZoom field.
inline
SFReal32 *FunctionComponentPanelBase::getSFZoom(void)
{
    return &_sfZoom;
}

//! Get the FunctionComponentPanel::_sfDrawMiniMap field.
inline
SFBool *FunctionComponentPanelBase::getSFDrawMiniMap(void)
{
    return &_sfDrawMiniMap;
}

//! Get the FunctionComponentPanel::_sfMiniMapSize field.
inline
SFReal32 *FunctionComponentPanelBase::getSFMiniMapSize(void)
{
    return &_sfMiniMapSize;
}

//! Get the FunctionComponentPanel::_sfMiniMapAlignment field.
inline
SFVec2f *FunctionComponentPanelBase::getSFMiniMapAlignment(void)
{
    return &_sfMiniMapAlignment;
}

//! Get the FunctionComponentPanel::_sfZoomedPreferredSize field.
inline
SFVec2f *FunctionComponentPanelBase::getSFZoomedPreferredSize(void)
{
    return &_sfZoomedPreferredSize;
}

//! Get the FunctionComponentPanel::_mfChildrenPositions field.
inline
MFPnt2f *FunctionComponentPanelBase::getMFChildrenPositions(void)
{
    return &_mfChildrenPositions;
}

//! Get the FunctionComponentPanel::_mfChildrenSizes field.
inline
MFVec2f *FunctionComponentPanelBase::getMFChildrenSizes(void)
{
    return &_mfChildrenSizes;
}

//! Get the FunctionComponentPanel::_sfResizeTabsColor field.
inline
SFColor4f *FunctionComponentPanelBase::getSFResizeTabsColor(void)
{
    return &_sfResizeTabsColor;
}

//! Get the FunctionComponentPanel::_sfResizeTabsSize field.
inline
SFVec2f *FunctionComponentPanelBase::getSFResizeTabsSize(void)
{
    return &_sfResizeTabsSize;
}

//! Get the FunctionComponentPanel::_sfResizeAreaOfEffectOffset field.
inline
SFVec2f *FunctionComponentPanelBase::getSFResizeAreaOfEffectOffset(void)
{
    return &_sfResizeAreaOfEffectOffset;
}


//! Get the value of the FunctionComponentPanel::_sfZoom field.
inline
Real32 &FunctionComponentPanelBase::getZoom(void)
{
    return _sfZoom.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfZoom field.
inline
const Real32 &FunctionComponentPanelBase::getZoom(void) const
{
    return _sfZoom.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfZoom field.
inline
void FunctionComponentPanelBase::setZoom(const Real32 &value)
{
    _sfZoom.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfDrawMiniMap field.
inline
bool &FunctionComponentPanelBase::getDrawMiniMap(void)
{
    return _sfDrawMiniMap.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfDrawMiniMap field.
inline
const bool &FunctionComponentPanelBase::getDrawMiniMap(void) const
{
    return _sfDrawMiniMap.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfDrawMiniMap field.
inline
void FunctionComponentPanelBase::setDrawMiniMap(const bool &value)
{
    _sfDrawMiniMap.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfMiniMapSize field.
inline
Real32 &FunctionComponentPanelBase::getMiniMapSize(void)
{
    return _sfMiniMapSize.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfMiniMapSize field.
inline
const Real32 &FunctionComponentPanelBase::getMiniMapSize(void) const
{
    return _sfMiniMapSize.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfMiniMapSize field.
inline
void FunctionComponentPanelBase::setMiniMapSize(const Real32 &value)
{
    _sfMiniMapSize.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfMiniMapAlignment field.
inline
Vec2f &FunctionComponentPanelBase::getMiniMapAlignment(void)
{
    return _sfMiniMapAlignment.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfMiniMapAlignment field.
inline
const Vec2f &FunctionComponentPanelBase::getMiniMapAlignment(void) const
{
    return _sfMiniMapAlignment.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfMiniMapAlignment field.
inline
void FunctionComponentPanelBase::setMiniMapAlignment(const Vec2f &value)
{
    _sfMiniMapAlignment.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfZoomedPreferredSize field.
inline
Vec2f &FunctionComponentPanelBase::getZoomedPreferredSize(void)
{
    return _sfZoomedPreferredSize.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfZoomedPreferredSize field.
inline
const Vec2f &FunctionComponentPanelBase::getZoomedPreferredSize(void) const
{
    return _sfZoomedPreferredSize.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfZoomedPreferredSize field.
inline
void FunctionComponentPanelBase::setZoomedPreferredSize(const Vec2f &value)
{
    _sfZoomedPreferredSize.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfResizeTabsColor field.
inline
Color4f &FunctionComponentPanelBase::getResizeTabsColor(void)
{
    return _sfResizeTabsColor.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfResizeTabsColor field.
inline
const Color4f &FunctionComponentPanelBase::getResizeTabsColor(void) const
{
    return _sfResizeTabsColor.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfResizeTabsColor field.
inline
void FunctionComponentPanelBase::setResizeTabsColor(const Color4f &value)
{
    _sfResizeTabsColor.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfResizeTabsSize field.
inline
Vec2f &FunctionComponentPanelBase::getResizeTabsSize(void)
{
    return _sfResizeTabsSize.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfResizeTabsSize field.
inline
const Vec2f &FunctionComponentPanelBase::getResizeTabsSize(void) const
{
    return _sfResizeTabsSize.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfResizeTabsSize field.
inline
void FunctionComponentPanelBase::setResizeTabsSize(const Vec2f &value)
{
    _sfResizeTabsSize.setValue(value);
}

//! Get the value of the FunctionComponentPanel::_sfResizeAreaOfEffectOffset field.
inline
Vec2f &FunctionComponentPanelBase::getResizeAreaOfEffectOffset(void)
{
    return _sfResizeAreaOfEffectOffset.getValue();
}

//! Get the value of the FunctionComponentPanel::_sfResizeAreaOfEffectOffset field.
inline
const Vec2f &FunctionComponentPanelBase::getResizeAreaOfEffectOffset(void) const
{
    return _sfResizeAreaOfEffectOffset.getValue();
}

//! Set the value of the FunctionComponentPanel::_sfResizeAreaOfEffectOffset field.
inline
void FunctionComponentPanelBase::setResizeAreaOfEffectOffset(const Vec2f &value)
{
    _sfResizeAreaOfEffectOffset.setValue(value);
}


//! Get the value of the \a index element the FunctionComponentPanel::_mfChildrenPositions field.
inline
Pnt2f &FunctionComponentPanelBase::getChildrenPositions(const UInt32 index)
{
    return _mfChildrenPositions[index];
}

//! Get the FunctionComponentPanel::_mfChildrenPositions field.
inline
MFPnt2f &FunctionComponentPanelBase::getChildrenPositions(void)
{
    return _mfChildrenPositions;
}

//! Get the FunctionComponentPanel::_mfChildrenPositions field.
inline
const MFPnt2f &FunctionComponentPanelBase::getChildrenPositions(void) const
{
    return _mfChildrenPositions;
}

//! Get the value of the \a index element the FunctionComponentPanel::_mfChildrenSizes field.
inline
Vec2f &FunctionComponentPanelBase::getChildrenSizes(const UInt32 index)
{
    return _mfChildrenSizes[index];
}

//! Get the FunctionComponentPanel::_mfChildrenSizes field.
inline
MFVec2f &FunctionComponentPanelBase::getChildrenSizes(void)
{
    return _mfChildrenSizes;
}

//! Get the FunctionComponentPanel::_mfChildrenSizes field.
inline
const MFVec2f &FunctionComponentPanelBase::getChildrenSizes(void) const
{
    return _mfChildrenSizes;
}

OSG_END_NAMESPACE

#define OSGFUNCTIONCOMPONENTPANELBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

