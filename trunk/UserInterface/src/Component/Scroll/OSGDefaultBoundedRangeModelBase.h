/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                         www.vrac.iastate.edu                              *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class DefaultBoundedRangeModel
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGDEFAULTBOUNDEDRANGEMODELBASE_H_
#define _OSGDEFAULTBOUNDEDRANGEMODELBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OpenSG/OSGConfig.h>
#include "OSGUserInterfaceDef.h"

#include <OpenSG/OSGBaseTypes.h>
#include <OpenSG/OSGRefPtr.h>
#include <OpenSG/OSGCoredNodePtr.h>

#include "OSGBoundedRangeModel.h" // Parent

#include <OpenSG/OSGInt32Fields.h> // InternalMinimum type
#include <OpenSG/OSGInt32Fields.h> // InternalMaximum type
#include <OpenSG/OSGInt32Fields.h> // InternalValue type
#include <OpenSG/OSGUInt32Fields.h> // InternalExtent type
#include <OpenSG/OSGBoolFields.h> // InternalValueIsAdjusting type

#include "OSGDefaultBoundedRangeModelFields.h"
OSG_BEGIN_NAMESPACE

class DefaultBoundedRangeModel;
class BinaryDataHandler;

//! \brief DefaultBoundedRangeModel Base Class.

class OSG_USERINTERFACELIB_DLLMAPPING DefaultBoundedRangeModelBase : public BoundedRangeModel
{
  private:

    typedef BoundedRangeModel    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef DefaultBoundedRangeModelPtr  Ptr;

    enum
    {
        InternalMinimumFieldId          = Inherited::NextFieldId,
        InternalMaximumFieldId          = InternalMinimumFieldId          + 1,
        InternalValueFieldId            = InternalMaximumFieldId          + 1,
        InternalExtentFieldId           = InternalValueFieldId            + 1,
        InternalValueIsAdjustingFieldId = InternalExtentFieldId           + 1,
        NextFieldId                     = InternalValueIsAdjustingFieldId + 1
    };

    static const OSG::BitVector InternalMinimumFieldMask;
    static const OSG::BitVector InternalMaximumFieldMask;
    static const OSG::BitVector InternalValueFieldMask;
    static const OSG::BitVector InternalExtentFieldMask;
    static const OSG::BitVector InternalValueIsAdjustingFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

     const SFInt32             *getSFInternalMinimum(void) const;
     const SFUInt32            *getSFInternalExtent (void) const;


     const Int32               &getInternalMinimum(void) const;



     const UInt32              &getInternalExtent (void) const;


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  DefaultBoundedRangeModelPtr      create          (void); 
    static  DefaultBoundedRangeModelPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFInt32             _sfInternalMinimum;
    SFInt32             _sfInternalMaximum;
    SFInt32             _sfInternalValue;
    SFUInt32            _sfInternalExtent;
    SFBool              _sfInternalValueIsAdjusting;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    DefaultBoundedRangeModelBase(void);
    DefaultBoundedRangeModelBase(const DefaultBoundedRangeModelBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~DefaultBoundedRangeModelBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFInt32             *editSFInternalMinimum(void);
           SFInt32             *editSFInternalMaximum(void);
     const SFInt32             *getSFInternalMaximum(void) const;
           SFInt32             *editSFInternalValue  (void);
     const SFInt32             *getSFInternalValue  (void) const;
           SFUInt32            *editSFInternalExtent (void);
           SFBool              *editSFInternalValueIsAdjusting(void);
     const SFBool              *getSFInternalValueIsAdjusting(void) const;

           Int32               &editInternalMinimum(void);
           Int32               &editInternalMaximum(void);
     const Int32               &getInternalMaximum(void) const;
           Int32               &editInternalValue  (void);
     const Int32               &getInternalValue  (void) const;
           UInt32              &editInternalExtent (void);
           bool                &editInternalValueIsAdjusting(void);
     const bool                &getInternalValueIsAdjusting(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setInternalMinimum(const Int32 &value);
     void setInternalMaximum(const Int32 &value);
     void setInternalValue  (const Int32 &value);
     void setInternalExtent (const UInt32 &value);
     void setInternalValueIsAdjusting(const bool &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      DefaultBoundedRangeModelBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      DefaultBoundedRangeModelBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const DefaultBoundedRangeModelBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef DefaultBoundedRangeModelBase *DefaultBoundedRangeModelBaseP;

typedef osgIF<DefaultBoundedRangeModelBase::isNodeCore,
              CoredNodePtr<DefaultBoundedRangeModel>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet DefaultBoundedRangeModelNodePtr;

typedef RefPtr<DefaultBoundedRangeModelPtr> DefaultBoundedRangeModelRefPtr;

OSG_END_NAMESPACE

#endif /* _OSGDEFAULTBOUNDEDRANGEMODELBASE_H_ */
