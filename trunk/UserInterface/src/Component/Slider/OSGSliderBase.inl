/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Slider!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SliderBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 SliderBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
SliderPtr SliderBase::create(void) 
{
    SliderPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = SliderPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
SliderPtr SliderBase::createEmpty(void) 
{ 
    SliderPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the Slider::_sfKnobButton field.
inline
SFButtonPtr *SliderBase::getSFKnobButton(void)
{
    return &_sfKnobButton;
}

//! Get the Slider::_sfOrientation field.
inline
SFUInt32 *SliderBase::getSFOrientation(void)
{
    return &_sfOrientation;
}

//! Get the Slider::_sfMajorTickSpacing field.
inline
SFUInt32 *SliderBase::getSFMajorTickSpacing(void)
{
    return &_sfMajorTickSpacing;
}

//! Get the Slider::_mfMajorTickPositions field.
inline
MFPnt2s *SliderBase::getMFMajorTickPositions(void)
{
    return &_mfMajorTickPositions;
}

//! Get the Slider::_sfMinorTickSpacing field.
inline
SFUInt32 *SliderBase::getSFMinorTickSpacing(void)
{
    return &_sfMinorTickSpacing;
}

//! Get the Slider::_mfMinorTickPositions field.
inline
MFPnt2s *SliderBase::getMFMinorTickPositions(void)
{
    return &_mfMinorTickPositions;
}

//! Get the Slider::_sfSnapToTicks field.
inline
SFBool *SliderBase::getSFSnapToTicks(void)
{
    return &_sfSnapToTicks;
}

//! Get the Slider::_sfDrawMajorTicks field.
inline
SFBool *SliderBase::getSFDrawMajorTicks(void)
{
    return &_sfDrawMajorTicks;
}

//! Get the Slider::_sfDrawTrack field.
inline
SFBool *SliderBase::getSFDrawTrack(void)
{
    return &_sfDrawTrack;
}

//! Get the Slider::_sfDrawMinorTicks field.
inline
SFBool *SliderBase::getSFDrawMinorTicks(void)
{
    return &_sfDrawMinorTicks;
}

//! Get the Slider::_sfDrawLabels field.
inline
SFBool *SliderBase::getSFDrawLabels(void)
{
    return &_sfDrawLabels;
}

//! Get the Slider::_sfInverted field.
inline
SFBool *SliderBase::getSFInverted(void)
{
    return &_sfInverted;
}

//! Get the Slider::_sfLabelMap field.
inline
SFFieldContainerMap *SliderBase::getSFLabelMap(void)
{
    return &_sfLabelMap;
}

//! Get the Slider::_sfLabelPrototype field.
inline
SFLabelPtr *SliderBase::getSFLabelPrototype(void)
{
    return &_sfLabelPrototype;
}

//! Get the Slider::_sfTrackDrawObject field.
inline
SFUIDrawObjectCanvasPtr *SliderBase::getSFTrackDrawObject(void)
{
    return &_sfTrackDrawObject;
}

//! Get the Slider::_sfMinTrackDrawObject field.
inline
SFUIDrawObjectCanvasPtr *SliderBase::getSFMinTrackDrawObject(void)
{
    return &_sfMinTrackDrawObject;
}

//! Get the Slider::_sfMaxTrackDrawObject field.
inline
SFUIDrawObjectCanvasPtr *SliderBase::getSFMaxTrackDrawObject(void)
{
    return &_sfMaxTrackDrawObject;
}

//! Get the Slider::_mfMajorTickDrawObjects field.
inline
MFUIDrawObjectPtr *SliderBase::getMFMajorTickDrawObjects(void)
{
    return &_mfMajorTickDrawObjects;
}

//! Get the Slider::_mfMinorTickDrawObjects field.
inline
MFUIDrawObjectPtr *SliderBase::getMFMinorTickDrawObjects(void)
{
    return &_mfMinorTickDrawObjects;
}

//! Get the Slider::_sfTrackInset field.
inline
SFInt32 *SliderBase::getSFTrackInset(void)
{
    return &_sfTrackInset;
}

//! Get the Slider::_sfTrackToTickOffset field.
inline
SFInt32 *SliderBase::getSFTrackToTickOffset(void)
{
    return &_sfTrackToTickOffset;
}

//! Get the Slider::_sfTrackToLabelOffset field.
inline
SFInt32 *SliderBase::getSFTrackToLabelOffset(void)
{
    return &_sfTrackToLabelOffset;
}

//! Get the Slider::_sfRangeModel field.
inline
SFBoundedRangeModelPtr *SliderBase::getSFRangeModel(void)
{
    return &_sfRangeModel;
}


//! Get the value of the Slider::_sfKnobButton field.
inline
ButtonPtr &SliderBase::getKnobButton(void)
{
    return _sfKnobButton.getValue();
}

//! Get the value of the Slider::_sfKnobButton field.
inline
const ButtonPtr &SliderBase::getKnobButton(void) const
{
    return _sfKnobButton.getValue();
}

//! Set the value of the Slider::_sfKnobButton field.
inline
void SliderBase::setKnobButton(const ButtonPtr &value)
{
    _sfKnobButton.setValue(value);
}

//! Get the value of the Slider::_sfOrientation field.
inline
UInt32 &SliderBase::getOrientation(void)
{
    return _sfOrientation.getValue();
}

//! Get the value of the Slider::_sfOrientation field.
inline
const UInt32 &SliderBase::getOrientation(void) const
{
    return _sfOrientation.getValue();
}

//! Set the value of the Slider::_sfOrientation field.
inline
void SliderBase::setOrientation(const UInt32 &value)
{
    _sfOrientation.setValue(value);
}

//! Get the value of the Slider::_sfMajorTickSpacing field.
inline
UInt32 &SliderBase::getMajorTickSpacing(void)
{
    return _sfMajorTickSpacing.getValue();
}

//! Get the value of the Slider::_sfMajorTickSpacing field.
inline
const UInt32 &SliderBase::getMajorTickSpacing(void) const
{
    return _sfMajorTickSpacing.getValue();
}

//! Set the value of the Slider::_sfMajorTickSpacing field.
inline
void SliderBase::setMajorTickSpacing(const UInt32 &value)
{
    _sfMajorTickSpacing.setValue(value);
}

//! Get the value of the Slider::_sfMinorTickSpacing field.
inline
UInt32 &SliderBase::getMinorTickSpacing(void)
{
    return _sfMinorTickSpacing.getValue();
}

//! Get the value of the Slider::_sfMinorTickSpacing field.
inline
const UInt32 &SliderBase::getMinorTickSpacing(void) const
{
    return _sfMinorTickSpacing.getValue();
}

//! Set the value of the Slider::_sfMinorTickSpacing field.
inline
void SliderBase::setMinorTickSpacing(const UInt32 &value)
{
    _sfMinorTickSpacing.setValue(value);
}

//! Get the value of the Slider::_sfSnapToTicks field.
inline
bool &SliderBase::getSnapToTicks(void)
{
    return _sfSnapToTicks.getValue();
}

//! Get the value of the Slider::_sfSnapToTicks field.
inline
const bool &SliderBase::getSnapToTicks(void) const
{
    return _sfSnapToTicks.getValue();
}

//! Set the value of the Slider::_sfSnapToTicks field.
inline
void SliderBase::setSnapToTicks(const bool &value)
{
    _sfSnapToTicks.setValue(value);
}

//! Get the value of the Slider::_sfDrawMajorTicks field.
inline
bool &SliderBase::getDrawMajorTicks(void)
{
    return _sfDrawMajorTicks.getValue();
}

//! Get the value of the Slider::_sfDrawMajorTicks field.
inline
const bool &SliderBase::getDrawMajorTicks(void) const
{
    return _sfDrawMajorTicks.getValue();
}

//! Set the value of the Slider::_sfDrawMajorTicks field.
inline
void SliderBase::setDrawMajorTicks(const bool &value)
{
    _sfDrawMajorTicks.setValue(value);
}

//! Get the value of the Slider::_sfDrawTrack field.
inline
bool &SliderBase::getDrawTrack(void)
{
    return _sfDrawTrack.getValue();
}

//! Get the value of the Slider::_sfDrawTrack field.
inline
const bool &SliderBase::getDrawTrack(void) const
{
    return _sfDrawTrack.getValue();
}

//! Set the value of the Slider::_sfDrawTrack field.
inline
void SliderBase::setDrawTrack(const bool &value)
{
    _sfDrawTrack.setValue(value);
}

//! Get the value of the Slider::_sfDrawMinorTicks field.
inline
bool &SliderBase::getDrawMinorTicks(void)
{
    return _sfDrawMinorTicks.getValue();
}

//! Get the value of the Slider::_sfDrawMinorTicks field.
inline
const bool &SliderBase::getDrawMinorTicks(void) const
{
    return _sfDrawMinorTicks.getValue();
}

//! Set the value of the Slider::_sfDrawMinorTicks field.
inline
void SliderBase::setDrawMinorTicks(const bool &value)
{
    _sfDrawMinorTicks.setValue(value);
}

//! Get the value of the Slider::_sfDrawLabels field.
inline
bool &SliderBase::getDrawLabels(void)
{
    return _sfDrawLabels.getValue();
}

//! Get the value of the Slider::_sfDrawLabels field.
inline
const bool &SliderBase::getDrawLabels(void) const
{
    return _sfDrawLabels.getValue();
}

//! Set the value of the Slider::_sfDrawLabels field.
inline
void SliderBase::setDrawLabels(const bool &value)
{
    _sfDrawLabels.setValue(value);
}

//! Get the value of the Slider::_sfInverted field.
inline
bool &SliderBase::getInverted(void)
{
    return _sfInverted.getValue();
}

//! Get the value of the Slider::_sfInverted field.
inline
const bool &SliderBase::getInverted(void) const
{
    return _sfInverted.getValue();
}

//! Set the value of the Slider::_sfInverted field.
inline
void SliderBase::setInverted(const bool &value)
{
    _sfInverted.setValue(value);
}

//! Get the value of the Slider::_sfLabelMap field.
inline
FieldContainerMap &SliderBase::getLabelMap(void)
{
    return _sfLabelMap.getValue();
}

//! Get the value of the Slider::_sfLabelMap field.
inline
const FieldContainerMap &SliderBase::getLabelMap(void) const
{
    return _sfLabelMap.getValue();
}

//! Set the value of the Slider::_sfLabelMap field.
inline
void SliderBase::setLabelMap(const FieldContainerMap &value)
{
    _sfLabelMap.setValue(value);
}

//! Get the value of the Slider::_sfLabelPrototype field.
inline
LabelPtr &SliderBase::getLabelPrototype(void)
{
    return _sfLabelPrototype.getValue();
}

//! Get the value of the Slider::_sfLabelPrototype field.
inline
const LabelPtr &SliderBase::getLabelPrototype(void) const
{
    return _sfLabelPrototype.getValue();
}

//! Set the value of the Slider::_sfLabelPrototype field.
inline
void SliderBase::setLabelPrototype(const LabelPtr &value)
{
    _sfLabelPrototype.setValue(value);
}

//! Get the value of the Slider::_sfTrackDrawObject field.
inline
UIDrawObjectCanvasPtr &SliderBase::getTrackDrawObject(void)
{
    return _sfTrackDrawObject.getValue();
}

//! Get the value of the Slider::_sfTrackDrawObject field.
inline
const UIDrawObjectCanvasPtr &SliderBase::getTrackDrawObject(void) const
{
    return _sfTrackDrawObject.getValue();
}

//! Set the value of the Slider::_sfTrackDrawObject field.
inline
void SliderBase::setTrackDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfTrackDrawObject.setValue(value);
}

//! Get the value of the Slider::_sfMinTrackDrawObject field.
inline
UIDrawObjectCanvasPtr &SliderBase::getMinTrackDrawObject(void)
{
    return _sfMinTrackDrawObject.getValue();
}

//! Get the value of the Slider::_sfMinTrackDrawObject field.
inline
const UIDrawObjectCanvasPtr &SliderBase::getMinTrackDrawObject(void) const
{
    return _sfMinTrackDrawObject.getValue();
}

//! Set the value of the Slider::_sfMinTrackDrawObject field.
inline
void SliderBase::setMinTrackDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfMinTrackDrawObject.setValue(value);
}

//! Get the value of the Slider::_sfMaxTrackDrawObject field.
inline
UIDrawObjectCanvasPtr &SliderBase::getMaxTrackDrawObject(void)
{
    return _sfMaxTrackDrawObject.getValue();
}

//! Get the value of the Slider::_sfMaxTrackDrawObject field.
inline
const UIDrawObjectCanvasPtr &SliderBase::getMaxTrackDrawObject(void) const
{
    return _sfMaxTrackDrawObject.getValue();
}

//! Set the value of the Slider::_sfMaxTrackDrawObject field.
inline
void SliderBase::setMaxTrackDrawObject(const UIDrawObjectCanvasPtr &value)
{
    _sfMaxTrackDrawObject.setValue(value);
}

//! Get the value of the Slider::_sfTrackInset field.
inline
Int32 &SliderBase::getTrackInset(void)
{
    return _sfTrackInset.getValue();
}

//! Get the value of the Slider::_sfTrackInset field.
inline
const Int32 &SliderBase::getTrackInset(void) const
{
    return _sfTrackInset.getValue();
}

//! Set the value of the Slider::_sfTrackInset field.
inline
void SliderBase::setTrackInset(const Int32 &value)
{
    _sfTrackInset.setValue(value);
}

//! Get the value of the Slider::_sfTrackToTickOffset field.
inline
Int32 &SliderBase::getTrackToTickOffset(void)
{
    return _sfTrackToTickOffset.getValue();
}

//! Get the value of the Slider::_sfTrackToTickOffset field.
inline
const Int32 &SliderBase::getTrackToTickOffset(void) const
{
    return _sfTrackToTickOffset.getValue();
}

//! Set the value of the Slider::_sfTrackToTickOffset field.
inline
void SliderBase::setTrackToTickOffset(const Int32 &value)
{
    _sfTrackToTickOffset.setValue(value);
}

//! Get the value of the Slider::_sfTrackToLabelOffset field.
inline
Int32 &SliderBase::getTrackToLabelOffset(void)
{
    return _sfTrackToLabelOffset.getValue();
}

//! Get the value of the Slider::_sfTrackToLabelOffset field.
inline
const Int32 &SliderBase::getTrackToLabelOffset(void) const
{
    return _sfTrackToLabelOffset.getValue();
}

//! Set the value of the Slider::_sfTrackToLabelOffset field.
inline
void SliderBase::setTrackToLabelOffset(const Int32 &value)
{
    _sfTrackToLabelOffset.setValue(value);
}

//! Get the value of the Slider::_sfRangeModel field.
inline
BoundedRangeModelPtr &SliderBase::getRangeModel(void)
{
    return _sfRangeModel.getValue();
}

//! Get the value of the Slider::_sfRangeModel field.
inline
const BoundedRangeModelPtr &SliderBase::getRangeModel(void) const
{
    return _sfRangeModel.getValue();
}

//! Set the value of the Slider::_sfRangeModel field.
inline
void SliderBase::setRangeModel(const BoundedRangeModelPtr &value)
{
    _sfRangeModel.setValue(value);
}


//! Get the value of the \a index element the Slider::_mfMajorTickPositions field.
inline
Pnt2s &SliderBase::getMajorTickPositions(const UInt32 index)
{
    return _mfMajorTickPositions[index];
}

//! Get the Slider::_mfMajorTickPositions field.
inline
MFPnt2s &SliderBase::getMajorTickPositions(void)
{
    return _mfMajorTickPositions;
}

//! Get the Slider::_mfMajorTickPositions field.
inline
const MFPnt2s &SliderBase::getMajorTickPositions(void) const
{
    return _mfMajorTickPositions;
}

//! Get the value of the \a index element the Slider::_mfMinorTickPositions field.
inline
Pnt2s &SliderBase::getMinorTickPositions(const UInt32 index)
{
    return _mfMinorTickPositions[index];
}

//! Get the Slider::_mfMinorTickPositions field.
inline
MFPnt2s &SliderBase::getMinorTickPositions(void)
{
    return _mfMinorTickPositions;
}

//! Get the Slider::_mfMinorTickPositions field.
inline
const MFPnt2s &SliderBase::getMinorTickPositions(void) const
{
    return _mfMinorTickPositions;
}

//! Get the value of the \a index element the Slider::_mfMajorTickDrawObjects field.
inline
UIDrawObjectPtr &SliderBase::getMajorTickDrawObjects(const UInt32 index)
{
    return _mfMajorTickDrawObjects[index];
}

//! Get the Slider::_mfMajorTickDrawObjects field.
inline
MFUIDrawObjectPtr &SliderBase::getMajorTickDrawObjects(void)
{
    return _mfMajorTickDrawObjects;
}

//! Get the Slider::_mfMajorTickDrawObjects field.
inline
const MFUIDrawObjectPtr &SliderBase::getMajorTickDrawObjects(void) const
{
    return _mfMajorTickDrawObjects;
}

//! Get the value of the \a index element the Slider::_mfMinorTickDrawObjects field.
inline
UIDrawObjectPtr &SliderBase::getMinorTickDrawObjects(const UInt32 index)
{
    return _mfMinorTickDrawObjects[index];
}

//! Get the Slider::_mfMinorTickDrawObjects field.
inline
MFUIDrawObjectPtr &SliderBase::getMinorTickDrawObjects(void)
{
    return _mfMinorTickDrawObjects;
}

//! Get the Slider::_mfMinorTickDrawObjects field.
inline
const MFUIDrawObjectPtr &SliderBase::getMinorTickDrawObjects(void) const
{
    return _mfMinorTickDrawObjects;
}

OSG_END_NAMESPACE

#define OSGSLIDERBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.20 2002/12/04 14:22:22 dirk Exp $"

