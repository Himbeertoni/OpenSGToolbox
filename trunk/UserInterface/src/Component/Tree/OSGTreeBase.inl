/*---------------------------------------------------------------------------*\
 *                     OpenSG ToolBox UserInterface                          *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                          Authors: David Kabala                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Tree!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TreeBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 TreeBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
TreePtr TreeBase::create(void) 
{
    TreePtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = TreePtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
TreePtr TreeBase::createEmpty(void) 
{ 
    TreePtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the Tree::_sfModel field.
inline
const SFTreeModelPtr *TreeBase::getSFModel(void) const
{
    return &_sfModel;
}

//! Get the Tree::_sfModel field.
inline
SFTreeModelPtr *TreeBase::editSFModel(void)
{
    return &_sfModel;
}

//! Get the Tree::_sfEditable field.
inline
const SFBool *TreeBase::getSFEditable(void) const
{
    return &_sfEditable;
}

//! Get the Tree::_sfEditable field.
inline
SFBool *TreeBase::editSFEditable(void)
{
    return &_sfEditable;
}

//! Get the Tree::_sfExpandsSelectedPaths field.
inline
const SFBool *TreeBase::getSFExpandsSelectedPaths(void) const
{
    return &_sfExpandsSelectedPaths;
}

//! Get the Tree::_sfExpandsSelectedPaths field.
inline
SFBool *TreeBase::editSFExpandsSelectedPaths(void)
{
    return &_sfExpandsSelectedPaths;
}

//! Get the Tree::_sfInvokesStopCellEditing field.
inline
const SFBool *TreeBase::getSFInvokesStopCellEditing(void) const
{
    return &_sfInvokesStopCellEditing;
}

//! Get the Tree::_sfInvokesStopCellEditing field.
inline
SFBool *TreeBase::editSFInvokesStopCellEditing(void)
{
    return &_sfInvokesStopCellEditing;
}

//! Get the Tree::_sfRowHeight field.
inline
const SFUInt32 *TreeBase::getSFRowHeight(void) const
{
    return &_sfRowHeight;
}

//! Get the Tree::_sfRowHeight field.
inline
SFUInt32 *TreeBase::editSFRowHeight(void)
{
    return &_sfRowHeight;
}

//! Get the Tree::_sfScrollsOnExpand field.
inline
const SFBool *TreeBase::getSFScrollsOnExpand(void) const
{
    return &_sfScrollsOnExpand;
}

//! Get the Tree::_sfScrollsOnExpand field.
inline
SFBool *TreeBase::editSFScrollsOnExpand(void)
{
    return &_sfScrollsOnExpand;
}

//! Get the Tree::_sfShowsRootHandles field.
inline
const SFBool *TreeBase::getSFShowsRootHandles(void) const
{
    return &_sfShowsRootHandles;
}

//! Get the Tree::_sfShowsRootHandles field.
inline
SFBool *TreeBase::editSFShowsRootHandles(void)
{
    return &_sfShowsRootHandles;
}

//! Get the Tree::_sfToggleClickCount field.
inline
const SFUInt32 *TreeBase::getSFToggleClickCount(void) const
{
    return &_sfToggleClickCount;
}

//! Get the Tree::_sfToggleClickCount field.
inline
SFUInt32 *TreeBase::editSFToggleClickCount(void)
{
    return &_sfToggleClickCount;
}

//! Get the Tree::_sfVisibleRowCount field.
inline
const SFUInt32 *TreeBase::getSFVisibleRowCount(void) const
{
    return &_sfVisibleRowCount;
}

//! Get the Tree::_sfVisibleRowCount field.
inline
SFUInt32 *TreeBase::editSFVisibleRowCount(void)
{
    return &_sfVisibleRowCount;
}

//! Get the Tree::_sfCellEditor field.
inline
const SFCellEditorPtr *TreeBase::getSFCellEditor(void) const
{
    return &_sfCellEditor;
}

//! Get the Tree::_sfCellEditor field.
inline
SFCellEditorPtr *TreeBase::editSFCellEditor(void)
{
    return &_sfCellEditor;
}

//! Get the Tree::_sfCellGenerator field.
inline
const SFComponentGeneratorPtr *TreeBase::getSFCellGenerator(void) const
{
    return &_sfCellGenerator;
}

//! Get the Tree::_sfCellGenerator field.
inline
SFComponentGeneratorPtr *TreeBase::editSFCellGenerator(void)
{
    return &_sfCellGenerator;
}

//! Get the Tree::_sfModelLayout field.
inline
const SFTreeModelLayoutPtr *TreeBase::getSFModelLayout(void) const
{
    return &_sfModelLayout;
}

//! Get the Tree::_sfModelLayout field.
inline
SFTreeModelLayoutPtr *TreeBase::editSFModelLayout(void)
{
    return &_sfModelLayout;
}


//! Get the value of the Tree::_sfModel field.
inline
TreeModelPtr &TreeBase::editModel(void)
{
    return _sfModel.getValue();
}

//! Get the value of the Tree::_sfModel field.
inline
const TreeModelPtr &TreeBase::getModel(void) const
{
    return _sfModel.getValue();
}

//! Set the value of the Tree::_sfModel field.
inline
void TreeBase::setModel(const TreeModelPtr &value)
{
    _sfModel.setValue(value);
}

//! Get the value of the Tree::_sfEditable field.
inline
bool &TreeBase::editEditable(void)
{
    return _sfEditable.getValue();
}

//! Get the value of the Tree::_sfEditable field.
inline
const bool &TreeBase::getEditable(void) const
{
    return _sfEditable.getValue();
}

//! Set the value of the Tree::_sfEditable field.
inline
void TreeBase::setEditable(const bool &value)
{
    _sfEditable.setValue(value);
}

//! Get the value of the Tree::_sfExpandsSelectedPaths field.
inline
bool &TreeBase::editExpandsSelectedPaths(void)
{
    return _sfExpandsSelectedPaths.getValue();
}

//! Get the value of the Tree::_sfExpandsSelectedPaths field.
inline
const bool &TreeBase::getExpandsSelectedPaths(void) const
{
    return _sfExpandsSelectedPaths.getValue();
}

//! Set the value of the Tree::_sfExpandsSelectedPaths field.
inline
void TreeBase::setExpandsSelectedPaths(const bool &value)
{
    _sfExpandsSelectedPaths.setValue(value);
}

//! Get the value of the Tree::_sfInvokesStopCellEditing field.
inline
bool &TreeBase::editInvokesStopCellEditing(void)
{
    return _sfInvokesStopCellEditing.getValue();
}

//! Get the value of the Tree::_sfInvokesStopCellEditing field.
inline
const bool &TreeBase::getInvokesStopCellEditing(void) const
{
    return _sfInvokesStopCellEditing.getValue();
}

//! Set the value of the Tree::_sfInvokesStopCellEditing field.
inline
void TreeBase::setInvokesStopCellEditing(const bool &value)
{
    _sfInvokesStopCellEditing.setValue(value);
}

//! Get the value of the Tree::_sfRowHeight field.
inline
UInt32 &TreeBase::editRowHeight(void)
{
    return _sfRowHeight.getValue();
}

//! Get the value of the Tree::_sfRowHeight field.
inline
const UInt32 &TreeBase::getRowHeight(void) const
{
    return _sfRowHeight.getValue();
}

//! Set the value of the Tree::_sfRowHeight field.
inline
void TreeBase::setRowHeight(const UInt32 &value)
{
    _sfRowHeight.setValue(value);
}

//! Get the value of the Tree::_sfScrollsOnExpand field.
inline
bool &TreeBase::editScrollsOnExpand(void)
{
    return _sfScrollsOnExpand.getValue();
}

//! Get the value of the Tree::_sfScrollsOnExpand field.
inline
const bool &TreeBase::getScrollsOnExpand(void) const
{
    return _sfScrollsOnExpand.getValue();
}

//! Set the value of the Tree::_sfScrollsOnExpand field.
inline
void TreeBase::setScrollsOnExpand(const bool &value)
{
    _sfScrollsOnExpand.setValue(value);
}

//! Get the value of the Tree::_sfShowsRootHandles field.
inline
bool &TreeBase::editShowsRootHandles(void)
{
    return _sfShowsRootHandles.getValue();
}

//! Get the value of the Tree::_sfShowsRootHandles field.
inline
const bool &TreeBase::getShowsRootHandles(void) const
{
    return _sfShowsRootHandles.getValue();
}

//! Set the value of the Tree::_sfShowsRootHandles field.
inline
void TreeBase::setShowsRootHandles(const bool &value)
{
    _sfShowsRootHandles.setValue(value);
}

//! Get the value of the Tree::_sfToggleClickCount field.
inline
UInt32 &TreeBase::editToggleClickCount(void)
{
    return _sfToggleClickCount.getValue();
}

//! Get the value of the Tree::_sfToggleClickCount field.
inline
const UInt32 &TreeBase::getToggleClickCount(void) const
{
    return _sfToggleClickCount.getValue();
}

//! Set the value of the Tree::_sfToggleClickCount field.
inline
void TreeBase::setToggleClickCount(const UInt32 &value)
{
    _sfToggleClickCount.setValue(value);
}

//! Get the value of the Tree::_sfVisibleRowCount field.
inline
UInt32 &TreeBase::editVisibleRowCount(void)
{
    return _sfVisibleRowCount.getValue();
}

//! Get the value of the Tree::_sfVisibleRowCount field.
inline
const UInt32 &TreeBase::getVisibleRowCount(void) const
{
    return _sfVisibleRowCount.getValue();
}

//! Set the value of the Tree::_sfVisibleRowCount field.
inline
void TreeBase::setVisibleRowCount(const UInt32 &value)
{
    _sfVisibleRowCount.setValue(value);
}

//! Get the value of the Tree::_sfCellEditor field.
inline
CellEditorPtr &TreeBase::editCellEditor(void)
{
    return _sfCellEditor.getValue();
}

//! Get the value of the Tree::_sfCellEditor field.
inline
const CellEditorPtr &TreeBase::getCellEditor(void) const
{
    return _sfCellEditor.getValue();
}

//! Set the value of the Tree::_sfCellEditor field.
inline
void TreeBase::setCellEditor(const CellEditorPtr &value)
{
    _sfCellEditor.setValue(value);
}

//! Get the value of the Tree::_sfCellGenerator field.
inline
ComponentGeneratorPtr &TreeBase::editCellGenerator(void)
{
    return _sfCellGenerator.getValue();
}

//! Get the value of the Tree::_sfCellGenerator field.
inline
const ComponentGeneratorPtr &TreeBase::getCellGenerator(void) const
{
    return _sfCellGenerator.getValue();
}

//! Set the value of the Tree::_sfCellGenerator field.
inline
void TreeBase::setCellGenerator(const ComponentGeneratorPtr &value)
{
    _sfCellGenerator.setValue(value);
}

//! Get the value of the Tree::_sfModelLayout field.
inline
TreeModelLayoutPtr &TreeBase::editModelLayout(void)
{
    return _sfModelLayout.getValue();
}

//! Get the value of the Tree::_sfModelLayout field.
inline
const TreeModelLayoutPtr &TreeBase::getModelLayout(void) const
{
    return _sfModelLayout.getValue();
}

//! Set the value of the Tree::_sfModelLayout field.
inline
void TreeBase::setModelLayout(const TreeModelLayoutPtr &value)
{
    _sfModelLayout.setValue(value);
}


OSG_END_NAMESPACE

